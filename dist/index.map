{"version":3,"sources":["misc-functions\\context.ts","misc-functions\\creators.ts","consts.ts","misc-functions\\namespace.ts","misc-functions\\group-resources.ts","misc-functions\\file-errors.ts","brigadier\\errors.ts","types.ts","misc-functions\\return-helper.ts","misc-functions\\promisified-fs.ts","misc-functions\\third_party\\typed-keys.ts","misc-functions\\datapack-folder.ts","misc-functions\\translation.ts","misc-functions\\lsp-conversions.ts","misc-functions\\node-tree.ts","data\\cache.ts","misc-functions\\security.ts","misc-functions\\setup.ts","misc-functions\\parsing\\namespace.ts","misc-functions\\parsing\\nmsp-tag.ts","misc-functions\\index.ts","brigadier\\string-reader.ts","parsers\\brigadier\\bool.ts","parsers\\brigadier\\string.ts","parsers\\brigadier\\integer.ts","parsers\\brigadier\\float.ts","parsers\\brigadier\\index.ts","parsers\\literal.ts","parsers\\minecraft\\nbt\\util\\doc-walker-util.ts","parsers\\minecraft\\nbt\\tag\\nbt-tag.ts","parsers\\minecraft\\nbt\\tag\\string-tag.ts","parsers\\minecraft\\nbt\\doc-walker-func.ts","parsers\\minecraft\\nbt\\util\\nbt-util.ts","parsers\\minecraft\\nbt\\tag\\byte-tag.ts","parsers\\minecraft\\nbt\\tag\\byte-array-tag.ts","parsers\\minecraft\\nbt\\tag\\double-tag.ts","parsers\\minecraft\\nbt\\tag\\float-tag.ts","parsers\\minecraft\\nbt\\tag\\int-tag.ts","parsers\\minecraft\\nbt\\tag\\int-array-tag.ts","parsers\\minecraft\\nbt\\tag\\list-tag.ts","parsers\\minecraft\\nbt\\tag\\long-tag.ts","parsers\\minecraft\\nbt\\tag\\long-array-tag.ts","parsers\\minecraft\\nbt\\tag\\short-tag.ts","parsers\\minecraft\\nbt\\tag-parser.ts","parsers\\minecraft\\nbt\\tag\\compound-tag.ts","parsers\\minecraft\\nbt\\util\\array-reader.ts","parsers\\minecraft\\nbt\\doc-walker.ts","parsers\\minecraft\\nbt\\nbt.ts","parsers\\minecraft\\block.ts","parsers\\minecraft\\coordinates.ts","parsers\\minecraft\\item.ts","colors.ts","data\\lists\\item-slot.ts","data\\lists\\scoreboard-slot.ts","data\\lists\\statics.ts","parsers\\minecraft\\lists.ts","parsers\\minecraft\\message.ts","parsers\\minecraft\\namespace-list.ts","parsers\\minecraft\\resources.ts","parsers\\minecraft\\scoreboard.ts","parsers\\minecraft\\nbt-path.ts","parsers\\get-parser.ts","completions.ts","data\\extractor\\mapfunctions.ts","data\\nbt\\buffer-stream.ts","data\\nbt\\parser.ts","data\\nbt\\nbt-cache.ts","data\\datapack-resources.ts","data\\extractor\\collect-data.ts","data\\extractor\\download.ts","data\\extractor\\extract-data.ts","data\\extractor\\index.ts","parsers\\minecraft\\nbt\\doc-fs.ts","data\\noncached.ts","data\\manager.ts","misc-functions\\third_party\\merge-deep.ts","parse.ts","index.ts"],"names":[],"mappings":"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","file":"index.map","sourceRoot":"..\\src","sourcesContent":["import { CommandNodePath } from \"../data/types\";\n\nexport interface ContextPath<T> {\n    data: T;\n    path: CommandNodePath;\n}\n\nexport function resolvePaths<T>(\n    paths: Array<ContextPath<T>>,\n    argPath: CommandNodePath\n): T | undefined {\n    for (const path of paths) {\n        if (stringArrayEqual(argPath, path.path)) {\n            return path.data;\n        }\n    }\n    return undefined;\n}\n\nfunction stringArrayEqual(arr1: string[], arr2: string[]): boolean {\n    return arr1.length === arr2.length && arr1.every((v, i) => v === arr2[i]);\n}\n\nexport function startPaths<T>(\n    paths: Array<ContextPath<T>>,\n    argpath: CommandNodePath\n): T | undefined {\n    let best: [number, T?] = [0, undefined];\n    for (const option of paths) {\n        if (\n            option.path.length > best[0] &&\n            option.path.length <= argpath.length &&\n            option.path.every((v, i) => v === argpath[i])\n        ) {\n            best = [option.path.length, option.data];\n        }\n    }\n    return best[1];\n}\n","import { CommandNode, CommandNodePath } from \"../data/types\";\nimport {\n    CommandContext,\n    CommandLine,\n    CommmandData,\n    ParserInfo\n} from \"../types\";\n\n/**\n * Build parser info from the data required\n */\nexport function createParserInfo(\n    node: CommandNode,\n    data: CommmandData,\n    path: CommandNodePath,\n    context: CommandContext,\n    suggesting: boolean\n): ParserInfo {\n    const result: ParserInfo = {\n        context,\n        data,\n        node_properties: node.properties || {},\n        path,\n        suggesting\n    };\n    return result;\n}\n\n/**\n * Convert a string into CommandLines based on newline characters\n */\nexport function splitLines(text: string): CommandLine[] {\n    return createCommandLines(text.split(/\\r?\\n/));\n}\n\n/**\n * Convert the given string array into a blank CommandLine Array\n */\nexport function createCommandLines(lines: string[]): CommandLine[] {\n    const result: CommandLine[] = [];\n    for (const line of lines) {\n        result.push({ text: line });\n    }\n    return result;\n}\n","export const COMMENT_START = \"#\";\nexport const SPACE = \" \";\n\n// Namespaces\nexport const DEFAULT_NAMESPACE = \"minecraft\";\nexport const NAMESPACE = \":\";\nexport const DATAFOLDER = \"data\";\nexport const SLASH = \"/\";\nexport const SLASHREGEX = /\\//g;\nexport const SLASHREPLACEREGEX = /\\\\/g;\nexport const MCMETAFILE = \"pack.mcmeta\";\n\n// Blocks\nexport const TAG_START = \"#\";\n","import { DEFAULT_NAMESPACE, NAMESPACE } from \"../consts\";\nimport { NamespacedName } from \"../data/types\";\n\nexport function namespacesEqual(\n    first: NamespacedName,\n    second: NamespacedName\n): boolean {\n    return namesEqual(first, second) && first.path === second.path;\n}\n\nexport function namesEqual(\n    first: NamespacedName,\n    second: NamespacedName\n): boolean {\n    return (\n        first.namespace === second.namespace ||\n        (isNamespaceDefault(first) && isNamespaceDefault(second))\n    );\n}\n\nexport function isNamespaceDefault(name: NamespacedName): boolean {\n    return name.namespace === undefined || name.namespace === DEFAULT_NAMESPACE;\n}\n\nexport function stringifyNamespace(namespace: NamespacedName): string {\n    return (\n        (namespace.namespace ? namespace.namespace : DEFAULT_NAMESPACE) +\n        NAMESPACE +\n        namespace.path\n    );\n}\n\nexport function convertToNamespace(\n    input: string,\n    splitChar: string = NAMESPACE\n): NamespacedName {\n    const index = input.indexOf(splitChar);\n    if (index >= 0) {\n        const pathContents = input.substring(\n            index + splitChar.length,\n            input.length\n        );\n        // Path contents should not have a : in the contents, however this is to be checked higher up.\n        // This simplifies using the parsed result when parsing options\n\n        // Related: https://bugs.mojang.com/browse/MC-91245 (Fixed)\n        if (index >= 1) {\n            return { namespace: input.substring(0, index), path: pathContents };\n        } else {\n            return { path: pathContents };\n        }\n    } else {\n        return { path: input };\n    }\n}\n","import {\n    GlobalData,\n    MinecraftResource,\n    NamespacedName,\n    Resources,\n    WorldInfo\n} from \"../data/types\";\nimport { CommmandData } from \"../types\";\nimport { namespacesEqual } from \"./namespace\";\n\nexport function getResourcesofType<\n    T extends MinecraftResource = MinecraftResource\n>(resources: CommmandData, type: keyof Resources): T[] {\n    return getResourcesSplit<T>(\n        type,\n        resources.globalData,\n        resources.localData\n    );\n}\n\nexport function getResourcesSplit<\n    T extends MinecraftResource = MinecraftResource\n>(type: keyof Resources, globalData: GlobalData, packsInfo?: WorldInfo): T[] {\n    const results: MinecraftResource[] = [];\n    const globalResources = globalData.resources[type];\n    if (!!globalResources) {\n        results.push(...globalResources);\n    }\n    if (packsInfo) {\n        for (const packId in packsInfo.packs) {\n            if (packsInfo.packs.hasOwnProperty(packId)) {\n                const pack = packsInfo.packs[packId];\n                if (pack.data.hasOwnProperty(type)) {\n                    const data = pack.data[type];\n                    if (!!data) {\n                        results.push(...data);\n                    }\n                }\n            }\n        }\n    }\n    return results as T[];\n}\n\nexport function getMatching<T extends NamespacedName>(\n    resources: T[],\n    value: T\n): T[] {\n    const results: T[] = [];\n    for (const resource of resources) {\n        if (namespacesEqual(resource, value)) {\n            results.push(resource);\n        }\n    }\n    return results;\n}\n","import { MiscInfo } from \"../types\";\n\nexport function createExtensionFileError(\n    filePath: string,\n    expected: string,\n    actual: string\n): MiscInfo {\n    return {\n        filePath,\n        group: \"extension\",\n        kind: \"FileError\",\n        message: `File has incorrect extension: Expected ${expected}, got ${actual}.`\n    };\n}\n\nexport function createJSONFileError(filePath: string, error: any): MiscInfo {\n    return {\n        filePath,\n        group: \"json\",\n        kind: \"FileError\",\n        message: `JSON parsing failed: '${error}'`\n    };\n}\n\nexport function createFileClear(filePath: string, group?: string): MiscInfo {\n    return { kind: \"ClearError\", filePath, group };\n}\n","import { DiagnosticSeverity } from \"vscode-languageserver/lib/main\";\nimport { MCFormat } from \"../misc-functions\";\nimport { LineRange } from \"../types\";\n\n/**\n * A blank command error\n */\nexport interface BlankCommandError {\n    /**\n     * The code of this error, usable for translation?\n     */\n    code: string;\n    /**\n     * The severity of this error.\n     */\n    severity: DiagnosticSeverity;\n    /**\n     * The substitutions to insert into the error text.\n     */\n    substitutions?: string[];\n    /**\n     * The cached text of this error.\n     */\n    text: string;\n}\n\n/**\n * An error inside a command.\n */\nexport interface CommandError extends BlankCommandError {\n    /**\n     * The range of this error.\n     */\n    range: LineRange;\n}\n\n/**\n * Helper class to create command errors\n */\nexport class CommandErrorBuilder {\n    private readonly code: string;\n    private readonly default: string;\n    private readonly severity: DiagnosticSeverity;\n\n    public constructor(\n        code: string,\n        explanation: string,\n        severity: DiagnosticSeverity = DiagnosticSeverity.Error\n    ) {\n        this.code = code;\n        this.default = explanation;\n        this.severity = severity;\n    }\n\n    public create(\n        start: number,\n        end: number,\n        ...substitutions: string[]\n    ): CommandError {\n        const diagnosis: CommandError = Object.assign(\n            this.createBlank(...substitutions),\n            { range: { start, end } }\n        );\n        return diagnosis;\n    }\n\n    public createBlank(...substitutions: string[]): BlankCommandError {\n        return {\n            code: this.code,\n            severity: this.severity,\n            substitutions,\n            text: MCFormat(this.default, ...substitutions)\n        };\n    }\n}\n\n/**\n * Transform `err` into a real command error.\n * MODIFIES `err`\n * @param err The error to transform\n * @param start The starting location in the line of the error\n * @param end The end position\n */\nexport function fillBlankError(\n    err: BlankCommandError,\n    start: number,\n    end: number\n): CommandError {\n    return { ...err, range: { start, end } };\n}\n","import { DataInterval, Interval, IntervalTree } from \"node-interval-tree\";\nimport {\n    CompletionItemKind,\n    MarkedString\n} from \"vscode-languageserver/lib/main\";\nimport { BlankCommandError, CommandError } from \"./brigadier/errors\";\nimport { StringReader } from \"./brigadier/string-reader\";\nimport { CommandNodePath, GlobalData, LocalData } from \"./data/types\";\nimport { PackLocationSegments } from \"./misc-functions\";\n\n//#region Document\nexport interface FunctionInfo {\n    lines: CommandLine[];\n    /**\n     * The filesystem path to the `datapacks` folder this is part of - NOT the folder of the single datapack\n     */\n    pack_segments: PackLocationSegments | undefined;\n}\n\nexport interface WorkspaceSecurity {\n    // CustomParsers?: boolean;\n    JarPath?: boolean;\n    JavaPath?: boolean;\n}\n\nexport interface CommandLine {\n    /**\n     * A cache of the tree of actions\n     */\n    actions?: IntervalTree<SubAction>;\n    nodes?: IntervalTree<ParseNode>;\n    parseInfo?: StoredParseResult | false;\n    text: string;\n}\n//#endregion\n\n//#region Interaction with parsers\nexport interface ParserInfo {\n    /**\n     * The immutable context\n     */\n    context: CommandContext;\n    data: CommmandData;\n    node_properties: Dictionary<any>;\n    path: CommandNodePath; // Will be > 0\n    /**\n     * When suggesting, the end of the reader's string will be the cursor position\n     */\n    suggesting: boolean;\n}\n\nexport interface CommmandData {\n    globalData: GlobalData;\n    /**\n     * Data from datapacks\n     */\n    localData?: LocalData;\n}\n\nexport interface Suggestion {\n    description?: string;\n    kind?: CompletionItemKind;\n    /**\n     * The start from where value should be replaced. 0 indexed character gaps.\n     * E.g. `@e[na` with the suggestion `{value:\"name=\",start:3}`\n     * would make `@e[name=` when accepted.\n     */\n    start: number;\n    text: string;\n}\n\nexport type SuggestResult = Suggestion | string;\n\n/**\n * A change to the shared context\n */\nexport type ContextChange = Partial<CommandContext> | undefined;\n\nexport interface CommandContext {\n    /**\n     * Whether the executor is definitely a player.\n     * (Currently unused)\n     */\n    isPlayer?: boolean;\n    [key: string]: any;\n}\n\nexport interface Parser {\n    /**\n     * The default suggestion kind for suggestions from this parser\n     */\n    kind?: CompletionItemKind;\n    /**\n     * Parse the argument as described in NodeProperties against this parser in the reader.\n     * Gets both suggestions and success\n     */\n    parse(\n        reader: StringReader,\n        properties: ParserInfo\n    ): ReturnedInfo<ContextChange | undefined>;\n}\n\n//#endregion\n//#region ParsingData\nexport interface ParseNode extends Interval {\n    context: CommandContext;\n    final: boolean;\n    path: CommandNodePath;\n}\n\nexport interface StoredParseResult {\n    actions: SubAction[];\n    errors: CommandError[];\n    nodes: ParseNode[];\n}\n\ninterface SubActionBase<U extends string, T> extends DataInterval<T> {\n    type: U;\n}\nexport type SubAction =\n    // See https://github.com/Microsoft/language-server-protocol/issues/518.\n    | SubActionBase<\"hover\", MarkedString>\n    | SubActionBase<\"format\", string>\n    | SubActionBase<\"source\", string>;\n//  | SubActionBase<\"highlight\", HighlightScope>;\n//  | SubActionBase<\"rename\", RenameRequest>;\n//#endregion\nexport type Success = true;\nexport const success: Success = true;\n\nexport const failure: Failure = false;\nexport type Failure = false;\n\n//#region ReturnData\nexport interface ReturnData<ErrorKind extends BCE = CE> {\n    actions: SubAction[];\n    errors: ErrorKind[];\n    /**\n     * Points not related to a specific line being parsed.\n     * This includes errors inside a file for example.\n     */\n    misc: MiscInfo[];\n    suggestions: SuggestResult[];\n}\n\ntype MiscInfoBase<kind extends string, value> = value & {\n    kind: kind;\n};\n\nexport type MiscInfo =\n    | MiscInfoBase<\"FileError\", FileError>\n    | MiscInfoBase<\"ClearError\", ClearFileError>;\n\ninterface FileError {\n    filePath: string;\n    group: string;\n    message: string;\n}\n\ninterface ClearFileError {\n    filePath: string;\n    group?: string;\n}\n\n/**\n * A general return type which can either succeed or fail, bringing other data\n */\nexport type ReturnedInfo<T, ErrorKind extends BCE = CE, E = undefined> =\n    | ReturnSuccess<T, ErrorKind>\n    | ReturnFailure<E, ErrorKind>;\n\nexport interface ReturnFailure<K = undefined, ErrorKind extends BCE = CE>\n    extends ReturnData<ErrorKind> {\n    data: K;\n    kind: Failure;\n}\n\nexport interface ReturnSuccess<T, ErrorKind extends BCE = CE>\n    extends ReturnData<ErrorKind> {\n    data: T;\n    kind: Success;\n}\n//#endregion\n// Helper types to lower the amount of repetition of the names\nexport type BCE = BlankCommandError;\nexport type CE = CommandError;\n\n//#region Misc types\n\nexport interface LineRange {\n    end: number;\n    start: number;\n}\n\n//#endregion\n","import {\n    BlankCommandError,\n    CommandError,\n    fillBlankError\n} from \"../brigadier/errors\";\nimport {\n    BCE,\n    CE,\n    Failure,\n    failure,\n    MiscInfo,\n    ParserInfo,\n    ReturnData,\n    ReturnedInfo,\n    ReturnFailure,\n    ReturnSuccess,\n    SubAction,\n    success,\n    Success,\n    Suggestion,\n    SuggestResult\n} from \"../types\";\n\n/**\n * Create an instance of the common return type\n */\nfunction createReturn<ErrorKind extends BCE = CE>(): ReturnData<ErrorKind> {\n    return { actions: [], errors: [], suggestions: [], misc: [] };\n}\n\n/**\n * Test if `input` is successful\n * @param input The info to test\n */\nexport function isSuccessful<T, E extends BCE = CE>(\n    input: ReturnedInfo<T, E, any>\n): input is ReturnSuccess<T, E> {\n    return input.kind === success;\n}\n\n/**\n * Fill the blank errors in data with 'real' errors\n * MODIFIES `data`\n * @param data The data to modify\n * @param start The starting position of the area the errors should cover\n * @param end The end position\n */\nexport function fillBlanks<T>(\n    data: ReturnedInfo<T, BCE>,\n    start: number,\n    end: number\n): ReturnedInfo<T>;\nexport function fillBlanks(\n    data: ReturnData<BCE>,\n    start: number,\n    end: number\n): ReturnData {\n    const errors = [];\n    for (const err of data.errors) {\n        errors.push(fillBlankError(err, start, end));\n    }\n    return { ...data, errors };\n}\n\nexport class ReturnHelper<Errorkind extends BlankCommandError = CommandError> {\n    private readonly data: ReturnData<Errorkind> = createReturn<Errorkind>();\n    private readonly suggesting?: boolean;\n\n    public constructor(suggesting?: ParserInfo | boolean) {\n        if (typeof suggesting !== \"undefined\") {\n            if (typeof suggesting === \"boolean\") {\n                this.suggesting = suggesting;\n                return;\n            }\n            this.suggesting = suggesting.suggesting;\n        }\n    }\n\n    public addActions(...actions: SubAction[]): this {\n        if (this.suggesting === undefined || !this.suggesting) {\n            this.data.actions.push(...actions);\n        }\n        return this;\n    }\n\n    public addErrors(...errs: Errorkind[]): this {\n        if (this.suggesting === undefined || !this.suggesting) {\n            this.data.errors.push(...errs);\n        }\n        return this;\n    }\n\n    public addFileErrorIfFalse(\n        option: boolean,\n        filePath: string,\n        group: string,\n        message: string\n    ): option is true {\n        if (!option) {\n            this.addMisc({ group, message, filePath, kind: \"FileError\" });\n        } else {\n            this.addMisc({ group, filePath, kind: \"ClearError\" });\n        }\n        return option;\n    }\n    public addMisc(...others: MiscInfo[]): this {\n        if (this.suggesting === undefined || !this.suggesting) {\n            this.data.misc.push(...others);\n        }\n        return this;\n    }\n\n    public addSuggestion(\n        start: number,\n        text: string,\n        kind?: Suggestion[\"kind\"],\n        description?: string\n    ): this {\n        if (this.suggesting === undefined || this.suggesting) {\n            this.addSuggestions({\n                description,\n                kind,\n                start,\n                text\n            });\n        }\n        return this;\n    }\n    public addSuggestions(...suggestions: SuggestResult[]): this {\n        if (this.suggesting === undefined || this.suggesting) {\n            this.data.suggestions.push(...suggestions);\n        }\n        return this;\n    }\n\n    public fail(err?: Errorkind): ReturnFailure<undefined, Errorkind> {\n        if (!!err && !this.suggesting) {\n            this.addErrors(err);\n        }\n        return {\n            ...this.getShared(),\n            kind: failure as Failure\n        } as ReturnFailure<undefined, Errorkind>;\n    }\n\n    public failWithData<T>(data: T): ReturnFailure<T, Errorkind> {\n        return { ...this.getShared(), data, kind: failure as Failure };\n    }\n    public getShared(): ReturnData<Errorkind> {\n        return this.data;\n    }\n    public hasErrors(): boolean {\n        return this.data.errors.length > 0;\n    }\n    public merge<T>(\n        merge: ReturnedInfo<T, Errorkind, any>,\n        suggestOverride?: boolean\n    ): merge is ReturnSuccess<T, Errorkind> {\n        this.mergeChain(merge, suggestOverride);\n        return isSuccessful(merge);\n    }\n\n    public mergeChain(\n        merge: ReturnedInfo<any, Errorkind>,\n        suggestOverride?: boolean\n    ): this {\n        let suggest: boolean | undefined;\n        if (suggestOverride !== undefined) {\n            suggest = suggestOverride;\n        } else {\n            if (this.suggesting !== undefined) {\n                suggest = this.suggesting;\n            }\n        }\n        switch (suggest) {\n            case true:\n                this.mergeSuggestions(merge);\n                break;\n            case false:\n                this.mergeSafe(merge);\n                break;\n            default:\n                this.mergeSuggestions(merge);\n                this.mergeSafe(merge);\n        }\n        return this;\n    }\n\n    public return<T, E>(\n        other: ReturnedInfo<T, Errorkind, E>\n    ): ReturnedInfo<T, Errorkind, E> {\n        if (this.merge(other)) {\n            return this.succeed(other.data);\n        } else {\n            return this.failWithData(other.data);\n        }\n    }\n\n    public succeed<T extends undefined>(\n        data?: T\n    ): ReturnSuccess<undefined, Errorkind>;\n    public succeed<T>(data: T): ReturnSuccess<T, Errorkind>;\n    public succeed<T>(data: T): ReturnSuccess<T, Errorkind> {\n        return { ...this.getShared(), data, kind: success as Success };\n    }\n\n    private mergeSafe(merge: ReturnData<Errorkind>): void {\n        this.addActions(...merge.actions);\n        this.addErrors(...merge.errors);\n        this.addMisc(...merge.misc);\n    }\n\n    private mergeSuggestions(merge: ReturnData<Errorkind>): void {\n        this.addSuggestions(...merge.suggestions);\n    }\n}\n\nexport function prepareForParser(\n    info: ReturnedInfo<any>,\n    suggesting: boolean | ParserInfo\n): ReturnedInfo<undefined> {\n    const helper = new ReturnHelper(suggesting);\n    if (helper.merge(info)) {\n        return helper.succeed();\n    } else {\n        return helper.fail();\n    }\n}\n","import * as fs from \"fs\";\nimport * as path from \"path\";\nimport { promisify } from \"util\";\nimport { ReturnedInfo } from \"../types\";\nimport { createJSONFileError } from \"./file-errors\";\nimport { ReturnHelper } from \"./return-helper\";\n\nexport const readFileAsync = promisify(fs.readFile);\nexport const saveFileAsync = promisify(fs.writeFile);\nexport const mkdirAsync = promisify(fs.mkdir);\nexport const readDirAsync = promisify(fs.readdir);\nexport const statAsync = promisify(fs.stat);\n\nexport async function readJSONRaw<T>(filePath: string): Promise<T> {\n    const buffer = await readFileAsync(filePath);\n    return JSON.parse(buffer.toString());\n}\n\nexport async function writeJSON(filepath: string, o: object): Promise<void> {\n    await saveFileAsync(filepath, JSON.stringify(o, undefined, 4));\n}\n\nexport async function readJSON<T>(filePath: string): Promise<ReturnedInfo<T>> {\n    const helper = new ReturnHelper();\n    let buffer: Buffer;\n    try {\n        buffer = await readFileAsync(filePath);\n    } catch (error) {\n        mcLangLog(`File at '${filePath}' not available: ${error}`);\n        return helper.fail();\n    }\n    try {\n        const result = JSON.parse(buffer.toString());\n        return helper.succeed<T>(result);\n    } catch (e) {\n        return helper.addMisc(createJSONFileError(filePath, e)).fail();\n    }\n}\n\nexport async function walkDir(currentPath: string): Promise<string[]> {\n    const subFolders: string[] = [];\n    try {\n        subFolders.push(...(await readDirAsync(currentPath)));\n    } catch (error) {\n        return [];\n    }\n    const promises = subFolders.map(async sub => {\n        try {\n            const files: string[] = [];\n            const subFile = path.join(currentPath, sub);\n            if ((await statAsync(subFile)).isDirectory()) {\n                files.push(...(await walkDir(subFile)));\n            } else {\n                files.push(subFile);\n            }\n            return files;\n        } catch (error) {\n            return [];\n        }\n    });\n    const results = await Promise.all(promises);\n    return ([] as string[]).concat(...results);\n}\n","/**\n * Get the keys of the object in a way friendly to\n * the typescript compiler.\n * Taken from https://github.com/Microsoft/TypeScript/pull/12253#issuecomment-353494273\n * @param o The object to get the keys of.\n */\nexport function typed_keys<O>(o: O): Array<keyof O> {\n    return Object.keys(o) as Array<keyof O>;\n}\n","import * as defaultPath from \"path\";\nimport {\n    DATAFOLDER,\n    SLASH,\n    SLASHREGEX,\n    SLASHREPLACEREGEX,\n    TAG_START\n} from \"../consts\";\nimport {\n    DataResource,\n    GlobalData,\n    MinecraftResource,\n    NamespacedName,\n    Resources,\n    Tag,\n    WorldInfo\n} from \"../data/types\";\nimport { ReturnSuccess } from \"../types\";\nimport { getMatching, getResourcesSplit } from \"./group-resources\";\nimport { convertToNamespace } from \"./namespace\";\nimport { readJSON } from \"./promisified-fs\";\nimport { ReturnHelper } from \"./return-helper\";\nimport { typed_keys } from \"./third_party/typed-keys\";\n\n/** A minimal path module for use in this file */\ntype PathModule = Pick<\n    typeof import(\"path\").posix, // N.B. `.posix` is required.\n    \"extname\" | \"sep\" | \"format\" | \"isAbsolute\" | \"join\" | \"normalize\" | \"parse\"\n>;\n\nexport interface PackLocationSegments {\n    pack: string;\n    packsFolder: string;\n    rest: string;\n}\n\n/**\n * Find the datapacks folder a file is in.\n * @param fileLocation The URI of the file\n * @param path The path module to use (allows for testing).\n */\nexport function parseDataPath(\n    fileLocation: string,\n    path: PathModule = defaultPath\n): PackLocationSegments | undefined {\n    const parsed = path.parse(path.normalize(fileLocation));\n    const dirs = parsed.dir.split(path.sep);\n    const packsFolderIndex = dirs.indexOf(\"datapacks\");\n    if (packsFolderIndex !== -1) {\n        const remainder = dirs.slice(packsFolderIndex + 1);\n        if (remainder.length >= 1) {\n            let packsFolder = path.join(...dirs.slice(0, packsFolderIndex + 1));\n            // Ugly hack because path.join ignores a leading empty dir, leading to the result of\n            // `/home/datapacks` going to `home/datapacks`\n            if (path.sep === \"/\" && !path.isAbsolute(packsFolder)) {\n                packsFolder = path.sep + packsFolder;\n            }\n            packsFolder = path.format({ dir: packsFolder });\n            const rest = path.join(...remainder.slice(1), parsed.base);\n            return { packsFolder, pack: remainder[0], rest };\n        }\n    }\n    return undefined;\n}\n\ninterface ResourceInfo<U extends keyof Resources> {\n    extension: string;\n    path: [U] | string[]; // Custom tuple improves autocomplete mostly.\n    mapFunction?(\n        value: NonNullable<Resources[U]> extends Array<infer T> ? T : never,\n        packroot: string,\n        globalData: GlobalData,\n        packsInfo?: WorldInfo\n    ): Promise<ReturnSuccess<typeof value>>;\n}\n\nexport const resourceTypes: { [T in keyof Resources]-?: ResourceInfo<T> } = {\n    advancements: { extension: \".json\", path: [\"advancements\"] },\n    block_tags: {\n        extension: \".json\",\n        mapFunction: async (v, packroot, globalData, packsInfo) =>\n            readTag(\n                v,\n                packroot,\n                \"block_tags\",\n                getResourcesSplit(\"block_tags\", globalData, packsInfo),\n                s => globalData.blocks.hasOwnProperty(s)\n            ),\n        path: [\"tags\", \"blocks\"]\n    },\n    function_tags: {\n        extension: \".json\",\n        mapFunction: async (v, packroot, globalData, packsInfo) => {\n            const functions = getResourcesSplit(\n                \"functions\",\n                globalData,\n                packsInfo\n            );\n            return readTag(\n                v,\n                packroot,\n                \"function_tags\",\n                getResourcesSplit(\"function_tags\", globalData, packsInfo),\n                s => getMatching(functions, convertToNamespace(s)).length > 0\n            );\n        },\n        path: [\"tags\", \"functions\"]\n    },\n    functions: { extension: \".mcfunction\", path: [\"functions\"] },\n    item_tags: {\n        extension: \".json\",\n        mapFunction: async (v, packroot, globalData, packsInfo) =>\n            readTag(\n                v,\n                packroot,\n                \"item_tags\",\n                getResourcesSplit(\"item_tags\", globalData, packsInfo),\n                s => globalData.items.indexOf(s) !== -1\n            ),\n        path: [\"tags\", \"items\"]\n    },\n    loot_tables: { extension: \".json\", path: [\"loot_tables\"] },\n    recipes: { extension: \".json\", path: [\"recipes\"] },\n    structures: { extension: \".nbt\", path: [\"structures\"] }\n};\n\ninterface KindNamespace {\n    kind: keyof Resources;\n    location: NamespacedName & { namespace: string };\n}\n\nexport function getKindAndNamespace(\n    rest: string,\n    path: PathModule = defaultPath\n): KindNamespace | undefined {\n    const sections = path.normalize(rest).split(path.sep);\n    if (sections[0] === DATAFOLDER && sections.length > 2) {\n        // Namespace,data,\n        const remainder = sections.splice(2);\n        for (const kind of typed_keys(resourceTypes)) {\n            const typeInfo = resourceTypes[kind];\n            if (\n                (typeInfo.path as string[]).every((v, i) => remainder[i] === v)\n            ) {\n                const namespace = sections[1];\n                const further = remainder.slice(typeInfo.path.length);\n                if (further.length > 0) {\n                    const last = further[further.length - 1];\n                    if (path.extname(last) === typeInfo.extension) {\n                        const pth = path\n                            .join(\n                                ...further.slice(0, -1),\n                                last.slice(0, -typeInfo.extension.length)\n                            )\n                            .replace(SLASHREPLACEREGEX, SLASH);\n                        return {\n                            kind,\n                            location: {\n                                namespace,\n                                path: pth\n                            }\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return undefined;\n}\n\nexport function getPath(\n    resource: MinecraftResource,\n    packroot: string,\n    kind: keyof Resources,\n    path: PathModule = defaultPath\n): string {\n    return path.join(\n        packroot,\n        DATAFOLDER,\n        resource.namespace,\n        ...resourceTypes[kind].path,\n        resource.path\n            .replace(SLASHREGEX, path.sep)\n            .concat(resourceTypes[kind].extension)\n    );\n}\n\nexport function buildPath(\n    resource: MinecraftResource,\n    packs: WorldInfo,\n    kind: keyof Resources,\n    path: PathModule = defaultPath\n): string | undefined {\n    if (resource.pack) {\n        const pack = packs.packs[resource.pack];\n        return getPath(\n            resource,\n            path.join(packs.location, pack.name),\n            kind,\n            path\n        );\n    } else {\n        return undefined;\n    }\n}\n\nasync function readTag(\n    resource: MinecraftResource,\n    packRoot: string,\n    type: keyof Resources,\n    options: MinecraftResource[],\n    isKnown: (value: string) => boolean\n): Promise<ReturnSuccess<DataResource<Tag> | MinecraftResource>> {\n    const helper = new ReturnHelper();\n    const filePath = getPath(resource, packRoot, type);\n    const tag = await readJSON<Tag>(filePath);\n    if (helper.merge(tag)) {\n        if (\n            helper.addFileErrorIfFalse(\n                !!tag.data.values,\n                filePath,\n                \"InvalidTagNoValues\",\n                `tag does not have a values key: ${JSON.stringify(tag.data)}`\n            )\n        ) {\n            if (\n                helper.addFileErrorIfFalse(\n                    Array.isArray(tag.data.values),\n                    filePath,\n                    \"InvalidTagValuesNotArray\",\n                    `tag values is not an array: ${JSON.stringify(\n                        tag.data.values\n                    )}`\n                )\n            ) {\n                if (\n                    helper.addFileErrorIfFalse(\n                        // tslint:disable-next-line:strict-type-predicates\n                        tag.data.values.every(v => typeof v === \"string\"),\n                        filePath,\n                        \"InvalidTagValuesNotString\",\n                        `tag values contains a non string value: ${JSON.stringify(\n                            tag.data.values\n                        )}`\n                    )\n                ) {\n                    const seen = new Set<string>();\n                    const duplicates = new Set<string>();\n                    const unknowns = new Set<string>();\n                    for (const value of tag.data.values) {\n                        if (seen.has(value)) {\n                            duplicates.add(value);\n                        }\n                        seen.add(value);\n                        if (value.startsWith(TAG_START)) {\n                            const result = getMatching(\n                                options,\n                                convertToNamespace(value)\n                            );\n                            if (result.length === 0) {\n                                unknowns.add(value);\n                            }\n                        } else if (!isKnown(value)) {\n                            unknowns.add(value);\n                        }\n                    }\n                    helper.addFileErrorIfFalse(\n                        duplicates.size === 0,\n                        filePath,\n                        \"InvalidTagValuesDuplicates\",\n                        `Tag contains duplicate values: \"${[...duplicates].join(\n                            '\", \"'\n                        )}\"`\n                    );\n                    helper.addFileErrorIfFalse(\n                        unknowns.size === 0,\n                        filePath,\n                        \"InvalidTagValuesUnknown\",\n                        `Tag contains unknown values: \"${[...unknowns].join(\n                            '\", \"'\n                        )}\"`\n                    );\n                    return helper.succeed({\n                        ...resource,\n                        data: tag.data\n                    });\n                }\n            }\n        }\n    }\n    return helper.succeed(resource);\n}\n","import { vsprintf } from \"sprintf-js\";\n\nexport function shouldTranslate(): boolean {\n    return mcLangSettings.translation.lang.toLowerCase() !== \"en-us\";\n}\n\nexport function MCFormat(base: string, ...substitutions: string[]): string {\n    return vsprintf(base, substitutions);\n}\n","import {\n    Diagnostic,\n    DidChangeTextDocumentParams,\n    Range\n} from \"vscode-languageserver/lib/main\";\nimport { CommandError } from \"../brigadier/errors\";\nimport { FunctionInfo } from \"../types\";\nimport { splitLines } from \"./creators\";\nimport { shouldTranslate } from \"./translation\";\n\n/**\n * Turn a command error into a language server diagnostic\n */\nexport function commandErrorToDiagnostic(\n    error: CommandError,\n    line: number\n): Diagnostic {\n    const range: Range = {\n        end: { line, character: error.range.end },\n        start: { line, character: error.range.start }\n    };\n    // Run Translation stuff on the error?\n    const text = shouldTranslate()\n        ? `'${error.text}': Translation is not yet supported` // Translate(error.code)\n        : error.text;\n    return Diagnostic.create(\n        range,\n        text,\n        error.severity,\n        error.code,\n        \"mcfunction\"\n    );\n}\n\nexport function runChanges(\n    changes: DidChangeTextDocumentParams,\n    functionInfo: FunctionInfo\n): number[] {\n    const changed: number[] = [];\n    for (const change of changes.contentChanges) {\n        if (!!change.range) {\n            // Appease the compiler, as the change interface seems to have range optional\n            const { start, end }: Range = change.range;\n            const newLineContent = functionInfo.lines[start.line].text\n                .substring(0, start.character)\n                .concat(\n                    change.text,\n                    functionInfo.lines[end.line].text.substring(end.character)\n                );\n            const difference = end.line - start.line + 1;\n            const newLines = splitLines(newLineContent);\n            functionInfo.lines.splice(start.line, difference, ...newLines);\n            changed.forEach((v, i) => {\n                if (v > start.line) {\n                    changed[i] = v - difference + newLines.length;\n                }\n            });\n            changed.push(\n                ...Array.from(\n                    new Array(newLines.length),\n                    (_, i) => start.line + i\n                )\n            );\n        }\n    }\n    const unique = changed.filter(\n        (value, index, self) => self.indexOf(value) === index\n    );\n    unique.sort((a, b) => a - b);\n    return unique;\n}\n","import {\n    CommandNode,\n    CommandNodePath,\n    CommandTree,\n    MCNode\n} from \"../data/types\";\n\nexport function followPath<T extends MCNode<T>>(\n    tree: MCNode<T>,\n    path: CommandNodePath\n): MCNode<T> {\n    // There are no protections here, because if a path is given it should be correct.\n    let current = tree;\n    for (const section of path) {\n        if (!!current.children && !!current.children[section]) {\n            current = current.children[section];\n        }\n    }\n    return current;\n}\n\nexport function getNextNode(\n    node:\n        | CommandNode\n        | MCNode<CommandNode> & {\n              executable?: boolean;\n              redirect?: CommandNodePath;\n          }, // Allow use of node.redirect without a tsignore\n    nodePath: CommandNodePath,\n    tree: CommandTree\n): GetNodeResult {\n    const redirect: CommandNodePath | undefined = node.redirect;\n    if (!!redirect) {\n        return { node: followPath(tree, redirect), path: redirect };\n    } else {\n        if (!node.children && !node.executable) {\n            // In this case either tree is malformed or in `execute run`\n            // So we just return the entire tree\n            return { node: tree, path: [] };\n        }\n        return { node, path: nodePath };\n    }\n}\n\ninterface GetNodeResult {\n    node: MCNode<CommandNode>;\n    path: CommandNodePath;\n}\n","import * as path from \"path\";\n\nimport {\n    mkdirAsync,\n    readJSONRaw,\n    saveFileAsync,\n    writeJSON\n} from \"../misc-functions/promisified-fs\";\nimport { typed_keys } from \"../misc-functions/third_party/typed-keys\";\nimport { WorkspaceSecurity } from \"../types\";\nimport { Cacheable } from \"./types\";\n\nif (!process.env.MCFUNCTION_CACHE_DIR) {\n    throw new Error(\"Environment variable MCFUNCTION_CACHE_DIR must be set\");\n}\nconst cacheFolder = process.env.MCFUNCTION_CACHE_DIR;\n\nconst cacheFileNames: { [K in keyof Cacheable]: string } = {\n    blocks: \"blocks.json\",\n    commands: \"commands.json\",\n    items: \"items.json\",\n    meta_info: \"meta_info.json\",\n    resources: \"resources.json\"\n};\n\nexport async function readCache(): Promise<Cacheable> {\n    const data: Cacheable = {} as Cacheable;\n    const keys = typed_keys(cacheFileNames);\n    await Promise.all(\n        keys.map(async key => {\n            data[key] = await readJSONRaw<Cacheable[typeof key]>(\n                path.join(cacheFolder, cacheFileNames[key])\n            );\n        })\n    );\n    return data;\n}\n\nexport async function cacheData(data: Cacheable): Promise<void> {\n    try {\n        await mkdirAsync(cacheFolder, \"777\");\n    } catch (_) {\n        // Don't use the error, which is normally thrown if the folder doesn't exist\n    }\n    const keys: Array<keyof typeof cacheFileNames> = typed_keys(cacheFileNames);\n    await Promise.all(\n        keys.map(async key =>\n            writeJSON(path.join(cacheFolder, cacheFileNames[key]), data[key])\n        )\n    );\n    return;\n}\n\nexport async function storeSecurity(\n    security: WorkspaceSecurity\n): Promise<void> {\n    await saveFileAsync(\n        path.join(cacheFolder, \"security.json\"),\n        JSON.stringify(security)\n    );\n}\n\nexport async function readSecurity(): Promise<WorkspaceSecurity> {\n    try {\n        return await readJSONRaw(path.join(cacheFolder, \"security.json\"));\n    } catch (error) {\n        return {};\n    }\n}\n","import { IConnection } from \"vscode-languageserver/lib/main\";\nimport { storeSecurity } from \"../data/cache\";\nimport { WorkspaceSecurity } from \"../types\";\n\n/**\n * Check if the given change requires security confirmation\n */\nexport function securityIssues(\n    settings: McFunctionSettings,\n    security: WorkspaceSecurity\n): Array<keyof WorkspaceSecurity> {\n    const results: Array<keyof WorkspaceSecurity> = [];\n    if (!!settings.data) {\n        if (!!settings.data.customJar && security.JarPath !== true) {\n            results.push(\"JarPath\");\n        }\n        if (!!settings.data.javaPath && security.JavaPath !== true) {\n            results.push(\"JavaPath\");\n        }\n    }\n    if (!!settings.parsers /* && security.CustomParsers !== true */) {\n        /* const names = Object.keys(settings.parsers);\n        if (names.length > 0) {\n            results.push(\"CustomParsers\");\n        } */\n        throw new Error(`Custom parsers are not supported for client implementations.\nTo request this feature be enabled, open an issue at https://github.com/Levertion/mcfunction-langserver`);\n    }\n    return results;\n}\n\nexport async function actOnSecurity(\n    issues: Array<keyof WorkspaceSecurity>,\n    connection: IConnection,\n    security: WorkspaceSecurity\n): Promise<boolean> {\n    let securityChanged = false;\n    const resave = async () => {\n        if (securityChanged) {\n            await storeSecurity(security);\n        }\n    };\n    for (const issue of issues) {\n        const response = await Promise.resolve(\n            connection.window.showErrorMessage(\n                `[MCFUNCTION] You have the potentially insecure setting '${issue}' set, but no confirmation has been recieved.`,\n                { title: \"Yes\" },\n                { title: \"No (Stops server)\" }\n            )\n        );\n        if (!!response && response.title === \"Yes\") {\n            security[issue] = true;\n            securityChanged = true;\n        } else {\n            return false;\n        }\n    }\n    await resave();\n    return true;\n}\n","import { IConnection } from \"vscode-languageserver/lib/main\";\n\nexport function setup_logging(connection: IConnection): void {\n    const log = (message: string) => {\n        connection.console.log(message);\n    };\n    // tslint:disable-next-line:prefer-object-spread\n    global.mcLangLog = Object.assign(log, {\n        internal: (m: string) => {\n            if (mcLangSettings.trace.internalLogging) {\n                log(`[McFunctionInternal] ${m}`);\n            }\n        }\n    });\n}\n","import { CompletionItemKind } from \"vscode-languageserver/lib/main\";\nimport {\n    convertToNamespace,\n    namespacesEqual,\n    ReturnHelper,\n    stringifyNamespace\n} from \"..\";\nimport { CommandErrorBuilder } from \"../../brigadier/errors\";\nimport { StringReader } from \"../../brigadier/string-reader\";\nimport { NamespacedName } from \"../../data/types\";\nimport { CE, ReturnedInfo, ReturnSuccess, Suggestion } from \"../../types\";\nimport { isNamespaceDefault, namesEqual } from \"../namespace\";\n\nconst NAMESPACEEXCEPTIONS = {\n    invalid_id: new CommandErrorBuilder(\n        \"argument.id.invalid\",\n        \"Invalid character '%s' in location %s\"\n    )\n};\n\nconst disallowedPath = /[^0-9a-z_/\\.-]/g;\n\nexport function readNamespaceText(reader: StringReader): string {\n    const namespaceChars = /^[0-9a-z_:/\\.-]$/;\n    return reader.readWhileRegexp(namespaceChars);\n}\n\n/**\n * Does `base`(eg minecraft:stone) start with `test` (e.g. sto) [Y]\n */\nexport function namespaceStart(\n    base: NamespacedName,\n    test: NamespacedName\n): boolean {\n    if (test.namespace === undefined) {\n        return (\n            (isNamespaceDefault(base) && base.path.startsWith(test.path)) ||\n            (!!base.namespace && base.namespace.startsWith(test.path))\n        );\n    } else {\n        return namesEqual(base, test) && base.path.startsWith(test.path);\n    }\n}\n\nexport function namespaceSuggestions(\n    options: NamespacedName[],\n    value: NamespacedName,\n    start: number\n): Suggestion[] {\n    const result: Suggestion[] = [];\n    for (const option of options) {\n        if (namespaceStart(option, value)) {\n            result.push({ text: stringifyNamespace(option), start });\n        }\n    }\n    return result;\n}\n\nexport function namespaceSuggestionString(\n    options: string[],\n    value: NamespacedName,\n    start: number\n): Suggestion[] {\n    return namespaceSuggestions(\n        // tslint:disable-next-line:no-unnecessary-callback-wrapper this is a false positive - see https://github.com/palantir/tslint/issues/2430\n        options.map(v => convertToNamespace(v)),\n        value,\n        start\n    );\n}\n\nexport function parseNamespace(\n    reader: StringReader\n): ReturnedInfo<NamespacedName> {\n    const helper = new ReturnHelper();\n    const start = reader.cursor;\n    const text = readNamespaceText(reader);\n    const namespace = convertToNamespace(text);\n    let next: RegExpExecArray | null;\n    let failed = false;\n    // Give an error for each invalid character\n    do {\n        next = disallowedPath.exec(namespace.path);\n        if (next) {\n            // Relies on the fact that convertToNamespace splits on the first\n            const i = text.indexOf(\":\") + 1 + next.index + start;\n            failed = true;\n            helper.addErrors(\n                NAMESPACEEXCEPTIONS.invalid_id.create(i, i + 1, next[0], text)\n            );\n        }\n    } while (next);\n    if (failed) {\n        return helper.fail();\n    } else {\n        return helper.succeed(namespace);\n    }\n}\n\ninterface OptionResult<T> {\n    literal: NamespacedName;\n    values: T[];\n}\n\nexport function parseNamespaceOption<T extends NamespacedName>(\n    reader: StringReader,\n    options: T[],\n    completionKind?: CompletionItemKind\n): ReturnedInfo<OptionResult<T>, CE, NamespacedName | undefined> {\n    const helper = new ReturnHelper();\n    const start = reader.cursor;\n    const namespace = parseNamespace(reader);\n    if (helper.merge(namespace)) {\n        const results = processParsedNamespaceOption(\n            namespace.data,\n            options,\n            !reader.canRead(),\n            start,\n            completionKind\n        );\n        helper.merge(results);\n        if (results.data.length > 0) {\n            return helper.succeed<OptionResult<T>>({\n                literal: namespace.data,\n                values: results.data\n            });\n        } else {\n            return helper.failWithData(namespace.data);\n        }\n    } else {\n        return helper.failWithData(undefined);\n    }\n}\n\nexport function processParsedNamespaceOption<T extends NamespacedName>(\n    namespace: NamespacedName,\n    options: T[],\n    suggest: boolean,\n    start: number,\n    completionKind?: CompletionItemKind\n): ReturnSuccess<T[]> {\n    const results: T[] = [];\n    const helper = new ReturnHelper();\n    for (const val of options) {\n        if (namespacesEqual(val, namespace)) {\n            results.push(val);\n        }\n        if (suggest && namespaceStart(val, namespace)) {\n            helper.addSuggestion(\n                start,\n                stringifyNamespace(val),\n                completionKind\n            );\n        }\n    }\n    return helper.succeed(results);\n}\n","import { CompletionItemKind } from \"vscode-languageserver/lib/main\";\nimport {\n    buildPath,\n    convertToNamespace,\n    getResourcesofType,\n    namespacesEqual,\n    ReturnHelper\n} from \"..\";\nimport { CommandErrorBuilder } from \"../../brigadier/errors\";\nimport { StringReader } from \"../../brigadier/string-reader\";\nimport { TAG_START } from \"../../consts\";\nimport {\n    DataResource,\n    NamespacedName,\n    Resources,\n    Tag,\n    WorldInfo\n} from \"../../data/types\";\nimport { CE, ParserInfo, ReturnedInfo, ReturnSuccess } from \"../../types\";\nimport {\n    parseNamespace,\n    parseNamespaceOption,\n    readNamespaceText\n} from \"./namespace\";\n\nexport interface TagParseResult {\n    parsed: NamespacedName;\n    resolved?: NamespacedName[];\n    values?: Array<DataResource<Tag>>;\n}\n\n/**\n * Parse a namespace or tag.\n * Returned:\n *  - values are the resources which are the exact matches\n *  - resolved are the lowest level tag members\n *  - parsed is the literal tag. If parsed exists, but not resolved/values, then it was a non-tag\n *  - if not successful, if data undefined then parsing failed.\n *  - if data is a value, then a tag parsed but was unknown\n */\nexport function parseNamespaceOrTag(\n    reader: StringReader,\n    info: ParserInfo,\n    taghandling: keyof Resources | CommandErrorBuilder\n): ReturnedInfo<TagParseResult, CE, NamespacedName | undefined> {\n    const helper = new ReturnHelper(info);\n    const start = reader.cursor;\n    if (reader.peek() === TAG_START) {\n        reader.skip();\n        if (typeof taghandling === \"string\") {\n            const tags: Array<DataResource<Tag>> = getResourcesofType(\n                info.data,\n                taghandling\n            );\n            const parsed = parseNamespaceOption(\n                reader,\n                tags,\n                CompletionItemKind.Folder\n            );\n            if (helper.merge(parsed)) {\n                const values = parsed.data.values;\n                const resolved: NamespacedName[] = [];\n                for (const value of values) {\n                    resolved.push(...getLowestForTag(value, tags));\n                }\n                return helper.succeed<TagParseResult>({\n                    parsed: parsed.data.literal,\n                    resolved,\n                    values\n                });\n            } else {\n                return helper.failWithData(parsed.data);\n            }\n        } else {\n            readNamespaceText(reader);\n            return helper.fail(taghandling.create(start, reader.cursor));\n        }\n    } else {\n        if (!reader.canRead() && typeof taghandling === \"string\") {\n            helper.addSuggestion(\n                reader.cursor,\n                TAG_START,\n                CompletionItemKind.Operator\n            );\n        }\n        const parsed = parseNamespace(reader);\n        if (helper.merge(parsed)) {\n            return helper.succeed({ parsed: parsed.data });\n        } else {\n            return helper.fail();\n        }\n    }\n}\n\nfunction getLowestForTag(\n    tag: DataResource<Tag>,\n    options: Array<DataResource<Tag>>\n): NamespacedName[] {\n    if (!tag.data) {\n        return [];\n    }\n    const results: NamespacedName[] = [];\n    for (const tagMember of tag.data.values) {\n        if (tagMember[0] === TAG_START) {\n            const namespace = convertToNamespace(tagMember.substring(1));\n            for (const option of options) {\n                if (namespacesEqual(namespace, option)) {\n                    results.push(...getLowestForTag(option, options));\n                }\n            }\n        } else {\n            results.push(convertToNamespace(tagMember));\n        }\n    }\n    return results;\n}\n\nexport function buildTagActions(\n    tags: Array<DataResource<Tag>>,\n    low: number,\n    high: number,\n    type: keyof Resources,\n    localData?: WorldInfo\n): ReturnSuccess<void> {\n    const helper = new ReturnHelper();\n    for (const resource of tags) {\n        if (resource.data) {\n            helper.addActions({\n                data: `\\`\\`\\`json\n${JSON.stringify(resource.data, undefined, 4)}\n\\`\\`\\``,\n                high,\n                low,\n                type: \"hover\"\n            });\n        }\n        if (localData) {\n            const location = buildPath(resource, localData, type);\n            if (location) {\n                helper.addActions({\n                    data: location,\n                    high,\n                    low,\n                    type: \"source\"\n                });\n            }\n        }\n    }\n    return helper.succeed();\n}\n","export * from \"./context\";\nexport * from \"./creators\";\nexport * from \"./datapack-folder\";\nexport * from \"./file-errors\";\nexport * from \"./group-resources\";\nexport * from \"./lsp-conversions\";\nexport * from \"./namespace\";\nexport * from \"./node-tree\";\nexport * from \"./promisified-fs\";\nexport * from \"./return-helper\";\nexport * from \"./security\";\nexport * from \"./setup\";\nexport * from \"./translation\";\n\nexport * from \"./parsing/namespace\";\nexport * from \"./parsing/nmsp-tag\";\n","import { CompletionItemKind } from \"vscode-languageserver/lib/main\";\nimport { ReturnHelper } from \"../misc-functions\";\nimport { typed_keys } from \"../misc-functions/third_party/typed-keys\";\nimport { CE, ReturnedInfo, Suggestion } from \"../types\";\nimport { CommandErrorBuilder } from \"./errors\";\n\nconst EXCEPTIONS = {\n    EXPECTED_BOOL: new CommandErrorBuilder(\n        \"parsing.bool.expected\",\n        \"Expected bool\"\n    ),\n    EXPECTED_END_OF_QUOTE: new CommandErrorBuilder(\n        \"parsing.quote.expected.end\",\n        \"Unclosed quoted string\"\n    ),\n    EXPECTED_FLOAT: new CommandErrorBuilder(\n        \"parsing.float.expected\",\n        \"Expected float\"\n    ),\n    EXPECTED_INT: new CommandErrorBuilder(\n        \"parsing.int.expected\",\n        \"Expected integer\"\n    ),\n    EXPECTED_START_OF_QUOTE: new CommandErrorBuilder(\n        \"parsing.quote.expected.start\",\n        \"Expected quote to start a string\"\n    ),\n    EXPECTED_STRING_FROM: new CommandErrorBuilder(\n        \"parsing.expected.option\",\n        \"Expected string from %s, got '%s'\"\n    ),\n    EXPECTED_SYMBOL: new CommandErrorBuilder(\n        \"parsing.expected\",\n        \"Expected '%s'\"\n    ),\n    INVALID_BOOL: new CommandErrorBuilder(\n        \"parsing.bool.invalid\",\n        \"Invalid bool, expected true or false but found '%s'\"\n    ),\n    INVALID_ESCAPE: new CommandErrorBuilder(\n        \"parsing.quote.escape\",\n        \"Invalid escape sequence '\\\\%s' in quoted string)\"\n    ),\n    INVALID_FLOAT: new CommandErrorBuilder(\n        \"parsing.float.invalid\",\n        \"Invalid float '%s'\"\n    ),\n    INVALID_INT: new CommandErrorBuilder(\n        \"parsing.int.invalid\",\n        \"Invalid integer '%s'\"\n    )\n};\n\nconst QUOTE = '\"';\nconst ESCAPE = \"\\\\\";\n\nexport class StringReader {\n    public static charAllowedInUnquotedString = /^[0-9A-Za-z_\\-\\.+]$/;\n    public static charAllowedNumber = /^[0-9\\-\\.]$/;\n    private static readonly bools = { true: true, false: false };\n    public cursor = 0;\n    public readonly string: string;\n\n    public constructor(stringToRead: string) {\n        this.string = stringToRead;\n    }\n    public canRead(length: number = 1): boolean {\n        return this.cursor + length <= this.string.length;\n    }\n    /**\n     * Require that a specific string follows\n     * @param str The string which should come next\n     */\n    public expect(str: string): ReturnedInfo<undefined> {\n        const helper = new ReturnHelper();\n        if (str.startsWith(this.getRemaining())) {\n            helper.addSuggestions({ text: str, start: this.cursor });\n        }\n        const sub = this.string.substr(this.cursor, str.length);\n        if (sub !== str) {\n            return helper.fail(\n                EXCEPTIONS.EXPECTED_SYMBOL.create(\n                    this.cursor,\n                    Math.min(this.string.length, this.cursor + str.length),\n                    sub,\n                    str\n                )\n            );\n        }\n        this.cursor += str.length;\n        return helper.succeed();\n    }\n    public getRead(): string {\n        return this.string.substring(0, this.cursor);\n    }\n    public getRemaining(): string {\n        return this.string.substring(this.cursor);\n    }\n    public getRemainingLength(): number {\n        return this.string.length - this.cursor;\n    }\n    public getTotalLength(): number {\n        return this.string.length;\n    }\n    public peek(offset: number = 0): string {\n        return this.string.charAt(this.cursor + offset);\n    }\n    public read(): string {\n        return this.string.charAt(this.cursor++);\n    }\n    /**\n     * Read a boolean value from the string\n     */\n    public readBoolean(): ReturnedInfo<boolean> {\n        const helper = new ReturnHelper();\n        const start = this.cursor;\n        const value = this.readOption<keyof typeof StringReader[\"bools\"]>(\n            typed_keys(StringReader.bools),\n            false\n        );\n        if (!helper.merge(value)) {\n            if (value.data !== false) {\n                return helper.fail(\n                    EXCEPTIONS.INVALID_BOOL.create(\n                        start,\n                        this.cursor,\n                        value.data\n                    )\n                );\n            } else {\n                return helper.fail();\n            }\n        }\n        return helper.succeed(StringReader.bools[value.data]);\n    }\n    /**\n     * Read a float from the string\n     */\n    public readFloat(): ReturnedInfo<number> {\n        const helper = new ReturnHelper();\n        const start: number = this.cursor;\n        const readToTest: string = this.readWhileRegexp(\n            StringReader.charAllowedNumber\n        );\n        if (readToTest.length === 0) {\n            return helper.fail(\n                EXCEPTIONS.EXPECTED_FLOAT.create(start, this.string.length)\n            );\n        }\n\n        // The Java readInt throws upon multiple `.`s, but Javascript's doesn't\n        if ((readToTest.match(/\\./g) || []).length > 1) {\n            return helper.fail(\n                EXCEPTIONS.INVALID_FLOAT.create(\n                    start,\n                    this.cursor,\n                    this.string.substring(start, this.cursor)\n                )\n            );\n        }\n        try {\n            return helper.succeed(parseFloat(readToTest));\n        } catch (error) {\n            return helper.fail(\n                EXCEPTIONS.INVALID_FLOAT.create(start, this.cursor, readToTest)\n            );\n        }\n    }\n    /**\n     * Read an integer from the string\n     */\n    public readInt(): ReturnedInfo<number> {\n        const helper = new ReturnHelper();\n        const start: number = this.cursor;\n        const readToTest: string = this.readWhileRegexp(\n            StringReader.charAllowedNumber\n        );\n        if (readToTest.length === 0) {\n            return helper.fail(\n                EXCEPTIONS.EXPECTED_INT.create(start, this.string.length)\n            );\n        }\n        // The Java readInt throws upon a `.`, but the regex includes one in brigadier\n        // This handles this case\n        if (readToTest.indexOf(\".\") !== -1) {\n            return helper.fail(\n                EXCEPTIONS.INVALID_INT.create(\n                    start,\n                    this.cursor,\n                    this.string.substring(start, this.cursor)\n                )\n            );\n        }\n        try {\n            return helper.succeed(Number.parseInt(readToTest, 10));\n        } catch (error) {\n            return helper.fail(\n                EXCEPTIONS.INVALID_INT.create(start, this.cursor, readToTest)\n            );\n        }\n    }\n    /**\n     * Expect a string from a selection\n     * @param quoted how should the string be handled.\n     * - `both`: StringReader::readString()\n     * - `option`: expect an option, but don't advance cursor if fails\n     * - `yes`: StringReader::readQuotedString()\n     * - `no`: StringReader::readUnquotedString()\n     */\n    public readOption<T extends string>(\n        options: T[],\n        addError: boolean = true,\n        completion?: CompletionItemKind,\n        quoted: \"both\" | \"option\" | \"yes\" | \"no\" = \"both\"\n    ): ReturnedInfo<T, CE, string | false> {\n        const start = this.cursor;\n        const helper = new ReturnHelper();\n        let isquoted = false;\n        if (this.peek() === QUOTE) {\n            isquoted = true;\n        }\n        let resultaux: ReturnedInfo<string>;\n        switch (quoted) {\n            case \"both\":\n                resultaux = this.readString();\n                break;\n            case \"yes\":\n                resultaux = this.readQuotedString();\n                break;\n            case \"option\": {\n                // tslint:disable-next-line:no-unnecessary-initializer copt needs to be 'initialized'\n                let copt: string | undefined = undefined;\n                for (const opt of options) {\n                    if (this.getRemaining().startsWith(opt)) {\n                        copt = opt;\n                        this.cursor += opt.length;\n                        break;\n                    }\n                }\n                resultaux =\n                    copt === undefined\n                        ? new ReturnHelper(false).fail()\n                        : new ReturnHelper(false).succeed(copt);\n                break;\n            }\n            case \"no\":\n                resultaux = new ReturnHelper(false).succeed(\n                    this.readUnquotedString()\n                );\n                break;\n            default:\n                resultaux = this.readString();\n        }\n        const result = resultaux;\n        if (!helper.merge(result, false)) {\n            if (isquoted && !this.canRead()) {\n                const remaining = this.string.substring(start + 1);\n                // Note that if there are quotes and backslashes, this will fail\n                helper.addSuggestions(\n                    ...options\n                        .filter(v => v.startsWith(remaining))\n                        .map<Suggestion>(v => ({\n                            kind: completion,\n                            start,\n                            text: `${QUOTE}${v}${QUOTE}`\n                        }))\n                );\n            }\n            return helper.failWithData(false as any);\n        }\n        let valid: T | undefined;\n        for (const option of options) {\n            if (option === result.data) {\n                valid = option;\n            }\n        }\n        if (!this.canRead()) {\n            helper.addSuggestions(\n                ...options\n                    .filter(v => v.startsWith(result.data))\n                    .map<Suggestion>(v => ({\n                        kind: completion,\n                        start,\n                        text:\n                            isquoted || v.includes('\"') || v.includes(\"\\\\\")\n                                ? QUOTE +\n                                  v\n                                      .replace(/\\\\/g, \"\\\\\\\\\")\n                                      .replace(/\"/g, '\\\\\"') +\n                                  QUOTE\n                                : v\n                    }))\n            );\n        }\n        if (valid) {\n            return helper.succeed(valid);\n        } else {\n            if (addError) {\n                helper.addErrors(\n                    EXCEPTIONS.EXPECTED_STRING_FROM.create(\n                        start,\n                        this.cursor,\n                        JSON.stringify(options),\n                        result.data\n                    )\n                );\n            }\n            return helper.failWithData(result.data);\n        }\n    }\n    /**\n     * Read from the string, returning a string, which, in the original had been surrounded by quotes\n     */\n    public readQuotedString(): ReturnedInfo<string> {\n        const helper = new ReturnHelper();\n        const start = this.cursor;\n        if (!this.canRead()) {\n            return helper.succeed(\"\");\n        }\n        if (this.peek() !== QUOTE) {\n            return helper.fail(\n                EXCEPTIONS.EXPECTED_START_OF_QUOTE.create(\n                    this.cursor,\n                    this.string.length\n                )\n            );\n        }\n        let result = \"\";\n        let escaped = false;\n        while (this.canRead()) {\n            this.skip();\n            const c: string = this.peek();\n            if (escaped) {\n                if (c === QUOTE || c === ESCAPE) {\n                    result += c;\n                    escaped = false;\n                } else {\n                    return helper.fail(\n                        EXCEPTIONS.INVALID_ESCAPE.create(\n                            this.cursor - 1,\n                            this.cursor + 1,\n                            c\n                        )\n                    ); // Includes backslash\n                }\n            } else if (c === ESCAPE) {\n                escaped = true;\n            } else if (c === QUOTE) {\n                this.skip();\n                return helper.succeed(result);\n            } else {\n                result += c;\n            }\n        }\n        helper.addSuggestion(this.cursor, QUOTE); // Always cannot read at this point\n        return helper.fail(\n            EXCEPTIONS.EXPECTED_END_OF_QUOTE.create(start, this.string.length)\n        );\n    }\n    /**\n     * Read a string from the string. If it surrounded by quotes, the quotes are ignored.\n     * The cursor ends on the last character in the string.\n     */\n    public readString(): ReturnedInfo<string> {\n        if (this.canRead() && this.peek() === QUOTE) {\n            return this.readQuotedString();\n        } else {\n            const helper = new ReturnHelper();\n            if (!this.canRead()) {\n                helper.addSuggestions({\n                    start: this.cursor,\n                    text: QUOTE\n                });\n            }\n            return helper.succeed(this.readUnquotedString());\n        }\n    }\n\n    /**\n     * Read a string which is not surrounded by quotes.\n     * Can only contain alphanumerical characters, _,+,. and -\n     */\n    public readUnquotedString(): string {\n        return this.readWhileRegexp(StringReader.charAllowedInUnquotedString);\n    }\n\n    /**\n     * Read the string until a certain regular expression matches the\n     * character under the cursor.\n     * @param exp The Regular expression to test against.\n     */\n    public readUntilRegexp(exp: RegExp): string {\n        return this.readWhileFunction(s => !exp.test(s));\n    }\n    /**\n     * Read while a certain function returns true on each consecutive character starting with the one under the cursor.\n     * In most cases, it is better to use readWhileRegexp.\n     * @param callback The function to use.\n     */\n    public readWhileFunction(callback: (char: string) => boolean): string {\n        const begin = this.cursor;\n        while (callback(this.peek())) {\n            if (this.canRead()) {\n                this.skip();\n            } else {\n                return this.string.substring(begin);\n            }\n        }\n        return this.string.substring(begin, this.cursor);\n    }\n    /**\n     * Read the string while a certain regular expression matches the character under the cursor.\n     * The cursor ends on the first character which doesn't match\n     * @param exp The Regular Expression to test against\n     */\n    public readWhileRegexp(exp: RegExp): string {\n        return this.readWhileFunction(s => exp.test(s));\n    }\n\n    public skip(): void {\n        this.cursor++;\n    }\n    public skipWhitespace(): void {\n        this.readWhileRegexp(/\\s/); // Whitespace\n    }\n}\n","import { CompletionItemKind } from \"vscode-languageserver/lib/main\";\nimport { prepareForParser } from \"../../misc-functions\";\nimport { Parser } from \"../../types\";\n\nexport const boolParser: Parser = {\n    kind: CompletionItemKind.Keyword,\n    parse: (reader, props) => prepareForParser(reader.readBoolean(), props)\n};\n","import { ReturnHelper } from \"../../misc-functions\";\nimport { Parser } from \"../../types\";\n\nexport const stringParser: Parser = {\n    parse: (reader, properties) => {\n        const helper = new ReturnHelper(properties);\n        switch (properties.node_properties.type) {\n            case \"greedy\":\n                reader.cursor = reader.string.length;\n                return helper.succeed();\n            case \"word\":\n                reader.readUnquotedString();\n                return helper.succeed();\n            default:\n                if (helper.merge(reader.readString())) {\n                    return helper.succeed();\n                } else {\n                    return helper.fail();\n                }\n        }\n    }\n};\n","import { CommandErrorBuilder } from \"../../brigadier/errors\";\nimport { ReturnHelper } from \"../../misc-functions\";\nimport { Parser } from \"../../types\";\n\nconst JAVAMAXINT = 2147483647;\nconst JAVAMININT = -2147483648;\n\nconst INTEGEREXCEPTIONS = {\n    TOOBIG: new CommandErrorBuilder(\n        \"argument.integer.big\",\n        \"Integer must not be more than %s, found %s\"\n    ),\n    TOOSMALL: new CommandErrorBuilder(\n        \"argument.integer.low\",\n        \"Integer must not be less than %s, found %s\"\n    )\n};\n\nexport const intParser: Parser = {\n    parse: (reader, properties) => {\n        const helper = new ReturnHelper(properties);\n        const start = reader.cursor;\n        const result = reader.readInt();\n        if (!helper.merge(result)) {\n            return helper.fail();\n        }\n        const maxVal = properties.node_properties.max;\n        const minVal = properties.node_properties.min;\n        // See https://stackoverflow.com/a/12957445\n        const max = Math.min(\n            typeof maxVal === \"number\" ? maxVal : JAVAMAXINT,\n            JAVAMAXINT\n        );\n        const min = Math.max(\n            typeof minVal === \"number\" ? minVal : JAVAMININT,\n            JAVAMININT\n        );\n        if (result.data > max) {\n            helper.addErrors(\n                INTEGEREXCEPTIONS.TOOBIG.create(\n                    start,\n                    reader.cursor,\n                    max.toString(),\n                    result.data.toString()\n                )\n            );\n        }\n        if (result.data < min) {\n            helper.addErrors(\n                INTEGEREXCEPTIONS.TOOSMALL.create(\n                    start,\n                    reader.cursor,\n                    min.toString(),\n                    result.data.toString()\n                )\n            );\n        }\n        return helper.succeed();\n    }\n};\n","import { CommandErrorBuilder } from \"../../brigadier/errors\";\nimport { ReturnHelper } from \"../../misc-functions\";\nimport { Parser } from \"../../types\";\n\nconst JAVAMINFLOAT = -2139095039;\nconst JAVAMAXFLOAT = 2139095039;\n\nconst FLOATEXCEPTIONS = {\n    TOOBIG: new CommandErrorBuilder(\n        \"argument.float.big\",\n        \"Float must not be more than %s, found %s\"\n    ),\n    TOOSMALL: new CommandErrorBuilder(\n        \"argument.float.low\",\n        \"Float must not be less than %s, found %s\"\n    )\n};\n\nexport const floatParser: Parser = {\n    parse: (reader, properties) => {\n        const helper = new ReturnHelper(properties);\n        const start = reader.cursor;\n        const result = reader.readFloat();\n        if (!helper.merge(result)) {\n            return helper.fail();\n        }\n        const maxVal = properties.node_properties.max;\n        const minVal = properties.node_properties.min;\n        // See https://stackoverflow.com/a/12957445\n        const max = Math.min(\n            typeof maxVal === \"number\" ? maxVal : JAVAMAXFLOAT,\n            JAVAMAXFLOAT\n        );\n        const min = Math.max(\n            typeof minVal === \"number\" ? minVal : JAVAMINFLOAT,\n            JAVAMINFLOAT\n        );\n        if (result.data > max) {\n            helper.addErrors(\n                FLOATEXCEPTIONS.TOOBIG.create(\n                    start,\n                    reader.cursor,\n                    max.toString(),\n                    result.data.toString()\n                )\n            );\n        }\n        if (result.data < min) {\n            helper.addErrors(\n                FLOATEXCEPTIONS.TOOSMALL.create(\n                    start,\n                    reader.cursor,\n                    min.toString(),\n                    result.data.toString()\n                )\n            );\n        }\n        return helper.succeed();\n    }\n};\n","export * from \"./bool\";\nexport * from \"./string\";\nexport * from \"./integer\";\nexport * from \"./float\";\n","import { CompletionItemKind } from \"vscode-languageserver/lib/main\";\nimport { ReturnHelper } from \"../misc-functions\";\nimport { Parser } from \"../types\";\n\nexport const literalParser: Parser = {\n    kind: CompletionItemKind.Method,\n    parse: (reader, properties) => {\n        const helper = new ReturnHelper(properties);\n        const begin = reader.cursor;\n        const literal = properties.path[properties.path.length - 1];\n        if (\n            properties.suggesting &&\n            literal.startsWith(reader.getRemaining())\n        ) {\n            helper.addSuggestions(literal);\n        }\n        if (reader.canRead(literal.length)) {\n            const end = begin + literal.length;\n            if (reader.string.substring(begin, end) === literal) {\n                reader.cursor = end;\n                if (reader.peek() === \" \" || !reader.canRead()) {\n                    return helper.succeed();\n                }\n            }\n        }\n        return helper.fail();\n    }\n};\n","import * as path from \"path\";\nimport * as url from \"url\";\nimport { DiagnosticSeverity } from \"vscode-languageserver/lib/main\";\nimport { CommandErrorBuilder } from \"../../../../brigadier/errors\";\nimport { NBTTagCompound } from \"../tag/compound-tag\";\nimport { NBTTagList } from \"../tag/list-tag\";\nimport { NBTTag } from \"../tag/nbt-tag\";\n\nexport interface NBTFunction {\n    id: string;\n    params: any;\n}\n\nexport interface NodeBase {\n    readonly description?: string;\n    readonly references?: { [key: string]: any };\n    readonly suggestions?: Array<\n        | string\n        | { description?: string; value: string }\n        | { function: NBTFunction }\n    >;\n}\n\nexport interface NoPropertyNode extends NodeBase {\n    readonly type:\n        | \"no-nbt\"\n        | \"byte\"\n        | \"short\"\n        | \"int\"\n        | \"long\"\n        | \"float\"\n        | \"double\"\n        | \"byte_array\"\n        | \"string\"\n        | \"int_array\"\n        | \"long_array\";\n}\n\nexport interface RefNode extends NodeBase {\n    readonly ref: string;\n}\n\nexport interface FunctionNode extends NodeBase {\n    readonly function: NBTFunction;\n}\n\nexport interface ListNode extends NodeBase {\n    readonly item: NBTNode;\n    readonly type: \"list\";\n}\n\nexport interface CompoundNode extends NodeBase {\n    readonly child_ref?: string[];\n    readonly children?: { [key: string]: NBTNode };\n    readonly type: \"compound\";\n}\n\nexport interface RootNode extends NodeBase {\n    readonly children: { [key: string]: NBTNode };\n    readonly type: \"root\";\n}\n\nexport type ValueList = Array<string | { description: string; value: string }>;\n\nexport type NBTNode =\n    | NoPropertyNode\n    | CompoundNode\n    | RootNode\n    | ListNode\n    | RefNode\n    | FunctionNode;\n\nexport const parseRefPath = (\n    ref: string,\n    currentPath: string\n): [string, string[]] => {\n    const cpd = path.dirname(currentPath);\n    const refurl = url.parse(ref);\n    const fragPath = (refurl.hash || \"#\")\n        .substring(1)\n        .split(\"/\")\n        .filter(v => v !== \"\");\n    const nextPath = path.posix.join(\n        cpd,\n        refurl.path || path.basename(currentPath)\n    );\n    return [nextPath, fragPath];\n};\n\nexport function getNBTTagFromTree(\n    tag: NBTTag<any>,\n    nbtPath: string[]\n): NBTTag<any> | undefined {\n    let lastTag = tag;\n    for (const s of nbtPath) {\n        if (lastTag.tagType === \"list\" && /\\d+/.test(s)) {\n            lastTag = (tag as NBTTagList).getVal()[parseInt(s, 10)];\n        } else if (lastTag.tagType === \"compound\") {\n            lastTag = (tag as NBTTagCompound).getVal()[s];\n        } else {\n            return undefined;\n        }\n    }\n    return lastTag;\n}\n\nexport function isRefNode(node: NBTNode): node is RefNode {\n    return \"ref\" in node;\n}\n\nexport function isFunctionNode(node: NBTNode): node is FunctionNode {\n    return \"function\" in node;\n}\n\nexport function isTypedNode(\n    node: NBTNode\n): node is NoPropertyNode | CompoundNode | ListNode | RootNode {\n    return \"type\" in node;\n}\n\nexport function isCompoundNode(node: NBTNode): node is CompoundNode {\n    return isTypedNode(node) && node.type === \"compound\";\n}\n\nexport function isRootNode(node: NBTNode): node is RootNode {\n    return isTypedNode(node) && node.type === \"root\";\n}\n\nexport function isListNode(node: NBTNode): node is ListNode {\n    return isTypedNode(node) && node.type === \"list\";\n}\n\nexport interface NBTValidationInfo {\n    extraChildren: boolean;\n    compoundMerge(): CompoundNode; // This is so the compound parser can merge child ref on call\n}\n\nexport const VALIDATION_ERRORS = {\n    badIndex: new CommandErrorBuilder(\n        \"argument.nbt.validation.list.badpath\",\n        \"The index '%s' is not a valid index\"\n    ),\n    noSuchChild: new CommandErrorBuilder(\n        \"argument.nbt.validation.compound.nochild\",\n        \"The tag does not have a child named '%s'\",\n        DiagnosticSeverity.Warning\n    ),\n    wrongType: new CommandErrorBuilder(\n        \"argument.nbt.validation.wrongtype\",\n        \"The tag type '%s' is not the correct type '%s'\"\n    )\n};\n","import { StringReader } from \"../../../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../../../misc-functions\";\nimport { CE, LineRange, ReturnedInfo, Suggestion } from \"../../../../types\";\nimport { runSuggestFunction } from \"../doc-walker-func\";\nimport {\n    isTypedNode,\n    NBTNode,\n    NBTValidationInfo,\n    VALIDATION_ERRORS\n} from \"../util/doc-walker-util\";\nimport { CorrectLevel, NBTErrorData } from \"../util/nbt-util\";\n\nexport type ParseReturn = ReturnedInfo<CorrectLevel, CE, NBTErrorData>;\n\nexport type TagType =\n    | \"byte\"\n    | \"short\"\n    | \"int\"\n    | \"long\"\n    | \"float\"\n    | \"double\"\n    | \"byte_array\"\n    | \"int_array\"\n    | \"long_array\"\n    | \"string\"\n    | \"list\"\n    | \"compound\";\n\nexport abstract class NBTTag<L> {\n    public abstract readonly tagType: TagType;\n    protected range: LineRange;\n\n    protected val: L;\n\n    public constructor(val: L) {\n        this.val = val;\n        this.range = { start: 0, end: 0 };\n    }\n\n    public getRange(): LineRange {\n        return this.range;\n    }\n\n    public getVal(): L {\n        return this.val;\n    }\n\n    public parse(reader: StringReader): ParseReturn {\n        const start = reader.cursor;\n        const out = this.readTag(reader);\n        this.range = {\n            end: reader.cursor,\n            start\n        };\n        return out;\n    }\n\n    /**\n     * Test if two NBT tags are equivalent in value\n     * @param tag The NBT tag to test against\n     */\n    public tagEq(tag: NBTTag<any>): boolean {\n        return tag.tagType === this.tagType && tag.getVal() === this.getVal();\n    }\n\n    public validationResponse(\n        node: NBTNode,\n        // @ts-ignore\n        info?: NBTValidationInfo\n    ): ReturnedInfo<undefined> {\n        const helper = new ReturnHelper();\n        if (!isTypedNode(node)) {\n            return helper.fail(\n                VALIDATION_ERRORS.wrongType.create(\n                    this.range.start,\n                    this.range.end,\n                    \"\",\n                    this.tagType\n                )\n            );\n        } else if (node.type !== this.tagType) {\n            return helper.fail(\n                VALIDATION_ERRORS.wrongType.create(\n                    this.range.start,\n                    this.range.end,\n                    node.type,\n                    this.tagType\n                )\n            );\n        } else {\n            if (node.suggestions) {\n                for (const k of node.suggestions) {\n                    if (typeof k === \"string\") {\n                        helper.addSuggestion(this.range.start, k);\n                    } else if (\"function\" in k) {\n                        helper.addSuggestions(\n                            ...runSuggestFunction(\n                                k.function.id,\n                                k.function.params\n                            ).map<Suggestion>(v => ({\n                                start: this.range.start,\n                                text: v\n                            }))\n                        );\n                    } else {\n                        helper.addSuggestion(\n                            this.range.start,\n                            k.value,\n                            undefined,\n                            k.description\n                        );\n                    }\n                }\n            }\n            return helper.succeed();\n        }\n    }\n\n    protected abstract readTag(reader: StringReader): ParseReturn;\n}\n","import { StringReader } from \"../../../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../../../misc-functions\";\nimport { NBTTag, ParseReturn } from \"./nbt-tag\";\n\nexport class NBTTagString extends NBTTag<string> {\n    public tagType: \"string\" = \"string\";\n\n    protected readTag(reader: StringReader): ParseReturn {\n        const helper = new ReturnHelper();\n        const str = reader.readString();\n        if (!helper.merge(str)) {\n            return helper.failWithData({ correct: 1 });\n        } else {\n            this.val = str.data;\n            return helper.succeed(1);\n        }\n    }\n}\n","import * as path from \"path\";\nimport { sprintf } from \"sprintf-js\";\nimport { NBTTag } from \"./tag/nbt-tag\";\nimport { NBTTagString } from \"./tag/string-tag\";\nimport { FunctionNode, getNBTTagFromTree } from \"./util/doc-walker-util\";\n\ninterface PathFunctions {\n    [key: string]: PathFunc;\n}\n\ninterface SuggestFuncs {\n    [key: string]: SuggestFunc;\n}\n\ntype PathFunc = (\n    parsed: NBTTag<any>,\n    nbtPath: string[],\n    node: FunctionNode,\n    args: any\n) => string;\ntype SuggestFunc = (func: string, args: any) => string[];\n\nconst pathsFuncs: PathFunctions = {\n    insertStringNBT\n};\n\nexport function runNodeFunction(\n    parsed: NBTTag<any>,\n    nbtPath: string[],\n    node: FunctionNode\n): string {\n    return pathsFuncs[node.function.id](\n        parsed,\n        nbtPath,\n        node,\n        node.function.params\n    );\n}\n\nconst suggestFuncs: SuggestFuncs = {};\n\ninterface InsertStringNBTArgs {\n    default: string;\n    ref: string;\n    tag_path: string;\n}\n\nfunction insertStringNBT(\n    parsed: NBTTag<any>,\n    nbtPath: string[],\n    // @ts-ignore\n    node: FunctionNode,\n    args: InsertStringNBTArgs\n): string {\n    const newRef = path.posix\n        .join(path.dirname(nbtPath.join(\"/\")), args.tag_path)\n        .split(\"/\");\n    const out = getNBTTagFromTree(parsed, newRef);\n    return !out || !(out instanceof NBTTagString)\n        ? args.default\n        : sprintf(args.ref, out.getVal());\n}\n\n// Suggest function\n\nexport function runSuggestFunction(func: string, args: any): string[] {\n    return suggestFuncs[func](func, args);\n}\n","import { StringReader } from \"../../../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../../../misc-functions\";\nimport { ReturnSuccess, SuggestResult } from \"../../../../types\";\nimport { runSuggestFunction } from \"../doc-walker-func\";\nimport { NBTTag } from \"../tag/nbt-tag\";\nimport { isCompoundNode, isListNode, NBTNode } from \"./doc-walker-util\";\n\nexport const ARRAY_START = \"[\";\nexport const ARRAY_END = \"]\";\nexport const ARRAY_PREFIX_SEP = \";\";\nexport const ARRAY_VALUE_SEP = \",\";\n\nexport const LIST_START = \"[\";\nexport const LIST_END = \"]\";\nexport const LIST_VALUE_SEP = \",\";\n\nexport const COMPOUND_START = \"{\";\nexport const COMPOUND_END = \"}\";\nexport const COMPOUND_KEY_VALUE_SEP = \":\";\nexport const COMPOUND_PAIR_SEP = \",\";\n\nexport interface NBTErrorData {\n    correct: CorrectLevel;\n    parsed?: NBTTag<any>;\n    path?: string[];\n}\n\nexport enum CorrectLevel {\n    NO,\n    MAYBE,\n    YES\n}\n\nconst parseNumberNBT = (float: boolean) => (reader: StringReader) => {\n    const start = reader.cursor;\n    try {\n        const helper = new ReturnHelper();\n        const f = reader.readFloat();\n        if (!helper.merge(f)) {\n            throw undefined; // This gets caught\n        }\n        const e = reader.readOption([\"E\", \"e\"], true, undefined, \"option\");\n        if (!helper.merge(e)) {\n            throw undefined; // This gets caught\n        }\n        // Returns beyond here because it must be scientific notation\n        const exp = reader.readInt();\n        if (helper.merge(exp)) {\n            return helper.succeed(f.data * Math.pow(10, exp.data));\n        } else {\n            return helper.fail();\n        }\n    } catch (e) {\n        reader.cursor = start;\n        const helper = new ReturnHelper();\n        const int = float ? reader.readFloat() : reader.readInt();\n        if (helper.merge(int)) {\n            return helper.succeed(int.data);\n        } else {\n            return helper.fail();\n        }\n    }\n};\n\nexport const parseFloatNBT = parseNumberNBT(true);\nexport const parseIntNBT = parseNumberNBT(false);\n\nexport function getNBTSuggestions(\n    node: NBTNode,\n    cursor: number\n): ReturnSuccess<undefined> {\n    const helper = new ReturnHelper();\n    if (node.suggestions) {\n        const sugg = node.suggestions;\n        if (sugg) {\n            sugg.forEach(v => {\n                if (typeof v === \"string\") {\n                    helper.addSuggestion(cursor, v);\n                } else if (\"function\" in v) {\n                    runSuggestFunction(\n                        v.function.id,\n                        v.function.params\n                    ).forEach(v2 => helper.addSuggestion(cursor, v2));\n                } else {\n                    helper.addSuggestion(\n                        cursor,\n                        v.value,\n                        undefined,\n                        v.description\n                    );\n                }\n            });\n        }\n    }\n    if (isCompoundNode(node) && node.children) {\n        helper.addSuggestions(\n            ...Object.keys(node.children).map<SuggestResult>(v => ({\n                // @ts-ignore\n                description: node.children[v].description,\n                start: cursor,\n                text: v\n            }))\n        );\n    } else if (isListNode(node) && node.item) {\n        helper.mergeChain(getNBTSuggestions(node.item, cursor));\n    }\n    return helper.succeed();\n}\n","import { StringReader } from \"../../../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../../../misc-functions\";\nimport { CorrectLevel, parseIntNBT } from \"../util/nbt-util\";\nimport { NBTTag, ParseReturn } from \"./nbt-tag\";\n\nexport const BYTE_TAG_SUFFIX = \"b\";\n\nexport class NBTTagByte extends NBTTag<number> {\n    public tagType: \"byte\" = \"byte\";\n\n    protected readTag(reader: StringReader): ParseReturn {\n        const readInt = parseIntNBT(reader);\n        const helper = new ReturnHelper();\n        if (!helper.merge(readInt)) {\n            return helper.failWithData({ correct: 0 });\n        }\n        const exp = reader.expect(BYTE_TAG_SUFFIX);\n        if (!helper.merge(exp)) {\n            return helper.failWithData({ correct: 0 });\n        }\n        this.val = readInt.data;\n        return helper.succeed(CorrectLevel.YES);\n    }\n}\n","import { CommandErrorBuilder } from \"../../../../brigadier/errors\";\nimport { StringReader } from \"../../../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../../../misc-functions\";\nimport {\n    ARRAY_END,\n    ARRAY_PREFIX_SEP,\n    ARRAY_START,\n    ARRAY_VALUE_SEP,\n    CorrectLevel\n} from \"../util/nbt-util\";\nimport { NBTTagByte } from \"./byte-tag\";\nimport { NBTTag, ParseReturn } from \"./nbt-tag\";\n\nexport const BYTE_ARRAY_PREFIX = \"B\";\n\nconst EXCEPTIONS = {\n    BAD_CHAR: new CommandErrorBuilder(\n        \"argument.nbt.bytearray.badchar\",\n        \"Expected ',' or ']', got '%s'\"\n    ),\n    NO_VALUE: new CommandErrorBuilder(\n        \"argument.nbt.bytearray.value\",\n        \"Expected value\"\n    )\n};\n\nexport class NBTTagByteArray extends NBTTag<NBTTagByte[]> {\n    public tagType: \"byte_array\" = \"byte_array\";\n\n    public tagEq(tag: NBTTag<any>): boolean {\n        if (tag.tagType !== this.tagType) {\n            return false;\n        }\n        const taga: NBTTagByteArray = tag as NBTTagByteArray;\n        return (\n            this.val.length === taga.getVal().length &&\n            this.val.every((v, i) => v.getVal() === taga.val[i].getVal())\n        );\n    }\n\n    protected readTag(reader: StringReader): ParseReturn {\n        const helper = new ReturnHelper();\n        const start = reader.cursor;\n        const arrstart = reader.expect(\n            ARRAY_START + BYTE_ARRAY_PREFIX + ARRAY_PREFIX_SEP\n        );\n        if (!helper.merge(arrstart)) {\n            return helper.failWithData({ correct: CorrectLevel.NO });\n        }\n        if (!reader.canRead()) {\n            helper.addSuggestion(reader.cursor, ARRAY_END);\n            helper.addErrors(EXCEPTIONS.NO_VALUE.create(start, reader.cursor));\n            return helper.failWithData({ parsed: this, correct: 2 });\n        }\n        if (reader.peek() === ARRAY_END) {\n            reader.skip();\n            return helper.succeed(2);\n        }\n        let next = reader.peek();\n        while (next !== ARRAY_END) {\n            reader.skipWhitespace();\n\n            if (!reader.canRead()) {\n                helper.addErrors(\n                    EXCEPTIONS.NO_VALUE.create(start, reader.cursor)\n                );\n                return helper.failWithData({ parsed: this, correct: 2 });\n            }\n\n            reader.skipWhitespace();\n\n            const val = new NBTTagByte(0);\n            const parseResult = val.parse(reader);\n\n            helper.merge(parseResult);\n\n            this.val.push(val);\n\n            if (!reader.canRead()) {\n                helper.addErrors(\n                    EXCEPTIONS.NO_VALUE.create(start, reader.cursor)\n                );\n                return helper.failWithData({ parsed: this, correct: 2 });\n            }\n\n            reader.skipWhitespace();\n            const opt = reader.readOption(\n                [ARRAY_END, ARRAY_VALUE_SEP],\n                true,\n                undefined,\n                \"option\"\n            );\n            if (!helper.merge(opt)) {\n                return helper.failWithData({ parsed: this, correct: 2 });\n            } else {\n                next = opt.data;\n            }\n        }\n        return helper.succeed(CorrectLevel.YES);\n    }\n}\n","import { StringReader } from \"../../../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../../../misc-functions\";\nimport { CorrectLevel, parseFloatNBT } from \"../util/nbt-util\";\nimport { NBTTag, ParseReturn } from \"./nbt-tag\";\n\nexport const DOUBLE_TAG_SUFFIX = \"d\";\n\nexport class NBTTagDouble extends NBTTag<number> {\n    public tagType: \"double\" = \"double\";\n\n    protected readTag(reader: StringReader): ParseReturn {\n        const readInt = parseFloatNBT(reader);\n        const helper = new ReturnHelper();\n        if (!helper.merge(readInt)) {\n            return helper.failWithData({ correct: 0 });\n        }\n        const exp = reader.expect(DOUBLE_TAG_SUFFIX);\n        if (!helper.merge(exp)) {\n            return helper.failWithData({ correct: 0 });\n        }\n        this.val = readInt.data;\n        return helper.succeed(CorrectLevel.YES);\n    }\n}\n","import { StringReader } from \"../../../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../../../misc-functions\";\nimport { CorrectLevel, parseFloatNBT } from \"../util/nbt-util\";\nimport { NBTTag, ParseReturn } from \"./nbt-tag\";\n\nexport const FLOAT_TAG_SUFFIX = \"f\";\n\nexport class NBTTagFloat extends NBTTag<number> {\n    public tagType: \"float\" = \"float\";\n\n    protected readTag(reader: StringReader): ParseReturn {\n        const readInt = parseFloatNBT(reader);\n        const helper = new ReturnHelper();\n        if (!helper.merge(readInt)) {\n            return helper.failWithData({ correct: 0 });\n        }\n        const exp = reader.expect(FLOAT_TAG_SUFFIX);\n        if (!helper.merge(exp)) {\n            return helper.failWithData({ correct: 0 });\n        }\n        this.val = readInt.data;\n        return helper.succeed(CorrectLevel.YES);\n    }\n}\n","import { StringReader } from \"../../../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../../../misc-functions\";\nimport { CorrectLevel, parseIntNBT } from \"../util/nbt-util\";\nimport { NBTTag, ParseReturn } from \"./nbt-tag\";\n\nexport class NBTTagInt extends NBTTag<number> {\n    public tagType: \"int\" = \"int\";\n\n    protected readTag(reader: StringReader): ParseReturn {\n        const readInt = parseIntNBT(reader);\n        const helper = new ReturnHelper();\n        if (!helper.merge(readInt)) {\n            return helper.failWithData({ correct: 0 });\n        }\n        this.val = readInt.data;\n        return helper.succeed(CorrectLevel.YES);\n    }\n}\n","import { CommandErrorBuilder } from \"../../../../brigadier/errors\";\nimport { StringReader } from \"../../../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../../../misc-functions\";\nimport {\n    ARRAY_END,\n    ARRAY_PREFIX_SEP,\n    ARRAY_START,\n    ARRAY_VALUE_SEP,\n    CorrectLevel\n} from \"../util/nbt-util\";\nimport { NBTTagInt } from \"./int-tag\";\nimport { NBTTag, ParseReturn } from \"./nbt-tag\";\n\nexport const INT_ARRAY_PREFIX = \"I\";\n\nconst EXCEPTIONS = {\n    BAD_CHAR: new CommandErrorBuilder(\n        \"argument.nbt.intarray.badchar\",\n        \"Expected ',' or ']', got '%s'\"\n    ),\n    NO_VALUE: new CommandErrorBuilder(\n        \"argument.nbt.intarray.value\",\n        \"Expected value\"\n    )\n};\n\nexport class NBTTagIntArray extends NBTTag<NBTTagInt[]> {\n    public tagType: \"int_array\" = \"int_array\";\n\n    public tagEq(tag: NBTTag<any>): boolean {\n        if (tag.tagType !== this.tagType) {\n            return false;\n        }\n        const taga: NBTTagIntArray = tag as NBTTagIntArray;\n        return (\n            this.val.length === taga.getVal().length &&\n            this.val.every((v, i) => v.getVal() === taga.val[i].getVal())\n        );\n    }\n\n    protected readTag(reader: StringReader): ParseReturn {\n        const helper = new ReturnHelper();\n        const start = reader.cursor;\n        const arrstart = reader.expect(\n            ARRAY_START + INT_ARRAY_PREFIX + ARRAY_PREFIX_SEP\n        );\n        if (!helper.merge(arrstart)) {\n            return helper.failWithData({ correct: CorrectLevel.NO });\n        }\n        if (!reader.canRead()) {\n            helper.addSuggestion(reader.cursor, ARRAY_END);\n            helper.addErrors(EXCEPTIONS.NO_VALUE.create(start, reader.cursor));\n            return helper.failWithData({ parsed: this, correct: 2 });\n        }\n        if (reader.peek() === ARRAY_END) {\n            reader.skip();\n            return helper.succeed(2);\n        }\n        let next = reader.peek();\n        while (next !== ARRAY_END) {\n            reader.skipWhitespace();\n\n            if (!reader.canRead()) {\n                helper.addErrors(\n                    EXCEPTIONS.NO_VALUE.create(start, reader.cursor)\n                );\n                return helper.failWithData({ parsed: this, correct: 2 });\n            }\n\n            reader.skipWhitespace();\n\n            const val = new NBTTagInt(0);\n            const parseResult = val.parse(reader);\n\n            helper.merge(parseResult);\n\n            this.val.push(val);\n\n            if (!reader.canRead()) {\n                helper.addErrors(\n                    EXCEPTIONS.NO_VALUE.create(start, reader.cursor)\n                );\n                return helper.failWithData({ parsed: this, correct: 2 });\n            }\n\n            reader.skipWhitespace();\n            const opt = reader.readOption(\n                [ARRAY_END, ARRAY_VALUE_SEP],\n                true,\n                undefined,\n                \"option\"\n            );\n            if (!helper.merge(opt)) {\n                return helper.failWithData({ parsed: this, correct: 2 });\n            } else {\n                next = opt.data;\n            }\n        }\n        return helper.succeed(CorrectLevel.YES);\n    }\n}\n","import { CommandErrorBuilder } from \"../../../../brigadier/errors\";\nimport { StringReader } from \"../../../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../../../misc-functions\";\nimport { parseTag } from \"../tag-parser\";\nimport { LIST_END, LIST_START, LIST_VALUE_SEP } from \"../util/nbt-util\";\nimport { NBTTag, ParseReturn } from \"./nbt-tag\";\n\nconst MIXED = new CommandErrorBuilder(\n    \"argument.nbt.list.mixed\",\n    \"Mixed value types\"\n);\nconst NOVAL = new CommandErrorBuilder(\n    \"argument.nbt.list.noval\",\n    \"Expected ']'\"\n);\n\nexport class NBTTagList extends NBTTag<Array<NBTTag<any>>> {\n    public tagType: \"list\" = \"list\";\n\n    public tagEq(tag: NBTTag<any>): boolean {\n        if (tag.tagType !== this.tagType) {\n            return false;\n        }\n        return (\n            this.val.length === (tag as NBTTagList).val.length &&\n            this.val.every((v, i) => v.tagEq((tag as NBTTagList).getVal()[i]))\n        );\n    }\n\n    protected readTag(reader: StringReader): ParseReturn {\n        const start = reader.cursor;\n        const helper = new ReturnHelper();\n        const listStart = reader.expect(LIST_START);\n        if (!helper.merge(listStart)) {\n            return helper.failWithData({ correct: 0 });\n        }\n        if (!reader.canRead()) {\n            helper.addSuggestion(reader.cursor, LIST_END);\n            helper.addErrors(NOVAL.create(start, reader.cursor));\n            return helper.failWithData({ parsed: this, correct: 2 });\n        }\n        if (reader.peek() === LIST_END) {\n            reader.skip();\n            return helper.succeed(2);\n        }\n        let type: NBTTag<any>[\"tagType\"] | undefined;\n        let next = reader.peek();\n        while (next !== LIST_END) {\n            reader.skipWhitespace();\n\n            let value: NBTTag<any>;\n\n            const tag = parseTag(reader);\n            if (helper.merge(tag)) {\n                value = tag.data;\n            } else {\n                if (tag.data.parsed) {\n                    this.val.push(tag.data.parsed);\n                }\n                return helper.failWithData({\n                    correct: 2,\n                    parsed: this,\n                    path: [\n                        (this.val.length - 1).toString(),\n                        ...(tag.data.path || [])\n                    ]\n                });\n            }\n\n            if (type === undefined) {\n                type = value.tagType;\n            } else if (type !== value.tagType) {\n                helper.addErrors(MIXED.create(start, reader.cursor));\n                return helper.failWithData({ parsed: this, correct: 2 });\n            }\n\n            this.val.push(value);\n\n            reader.skipWhitespace();\n            const opt = reader.readOption(\n                [LIST_END, LIST_VALUE_SEP],\n                true,\n                undefined,\n                \"option\"\n            );\n            if (!helper.merge(opt)) {\n                return helper.failWithData({ parsed: this, correct: 2 });\n            } else {\n                next = opt.data;\n            }\n        }\n        return helper.succeed(2);\n    }\n}\n","import { StringReader } from \"../../../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../../../misc-functions\";\nimport { CorrectLevel, parseIntNBT } from \"../util/nbt-util\";\nimport { NBTTag, ParseReturn } from \"./nbt-tag\";\n\nexport const LONG_TAG_SUFFIX = \"l\";\n\nexport class NBTTagLong extends NBTTag<number> {\n    public tagType: \"long\" = \"long\";\n\n    protected readTag(reader: StringReader): ParseReturn {\n        const readInt = parseIntNBT(reader);\n        const helper = new ReturnHelper();\n        if (!helper.merge(readInt)) {\n            return helper.failWithData({ correct: 0 });\n        }\n        const exp = reader.expect(LONG_TAG_SUFFIX);\n        if (!helper.merge(exp)) {\n            return helper.failWithData({ correct: 0 });\n        }\n        this.val = readInt.data;\n        return helper.succeed(CorrectLevel.YES);\n    }\n}\n","import { CommandErrorBuilder } from \"../../../../brigadier/errors\";\nimport { StringReader } from \"../../../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../../../misc-functions\";\nimport {\n    ARRAY_END,\n    ARRAY_PREFIX_SEP,\n    ARRAY_START,\n    ARRAY_VALUE_SEP,\n    CorrectLevel\n} from \"../util/nbt-util\";\nimport { NBTTagLong } from \"./long-tag\";\nimport { NBTTag, ParseReturn } from \"./nbt-tag\";\n\nexport const LONG_ARRAY_PREFIX = \"L\";\n\nconst EXCEPTIONS = {\n    BAD_CHAR: new CommandErrorBuilder(\n        \"argument.nbt.longarray.badchar\",\n        \"Expected ',' or ']', got '%s'\"\n    ),\n    NO_VALUE: new CommandErrorBuilder(\n        \"argument.nbt.longarray.value\",\n        \"Expected value\"\n    )\n};\n\nexport class NBTTagLongArray extends NBTTag<NBTTagLong[]> {\n    public tagType: \"long_array\" = \"long_array\";\n\n    public tagEq(tag: NBTTag<any>): boolean {\n        if (tag.tagType !== this.tagType) {\n            return false;\n        }\n        const taga: NBTTagLongArray = tag as NBTTagLongArray;\n        return (\n            this.val.length === taga.getVal().length &&\n            this.val.every((v, i) => v.getVal() === taga.val[i].getVal())\n        );\n    }\n\n    protected readTag(reader: StringReader): ParseReturn {\n        const helper = new ReturnHelper();\n        const start = reader.cursor;\n        const arrstart = reader.expect(\n            ARRAY_START + LONG_ARRAY_PREFIX + ARRAY_PREFIX_SEP\n        );\n        if (!helper.merge(arrstart)) {\n            return helper.failWithData({ correct: CorrectLevel.NO });\n        }\n        if (!reader.canRead()) {\n            helper.addSuggestion(reader.cursor, ARRAY_END);\n            helper.addErrors(EXCEPTIONS.NO_VALUE.create(start, reader.cursor));\n            return helper.failWithData({ parsed: this, correct: 2 });\n        }\n        if (reader.peek() === ARRAY_END) {\n            reader.skip();\n            return helper.succeed(2);\n        }\n        let next = reader.peek();\n        while (next !== ARRAY_END) {\n            reader.skipWhitespace();\n\n            if (!reader.canRead()) {\n                helper.addErrors(\n                    EXCEPTIONS.NO_VALUE.create(start, reader.cursor)\n                );\n                return helper.failWithData({ parsed: this, correct: 2 });\n            }\n\n            reader.skipWhitespace();\n\n            const val = new NBTTagLong(0);\n            const parseResult = val.parse(reader);\n\n            helper.merge(parseResult);\n\n            this.val.push(val);\n\n            if (!reader.canRead()) {\n                helper.addErrors(\n                    EXCEPTIONS.NO_VALUE.create(start, reader.cursor)\n                );\n                return helper.failWithData({ parsed: this, correct: 2 });\n            }\n\n            reader.skipWhitespace();\n            const opt = reader.readOption(\n                [ARRAY_END, ARRAY_VALUE_SEP],\n                true,\n                undefined,\n                \"option\"\n            );\n            if (!helper.merge(opt)) {\n                return helper.failWithData({ parsed: this, correct: 2 });\n            } else {\n                next = opt.data;\n            }\n        }\n        return helper.succeed(CorrectLevel.YES);\n    }\n}\n","import { StringReader } from \"../../../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../../../misc-functions\";\nimport { CorrectLevel, parseIntNBT } from \"../util/nbt-util\";\nimport { NBTTag, ParseReturn } from \"./nbt-tag\";\n\nexport const SHORT_TAG_SUFFIX = \"s\";\n\nexport class NBTTagShort extends NBTTag<number> {\n    public tagType: \"short\" = \"short\";\n\n    protected readTag(reader: StringReader): ParseReturn {\n        const readInt = parseIntNBT(reader);\n        const helper = new ReturnHelper();\n        if (!helper.merge(readInt)) {\n            return helper.failWithData({ correct: 0 });\n        }\n        const exp = reader.expect(SHORT_TAG_SUFFIX);\n        if (!helper.merge(exp)) {\n            return helper.failWithData({ correct: 0 });\n        }\n        this.val = readInt.data;\n        return helper.succeed(CorrectLevel.YES);\n    }\n}\n","import { StringReader } from \"../../../brigadier/string-reader\";\nimport { isSuccessful, ReturnHelper } from \"../../../misc-functions\";\nimport { CE, ReturnedInfo } from \"../../../types\";\nimport { NBTTagByteArray } from \"./tag/byte-array-tag\";\nimport { NBTTagByte } from \"./tag/byte-tag\";\nimport { NBTTagCompound } from \"./tag/compound-tag\";\nimport { NBTTagDouble } from \"./tag/double-tag\";\nimport { NBTTagFloat } from \"./tag/float-tag\";\nimport { NBTTagIntArray } from \"./tag/int-array-tag\";\nimport { NBTTagInt } from \"./tag/int-tag\";\nimport { NBTTagList } from \"./tag/list-tag\";\nimport { NBTTagLongArray } from \"./tag/long-array-tag\";\nimport { NBTTagLong } from \"./tag/long-tag\";\nimport { NBTTag, ParseReturn } from \"./tag/nbt-tag\";\nimport { NBTTagShort } from \"./tag/short-tag\";\nimport { NBTTagString } from \"./tag/string-tag\";\nimport { CorrectLevel, NBTErrorData } from \"./util/nbt-util\";\n\nconst parsers: Array<() => NBTTag<any>> = [\n    () => new NBTTagByte(0),\n    () => new NBTTagShort(0),\n    () => new NBTTagLong(0),\n    () => new NBTTagFloat(0),\n    () => new NBTTagDouble(0),\n    () => new NBTTagInt(0),\n    () => new NBTTagByteArray([]),\n    () => new NBTTagIntArray([]),\n    () => new NBTTagLongArray([]),\n    () => new NBTTagCompound({}),\n    () => new NBTTagList([]),\n    () => new NBTTagString(\"\")\n];\n\nexport function parseTag(\n    reader: StringReader\n): ReturnedInfo<NBTTag<any>, CE, NBTErrorData> {\n    let correctTag: NBTTag<any> | undefined;\n    let correctness: CorrectLevel = 0;\n    let correctPlace: number = reader.cursor;\n\n    let lastResult: ParseReturn | undefined;\n    const helper = new ReturnHelper();\n\n    const start = reader.cursor;\n    for (const pf of parsers) {\n        const p = pf();\n        reader.cursor = start;\n        const out = p.parse(reader);\n        // @ts-ignore\n        if (isSuccessful(out)) {\n            if (out.data > correctness) {\n                lastResult = out;\n                correctPlace = reader.cursor;\n                correctness = out.data;\n                correctTag = p;\n            }\n        } else {\n            if (out.data.correct > correctness) {\n                lastResult = out;\n                correctPlace = reader.cursor;\n                correctness = out.data.correct;\n            }\n        }\n    }\n    // @ts-ignore\n    if (lastResult === undefined) {\n        return new ReturnHelper().failWithData({ correct: correctness });\n    }\n    if (helper.merge(lastResult)) {\n        if (correctTag === undefined) {\n            // This should never happen\n            return helper.failWithData({ correct: correctness });\n        } else {\n            reader.cursor = correctPlace;\n            return helper.succeed(correctTag);\n        }\n    } else {\n        return helper.failWithData(lastResult.data);\n    }\n}\n","import { CommandErrorBuilder } from \"../../../../brigadier/errors\";\nimport { StringReader } from \"../../../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../../../misc-functions\";\nimport { LineRange, ReturnedInfo } from \"../../../../types\";\nimport { parseTag } from \"../tag-parser\";\nimport {\n    isCompoundNode,\n    NBTNode,\n    NBTValidationInfo,\n    VALIDATION_ERRORS\n} from \"../util/doc-walker-util\";\nimport {\n    COMPOUND_END,\n    COMPOUND_KEY_VALUE_SEP,\n    COMPOUND_PAIR_SEP,\n    COMPOUND_START\n} from \"../util/nbt-util\";\nimport { NBTTag, ParseReturn } from \"./nbt-tag\";\n\nconst NO_KEY = new CommandErrorBuilder(\n    \"argument.nbt.compound.nokey\",\n    \"Expected key\"\n);\nconst NO_VAL = new CommandErrorBuilder(\n    \"argument.nbt.compound.noval\",\n    \"Expected value\"\n);\n\nexport interface KVPos {\n    key: string;\n    keyPos: LineRange;\n    valPos: LineRange;\n}\n\nexport class NBTTagCompound extends NBTTag<{ [key: string]: NBTTag<any> }> {\n    public tagType: \"compound\" = \"compound\";\n    private insertKeyPos = 0;\n\n    private kvpos: KVPos[] = [];\n\n    public getKeyPos(): KVPos[] {\n        return this.kvpos;\n    }\n\n    public tagEq(tag: NBTTag<any>): boolean {\n        if (tag.tagType !== this.tagType) {\n            return false;\n        }\n        return (\n            Object.keys(this.val).length === Object.keys(tag.getVal()).length &&\n            Object.keys(this.val).every(v =>\n                this.val[v].tagEq((tag as NBTTagCompound).val[v])\n            )\n        );\n    }\n\n    public validationResponse(\n        auxnode: NBTNode,\n        info: NBTValidationInfo\n    ): ReturnedInfo<undefined> {\n        const helper = new ReturnHelper();\n        const superResponse = super.validationResponse(auxnode, info);\n        if (!helper.merge(superResponse)) {\n            return helper.fail();\n        }\n        if (!isCompoundNode(auxnode)) {\n            // Mainly a type guard\n            return helper.fail();\n        }\n        const node = info.compoundMerge();\n        for (const k of this.kvpos) {\n            if (!info.extraChildren && !(k.key in (node.children || {}))) {\n                helper.addErrors(\n                    VALIDATION_ERRORS.noSuchChild.create(\n                        k.keyPos.start,\n                        k.valPos.end,\n                        k.key\n                    )\n                );\n            }\n        }\n        if (node.children) {\n            for (const c of Object.keys(node.children)) {\n                helper.addSuggestion(\n                    this.insertKeyPos,\n                    c,\n                    undefined,\n                    node.children[c].description\n                );\n            }\n        }\n        return helper.succeed();\n    }\n\n    protected readTag(reader: StringReader): ParseReturn {\n        const helper = new ReturnHelper();\n        const start = reader.cursor;\n        const compStart = reader.expect(COMPOUND_START);\n        if (!helper.merge(compStart)) {\n            return helper.failWithData({ correct: 0, parsed: this });\n        }\n        if (!reader.canRead()) {\n            this.insertKeyPos = reader.cursor;\n            helper.addSuggestion(reader.cursor, COMPOUND_END);\n            helper.addErrors(NO_KEY.create(start, reader.cursor));\n            return helper.failWithData({ parsed: this, correct: 2 });\n        }\n        if (reader.peek() === COMPOUND_END) {\n            reader.skip();\n            return helper.succeed(2);\n        }\n        let next = reader.peek();\n        const keys = [];\n        this.kvpos = [];\n        while (next !== COMPOUND_END) {\n            reader.skipWhitespace();\n\n            this.insertKeyPos = reader.cursor;\n\n            if (!reader.canRead()) {\n                helper.addErrors(NO_KEY.create(start, reader.cursor));\n                return helper.failWithData({\n                    correct: 2,\n                    parsed: this,\n                    path: []\n                });\n            }\n            const keyS = reader.cursor;\n            const key = reader.readString();\n            if (!helper.merge(key)) {\n                return helper.failWithData({\n                    correct: 2,\n                    parsed: this,\n                    path: []\n                });\n            }\n            const keyE = reader.cursor;\n            keys.push(key.data);\n\n            reader.skipWhitespace();\n\n            const kvs = reader.expect(COMPOUND_KEY_VALUE_SEP);\n            if (!helper.merge(kvs)) {\n                this.kvpos.push({\n                    key: key.data,\n                    keyPos: { start: keyS, end: keyE },\n                    valPos: { start: reader.cursor, end: reader.cursor }\n                });\n                return helper.failWithData({\n                    correct: 2,\n                    parsed: this,\n                    path: [key.data]\n                });\n            }\n\n            reader.skipWhitespace();\n\n            if (!reader.canRead()) {\n                this.kvpos.push({\n                    key: key.data,\n                    keyPos: { start: keyS, end: keyE },\n                    valPos: { start: reader.cursor, end: reader.cursor }\n                });\n                helper.addErrors(NO_VAL.create(keyS, reader.cursor));\n                return helper.failWithData({\n                    correct: 2,\n                    parsed: this,\n                    path: [key.data]\n                });\n            }\n\n            const valS = reader.cursor;\n\n            let val: NBTTag<any>;\n            const pkey = parseTag(reader);\n\n            this.kvpos.push({\n                key: key.data,\n                keyPos: { start: keyS, end: keyE },\n                valPos: { start: valS, end: reader.cursor }\n            });\n\n            if (helper.merge(pkey)) {\n                val = pkey.data;\n            } else {\n                const path = [key.data, ...(pkey.data.path || [])];\n                if (pkey.data.parsed) {\n                    this.val[key.data] = pkey.data.parsed;\n                }\n                return helper.failWithData({\n                    correct: 2,\n                    parsed: this,\n                    path\n                });\n            }\n\n            reader.skipWhitespace();\n\n            this.val[key.data] = val;\n\n            reader.skipWhitespace();\n\n            const opt = reader.readOption(\n                [COMPOUND_END, COMPOUND_PAIR_SEP],\n                true,\n                undefined,\n                \"option\"\n            );\n            if (!helper.merge(opt)) {\n                return helper.failWithData({\n                    correct: 2,\n                    parsed: this,\n                    path: [key.data]\n                });\n            } else {\n                next = opt.data;\n            }\n        }\n        return helper.succeed(2);\n    }\n}\n","export class ArrayReader {\n    private readonly arr: string[];\n    private index = 0;\n\n    public constructor(arr: string[]) {\n        this.arr = arr;\n    }\n\n    public end(): boolean {\n        return this.index === this.arr.length;\n    }\n\n    public getArray(): string[] {\n        return this.arr;\n    }\n\n    public getIndex(): number {\n        return this.index;\n    }\n\n    public getRead(): string[] {\n        return this.arr.slice(0, this.index);\n    }\n\n    public insert(val: string[], index: number = 0): void {\n        this.arr.splice(index, 0, ...val);\n    }\n\n    public peek(): string {\n        return this.arr[this.index];\n    }\n\n    public read(): string {\n        return this.arr[this.index++];\n    }\n\n    public setIndex(val: number): void {\n        this.index = val;\n    }\n\n    public skip(): void {\n        this.index++;\n    }\n}\n","import { isString } from \"util\";\nimport { ReturnHelper } from \"../../../misc-functions\";\nimport { ReturnedInfo } from \"../../../types\";\nimport { MemoryFS } from \"./doc-fs\";\nimport { runNodeFunction } from \"./doc-walker-func\";\nimport { NBTTagCompound } from \"./tag/compound-tag\";\nimport { NBTTagList } from \"./tag/list-tag\";\nimport { NBTTag } from \"./tag/nbt-tag\";\nimport { ArrayReader } from \"./util/array-reader\";\nimport {\n    CompoundNode,\n    FunctionNode,\n    isCompoundNode,\n    isFunctionNode,\n    isListNode,\n    isRefNode,\n    isRootNode,\n    isTypedNode,\n    ListNode,\n    NBTNode,\n    parseRefPath,\n    RefNode,\n    RootNode,\n    VALIDATION_ERRORS,\n    ValueList\n} from \"./util/doc-walker-util\";\n\ninterface ContextData<\n    N extends NBTNode = NBTNode,\n    T extends NBTTag<any> = NBTTag<any>\n> {\n    readonly allowRefWalk: boolean;\n    readonly finalValidation: boolean;\n    readonly node: N;\n    readonly path: string;\n    readonly reader: ArrayReader;\n    readonly tag?: T;\n}\n\n// tslint:disable:cyclomatic-complexity\nexport class NBTWalker {\n    private readonly docfs: MemoryFS;\n    private readonly extraChildren: boolean;\n    private readonly nbtvld: boolean;\n    private readonly parsed: NBTTag<any>;\n    private readonly root: string;\n\n    public constructor(\n        parsed: NBTTag<any>,\n        docfs: MemoryFS,\n        extraChild: boolean,\n        nbtvalidation: boolean = true,\n        root: string = \"root.json\"\n    ) {\n        this.docfs = docfs;\n        this.parsed = parsed;\n        this.extraChildren = extraChild;\n        this.root = root;\n        this.nbtvld = nbtvalidation;\n    }\n\n    public getFinalNode(nbtpath: string[]): ReturnedInfo<NBTNode> {\n        const node = this.docfs.get<NBTNode>(this.root);\n        const reader = new ArrayReader(nbtpath);\n        return this.getNextNode({\n            allowRefWalk: false,\n            finalValidation: true,\n            node,\n            path: this.root,\n            reader,\n            tag: this.nbtvld ? this.parsed : undefined\n        });\n    }\n\n    private evalRef(\n        ref: string,\n        path: string,\n        data: ContextData\n    ): ReturnedInfo<NBTNode> {\n        const [nextPath, fragPath] = parseRefPath(ref, path);\n        const reader = new ArrayReader(fragPath);\n        const node = this.docfs.get<NBTNode>(nextPath);\n        return this.getNextNode({\n            allowRefWalk: true,\n            finalValidation: false,\n            node,\n            path: nextPath,\n            reader,\n            tag: data.tag\n        });\n    }\n\n    private getNextNode(data: ContextData): ReturnedInfo<NBTNode> {\n        const { reader, node, tag, allowRefWalk, finalValidation } = data;\n        const helper = new ReturnHelper();\n        if (reader.end()) {\n            if (isRefNode(node)) {\n                return this.walkRefNode(data as ContextData<RefNode>);\n            } else if (isFunctionNode(node)) {\n                return this.walkFunctionNode(data as ContextData<FunctionNode>);\n            } else if (isCompoundNode(node)) {\n                if (finalValidation && this.nbtvld && tag) {\n                    const valres = tag.validationResponse(node, {\n                        compoundMerge: () =>\n                            this.mergeChildRef(data as ContextData<\n                                CompoundNode,\n                                NBTTagCompound\n                            >),\n                        extraChildren: this.extraChildren\n                    });\n                    if (!helper.merge(valres)) {\n                        return helper.fail();\n                    }\n                }\n                return helper.succeed(\n                    finalValidation\n                        ? this.mergeChildRef(data as ContextData<CompoundNode>)\n                        : node\n                );\n            } else {\n                if (finalValidation && this.nbtvld && tag) {\n                    const valres = tag.validationResponse(node);\n                    if (!helper.merge(valres)) {\n                        return helper.fail();\n                    }\n                }\n                return helper.succeed(node);\n            }\n        } else if (\n            allowRefWalk &&\n            node.references &&\n            reader.peek() in node.references\n        ) {\n            const next = reader.read();\n            return this.getNextNode({\n                ...data,\n                node: node.references[next]\n            });\n        } else if (isTypedNode(node)) {\n            if (isCompoundNode(node)) {\n                if (this.nbtvld && tag) {\n                    const valres = tag.validationResponse(node, {\n                        compoundMerge: () =>\n                            this.mergeChildRef(data as ContextData<\n                                CompoundNode\n                            >),\n                        extraChildren: this.extraChildren\n                    });\n                    if (!helper.merge(valres)) {\n                        return helper.fail();\n                    }\n                }\n                if (tag && !(tag instanceof NBTTagCompound)) {\n                    return helper.fail();\n                }\n                return this.walkCompoundNode(data as ContextData<\n                    CompoundNode,\n                    NBTTagCompound\n                >);\n            } else if (isListNode(node)) {\n                if (this.nbtvld && tag) {\n                    const valres = tag.validationResponse(node);\n                    if (!helper.merge(valres)) {\n                        return helper.fail();\n                    }\n                }\n                if (tag && !(tag instanceof NBTTagList)) {\n                    return helper.fail();\n                }\n                return this.walkListNode(data as ContextData<\n                    ListNode,\n                    NBTTagList\n                >);\n            } else if (isRootNode(node)) {\n                return this.walkRootNode(data as ContextData<RootNode>);\n            } else {\n                if (tag) {\n                    const valres = tag.validationResponse(node);\n                    helper.merge(valres);\n                }\n                return helper.fail();\n            }\n        } else {\n            if (isRefNode(node)) {\n                return this.walkRefNode(data as ContextData<RefNode>);\n            } else if (isFunctionNode(node)) {\n                return this.walkFunctionNode(data as ContextData<FunctionNode>);\n            }\n        }\n        return helper.fail();\n    }\n\n    private mergeChildRef(data: ContextData<CompoundNode>): CompoundNode {\n        const { node, path: currentPath } = data;\n        if (!node.child_ref) {\n            return node;\n        }\n        const helper = new ReturnHelper();\n        const newChildren = JSON.parse(\n            JSON.stringify(node.children || {})\n        ) as Exclude<CompoundNode[\"children\"], undefined>;\n        for (const ref of node.child_ref) {\n            const [nextPath] = parseRefPath(ref, currentPath);\n            const refNode = this.evalRef(ref, currentPath, data);\n            if (!helper.merge(refNode)) {\n                continue;\n            } else if (isCompoundNode(refNode.data)) {\n                const evalNode = this.mergeChildRef({\n                    ...data,\n                    node: refNode.data,\n                    path: nextPath\n                });\n                if (evalNode.children) {\n                    for (const child of Object.keys(evalNode.children)) {\n                        newChildren[child] = evalNode.children[child];\n                    }\n                }\n            }\n        }\n        return {\n            children: newChildren,\n            description: node.description,\n            suggestions: node.suggestions,\n            type: \"compound\"\n        };\n    }\n\n    private walkCompoundNode(\n        data: ContextData<CompoundNode, NBTTagCompound>\n    ): ReturnedInfo<NBTNode> {\n        const { node, reader, path, tag } = data;\n        const helper = new ReturnHelper();\n        const next = reader.read();\n        if (node.children && next in node.children) {\n            /* \n             * It is safe to assume that next is in the tag\n             * val because the path is based off of the tag\n             */\n            return this.getNextNode({\n                ...data,\n                node: node.children[next],\n                tag: tag ? tag.getVal()[next] : undefined\n            });\n        } else if (node.child_ref) {\n            for (const c of node.child_ref) {\n                const [nextPath] = parseRefPath(c, path);\n                const cnode = this.evalRef(c, path, data);\n                if (\n                    helper.merge(cnode) &&\n                    isCompoundNode(cnode.data) &&\n                    cnode.data.children &&\n                    next in cnode.data.children\n                ) {\n                    return this.getNextNode({\n                        ...data,\n                        node: cnode.data.children[next],\n                        path: nextPath,\n                        tag: tag ? tag.getVal()[next] : undefined\n                    });\n                }\n            }\n        }\n        return helper.fail();\n    }\n\n    private walkFunctionNode(\n        data: ContextData<FunctionNode>\n    ): ReturnedInfo<NBTNode> {\n        const { node, reader, path } = data;\n        const helper = new ReturnHelper();\n        const ref = runNodeFunction(this.parsed, reader.getRead(), node);\n        const [nextPath] = parseRefPath(ref, path);\n        const newNode = this.evalRef(ref, path, data);\n        if (!helper.merge(newNode)) {\n            return helper.fail();\n        }\n        return this.getNextNode({\n            ...data,\n            node: newNode.data,\n            path: nextPath\n        });\n    }\n\n    private walkListNode(\n        data: ContextData<ListNode, NBTTagList>\n    ): ReturnedInfo<NBTNode> {\n        const { node, reader, tag } = data;\n        const next = reader.read();\n        if (!/\\d+/.test(next)) {\n            return new ReturnHelper().fail(\n                tag\n                    ? VALIDATION_ERRORS.badIndex.create(\n                          tag.getRange().start,\n                          tag.getRange().end\n                      )\n                    : undefined\n            );\n        }\n        const nextTag = tag\n            ? tag.getVal()[Number.parseInt(next, 10)]\n            : undefined;\n        return this.getNextNode({\n            ...data,\n            node: node.item,\n            tag: nextTag\n        });\n    }\n\n    private walkRefNode(data: ContextData<RefNode>): ReturnedInfo<NBTNode> {\n        const { node, path } = data;\n        const helper = new ReturnHelper();\n        const [nextPath] = parseRefPath(node.ref, path);\n        const nnode = this.evalRef(node.ref, path, data);\n        if (helper.merge(nnode)) {\n            const out = this.getNextNode({\n                ...data,\n                node: nnode.data,\n                path: nextPath\n            });\n            if (helper.merge(out)) {\n                return helper.succeed(out.data);\n            } else {\n                return helper.fail();\n            }\n        } else {\n            return helper.fail();\n        }\n    }\n\n    private walkRootNode(data: ContextData<RootNode>): ReturnedInfo<NBTNode> {\n        const { node, reader, path } = data;\n        const next = reader.read();\n        if (next in node.children) {\n            return this.getNextNode({ ...data, node: node.children[next] });\n        } else {\n            for (const key of Object.keys(node.children)) {\n                if (key.startsWith(\"$\")) {\n                    const ref = key.substring(1);\n                    const [nextPath] = parseRefPath(ref, path);\n                    const list = this.docfs.get<ValueList>(nextPath);\n                    if (\n                        list.find(\n                            v => (isString(v) ? v === next : v.value === next)\n                        )\n                    ) {\n                        return this.getNextNode({\n                            ...data,\n                            node: node.children[key]\n                        });\n                    }\n                }\n            }\n        }\n        return new ReturnHelper().fail();\n    }\n}\n","import { isArray } from \"util\";\nimport { StringReader } from \"../../../brigadier/string-reader\";\nimport { isSuccessful, ReturnHelper } from \"../../../misc-functions\";\nimport { ContextPath, resolvePaths } from \"../../../misc-functions/context\";\nimport { Parser, ParserInfo, ReturnedInfo } from \"../../../types\";\nimport { NBTWalker } from \"./doc-walker\";\nimport { NBTTagCompound } from \"./tag/compound-tag\";\n\ntype CtxPathFunc = (args: string[]) => NBTContextData;\n\nexport interface NBTContextData {\n    id?: string | string[];\n    type: \"entity\" | \"item\" | \"block\";\n}\n\nconst paths: Array<ContextPath<CtxPathFunc>> = [\n    {\n        data: () => ({\n            type: \"entity\"\n        }),\n        path: [\"data\", \"merge\", \"entity\", \"target\", \"nbt\"]\n    },\n    {\n        data: () => ({\n            type: \"block\"\n        }),\n        path: [\"data\", \"merge\", \"block\", \"pos\", \"nbt\"]\n    },\n    {\n        data: args => ({\n            id: args[1],\n            type: \"entity\"\n        }),\n        path: [\"summon\", \"entity\", \"pos\", \"nbt\"]\n    }\n];\n\nexport function parseNBT(\n    reader: StringReader,\n    info: ParserInfo,\n    data?: NBTContextData\n): ReturnedInfo<undefined> {\n    const helper = new ReturnHelper();\n    const tag = new NBTTagCompound({});\n    const docFS = info.data.globalData.nbt_docs;\n    const reply = tag.parse(reader);\n\n    if (helper.merge(reply)) {\n        return helper.succeed();\n    } else {\n        if (!!data) {\n            const walker = new NBTWalker(\n                reply.data.parsed || new NBTTagCompound({}),\n                docFS,\n                data.type === \"item\"\n            );\n            if (isArray(data.id)) {\n                for (const k of data.id) {\n                    const node = walker.getFinalNode([\n                        data.type,\n                        k,\n                        ...(reply.data.path || [])\n                    ]);\n                    if (isSuccessful(node)) {\n                        helper.mergeChain(node);\n                    } else {\n                        helper.mergeChain(node, false);\n                    }\n                }\n                return helper.fail();\n            } else {\n                const node = walker.getFinalNode([\n                    data.type,\n                    data.id || \"none\",\n                    ...(reply.data.path || [])\n                ]);\n                return helper.mergeChain(node).fail();\n            }\n        } else {\n            return helper.fail();\n        }\n    }\n}\n\nexport const parser: Parser = {\n    parse: (reader, prop) => {\n        const helper = new ReturnHelper(prop);\n        const ctxdatafn = resolvePaths(paths, prop.path || []);\n        const data = !ctxdatafn ? undefined : ctxdatafn([]);\n        if (helper.merge(parseNBT(reader, prop, data))) {\n            return helper.succeed();\n        } else {\n            return helper.fail();\n        }\n    }\n};\n","import {\n    CompletionItemKind,\n    DiagnosticSeverity\n} from \"vscode-languageserver/lib/main\";\n\nimport { CommandErrorBuilder } from \"../../brigadier/errors\";\nimport { StringReader } from \"../../brigadier/string-reader\";\nimport {\n    BlocksPropertyInfo,\n    NamespacedName,\n    SingleBlockPropertyInfo\n} from \"../../data/types\";\nimport {\n    namespaceSuggestionString,\n    ReturnHelper,\n    stringifyNamespace\n} from \"../../misc-functions\";\nimport {\n    buildTagActions,\n    parseNamespaceOrTag\n} from \"../../misc-functions/parsing/nmsp-tag\";\nimport { Parser, ParserInfo, ReturnedInfo, Suggestion } from \"../../types\";\nimport { parseNBT } from \"./nbt/nbt\";\n\nexport const predicateParser: Parser = {\n    parse: (reader, info) => parseBlockArgument(reader, info, true)\n};\n\nexport const stateParser: Parser = {\n    parse: (reader, info) => parseBlockArgument(reader, info, false)\n};\n\ninterface PropertyExceptions {\n    duplicate: CommandErrorBuilder;\n    invalid: CommandErrorBuilder;\n    novalue: CommandErrorBuilder;\n    unknown: CommandErrorBuilder;\n}\n\nconst exceptions = {\n    block_properties: {\n        duplicate: new CommandErrorBuilder(\n            \"argument.block.property.duplicate\",\n            \"Property '%s' can only be set once for block %s\"\n        ),\n        invalid: new CommandErrorBuilder(\n            \"argument.block.property.invalid\",\n            \"Block %s does not accept '%s' for %s property\"\n        ),\n        novalue: new CommandErrorBuilder(\n            \"argument.block.property.novalue\",\n            \"Expected value for property '%s' on block %s\"\n        ),\n        unknown: new CommandErrorBuilder(\n            \"argument.block.property.unknown\",\n            \"Block %s does not have property '%s'\"\n        )\n    },\n    invalid_block: new CommandErrorBuilder(\n        \"argument.block.id.invalid\",\n        \"Unknown block type '%s'\"\n    ),\n    no_tags: new CommandErrorBuilder(\n        \"argument.block.tag.disallowed\",\n        \"Tags aren't allowed here, only actual blocks\"\n    ),\n    tag_properties: {\n        duplicate: new CommandErrorBuilder(\n            \"argument.block_tag.property.duplicate\",\n            \"Property '%s' can only be set once for block tag %s\"\n        ),\n        invalid: new CommandErrorBuilder(\n            \"argument.block_tag.property.invalid\",\n            \"Block tag %s does not accept '%s' for %s property\"\n        ),\n        novalue: new CommandErrorBuilder(\n            \"argument.block_tag.property.novalue\",\n            \"Expected value for property '%s' on block tag %s\"\n        ),\n        unknown: new CommandErrorBuilder(\n            \"argument.block_tag.property.unknown\",\n            \"Block tag %s does not have property '%s'\"\n        )\n    },\n    unknown_properties: {\n        duplicate: new CommandErrorBuilder(\n            \"argument.unknown_block_tag.property.duplicate\",\n            \"Property '%s' can only be set once for unknown block tag %s\"\n        ),\n        invalid: new CommandErrorBuilder(\n            \"argument.unknown_block_tag.property.invalid\",\n            \"Unknown block tag %s might not accept '%s' for %s property\",\n            DiagnosticSeverity.Warning\n        ),\n        novalue: new CommandErrorBuilder(\n            \"argument.unknown_block_tag.property.novalue\",\n            \"Expected value for property '%s' on unknown block tag %s\"\n        ),\n        unknown: new CommandErrorBuilder(\n            \"argument.unknown_block_tag.property.unknown\",\n            \"Unknown block tag %s might not have property '%s'\",\n            DiagnosticSeverity.Warning\n        )\n    },\n\n    unclosed_props: new CommandErrorBuilder(\n        \"argument.block.property.unclosed\",\n        \"Expected closing ] for block state properties\"\n    ),\n\n    unknown_tag: new CommandErrorBuilder(\n        \"arguments.block.tag.unknown\", // Argument_s_ [sic]\n        \"Unknown block tag '%s'\"\n    )\n};\n\n// tslint:disable:cyclomatic-complexity\nexport function parseBlockArgument(\n    reader: StringReader,\n    info: ParserInfo,\n    tags: boolean\n): ReturnedInfo<undefined> {\n    const helper = new ReturnHelper(info);\n    const start = reader.cursor;\n    const tagHandling = tags ? \"block_tags\" : exceptions.no_tags;\n    const parsed = parseNamespaceOrTag(reader, info, tagHandling);\n    let stringifiedName: string | undefined;\n    if (helper.merge(parsed)) {\n        const parsedResult = parsed.data;\n        if (parsedResult.resolved && parsedResult.values) {\n            stringifiedName = `#${stringifyNamespace(parsedResult.parsed)}`;\n            helper.merge(\n                buildTagActions(\n                    parsedResult.values,\n                    start + 1,\n                    reader.cursor,\n                    \"block_tags\",\n                    info.data.localData\n                )\n            );\n            const props = constructProperties(\n                parsedResult.resolved,\n                info.data.globalData.blocks\n            );\n            const propsResult = parseProperties(\n                reader,\n                props || {},\n                exceptions.tag_properties,\n                stringifiedName\n            );\n            if (!helper.merge(propsResult)) {\n                return helper.fail();\n            }\n            if (reader.peek() === \"{\") {\n                const nbt = parseNBT(reader, info, {\n                    id: (parsedResult.resolved || []).map(stringifyNamespace),\n                    type: \"block\"\n                });\n                if (!helper.merge(nbt)) {\n                    return helper.fail();\n                }\n            } else {\n                helper.addSuggestion(reader.cursor, \"{\");\n            }\n        } else {\n            stringifiedName = stringifyNamespace(parsed.data.parsed);\n            if (info.suggesting && !reader.canRead()) {\n                helper.addSuggestions(\n                    ...namespaceSuggestionString(\n                        Object.keys(info.data.globalData.blocks),\n                        parsed.data.parsed,\n                        start\n                    )\n                );\n            }\n            const props = info.data.globalData.blocks[stringifiedName];\n            if (!props) {\n                helper.addErrors(\n                    exceptions.invalid_block.create(start, reader.cursor)\n                );\n            }\n            const result = parseProperties(\n                reader,\n                props || {},\n                exceptions.block_properties,\n                stringifiedName\n            );\n            if (!helper.merge(result)) {\n                return helper.fail();\n            }\n            if (reader.peek() === \"{\") {\n                const nbt = parseNBT(reader, info, {\n                    id: props ? stringifiedName : \"none\",\n                    type: \"block\"\n                });\n                if (!helper.merge(nbt)) {\n                    return helper.fail();\n                }\n            } else {\n                helper.addSuggestion(reader.cursor, \"{\");\n            }\n        }\n    } else {\n        if (parsed.data) {\n            helper.addErrors(\n                exceptions.unknown_tag.create(\n                    start,\n                    reader.cursor,\n                    stringifyNamespace(parsed.data)\n                )\n            );\n            stringifiedName = `#${stringifyNamespace(parsed.data)}`;\n            const propsResult = parseProperties(\n                reader,\n                {},\n                exceptions.unknown_properties,\n                stringifiedName\n            );\n            if (!helper.merge(propsResult)) {\n                return helper.fail();\n            }\n            if (reader.peek() === \"{\") {\n                const nbt = parseNBT(reader, info, {\n                    id: \"none\",\n                    type: \"block\"\n                });\n                if (!helper.merge(nbt)) {\n                    return helper.fail();\n                }\n            } else {\n                helper.addSuggestion(reader.cursor, \"{\");\n            }\n        } else {\n            // Parsing of the namespace failed\n            return helper.fail();\n        }\n    }\n    return helper.succeed();\n}\n\n// Ugly call signature. Need to see how upstream handles tag properties.\n// At the moment, it is very broken\nfunction parseProperties(\n    reader: StringReader,\n    options: SingleBlockPropertyInfo,\n    errors: PropertyExceptions,\n    name: string\n): ReturnedInfo<Map<string, string>> {\n    const helper = new ReturnHelper();\n    const result = new Map<string, string>();\n    if (reader.peek() === \"[\") {\n        const start = reader.cursor;\n        reader.skip();\n        const props = Object.keys(options);\n        reader.skipWhitespace();\n        while (reader.canRead() && reader.peek() !== \"]\") {\n            reader.skipWhitespace();\n            const propStart = reader.cursor;\n            const propParse = reader.readOption(\n                props,\n                false,\n                CompletionItemKind.Property\n            );\n            const propKey = propParse.data;\n            const propSuccessful = helper.merge(propParse);\n            if (propKey === false) {\n                // Strange order allows better type checker reasoning\n                // Parsing failed\n                return helper.fail();\n            }\n            if (!propSuccessful) {\n                helper.addErrors(\n                    errors.unknown.create(\n                        propStart,\n                        reader.cursor,\n                        name,\n                        propKey\n                    )\n                );\n            }\n            if (result.has(propKey)) {\n                helper.addErrors(\n                    errors.duplicate.create(\n                        propStart,\n                        reader.cursor,\n                        propKey,\n                        name\n                    )\n                );\n            }\n            reader.skipWhitespace();\n            if (!reader.canRead() || reader.peek() !== \"=\") {\n                return helper.fail(\n                    errors.novalue.create(\n                        propStart,\n                        reader.cursor,\n                        propKey,\n                        name\n                    )\n                );\n            }\n            reader.skip();\n            reader.skipWhitespace();\n            const valueStart = reader.cursor;\n            const valueParse = reader.readOption(\n                options[propKey] || [],\n                false,\n                CompletionItemKind.EnumMember\n            );\n            const valueSuccessful = helper.merge(valueParse);\n            const value = valueParse.data;\n            if (value === false) {\n                return helper.fail();\n            }\n            const error = errors.invalid.create(\n                valueStart,\n                reader.cursor,\n                name,\n                value,\n                propKey\n            );\n            const adderrorIf = (b: boolean) =>\n                b && propSuccessful && !valueSuccessful\n                    ? helper.addErrors(error)\n                    : undefined;\n            adderrorIf(value.length > 0);\n            result.set(propKey, value);\n            reader.skipWhitespace();\n            if (reader.canRead()) {\n                if (reader.peek() === \",\") {\n                    adderrorIf(value.length === 0);\n                    reader.skip();\n                    continue;\n                }\n                if (reader.peek() === \"]\") {\n                    adderrorIf(value.length === 0);\n                    break;\n                }\n            }\n            return helper.fail(\n                exceptions.unclosed_props.create(start, reader.cursor)\n            );\n        }\n        if (!reader.canRead()) {\n            helper.addSuggestions(\n                ...props.map<Suggestion>(prop => ({\n                    kind: CompletionItemKind.Property,\n                    start: reader.cursor,\n                    text: prop\n                }))\n            );\n            return helper.fail(\n                exceptions.unclosed_props.create(start, reader.cursor)\n            );\n        }\n        reader.expect(\"]\"); // Sanity check\n    }\n    return helper.succeed(result);\n}\n\nfunction constructProperties(\n    options: NamespacedName[],\n    blocks: BlocksPropertyInfo\n): SingleBlockPropertyInfo {\n    const result: SingleBlockPropertyInfo = {};\n    for (const blockName of options) {\n        const stringified = stringifyNamespace(blockName);\n        const block = blocks[stringified];\n        if (block) {\n            for (const prop in block) {\n                if (block.hasOwnProperty(prop)) {\n                    result[prop] = Array.from(\n                        new Set((result[prop] || []).concat(block[prop]))\n                    );\n                }\n            }\n        }\n    }\n    return result;\n}\n","import { CommandErrorBuilder } from \"../../brigadier/errors\";\nimport { StringReader } from \"../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../misc-functions\";\nimport { Parser, ParserInfo, ReturnedInfo } from \"../../types\";\n\nconst MIXED = new CommandErrorBuilder(\n    \"argument.pos.mixed\",\n    \"Cannot mix world & local coordinates (everything must either use ^ or not)\"\n);\n\nconst INCOMPLETE = new CommandErrorBuilder(\n    \"argument.pos.incomplete\",\n    \"Incomplete position argument. Only %s coords are present, when %s should be\"\n);\n\nconst NO_LOCAL = new CommandErrorBuilder(\n    \"argument.pos.nolocal\",\n    \"Local coords are not allowed\"\n);\n\nconst LOCAL = \"^\";\nconst RELATIVE = \"~\";\n\nexport interface CoordRules {\n    count: 2 | 3;\n    float: boolean;\n    local: boolean;\n}\n\nconst fail = (\n    reader: StringReader,\n    helper: ReturnHelper,\n    count: number,\n    hasWorld: boolean,\n    hasLocal: boolean,\n    start: number,\n    i: number\n) => {\n    if (!hasWorld) {\n        helper.addSuggestions({\n            start: reader.cursor,\n            text: LOCAL\n        });\n    }\n    if (!hasLocal) {\n        helper.addSuggestions({\n            start: reader.cursor,\n            text: RELATIVE\n        });\n    }\n    return helper.fail(\n        INCOMPLETE.create(\n            start,\n            reader.cursor,\n            (i + 1).toString(),\n            count.toString()\n        )\n    );\n};\n\nexport class CoordParser implements Parser {\n    private readonly rules: CoordRules;\n\n    public constructor(rules: CoordRules) {\n        this.rules = rules;\n    }\n\n    public parse(\n        reader: StringReader,\n        info: ParserInfo\n    ): ReturnedInfo<undefined> {\n        const helper = new ReturnHelper(info);\n        let hasLocal = false;\n        let hasWorld = false;\n        const start = reader.cursor;\n        for (let i = 0; i < this.rules.count; i++) {\n            if (!reader.canRead()) {\n                return fail(\n                    reader,\n                    helper,\n                    this.rules.count,\n                    hasWorld,\n                    hasLocal,\n                    start,\n                    0\n                );\n            }\n\n            const cstart = reader.cursor;\n            switch (reader.peek()) {\n                case RELATIVE:\n                    hasWorld = true;\n                    reader.skip();\n                    if (!helper.merge(this.parseNumber(reader))) {\n                        return helper.fail();\n                    }\n                    if (hasLocal) {\n                        helper.addErrors(MIXED.create(cstart, reader.cursor));\n                    }\n                    break;\n                case LOCAL:\n                    if (!this.rules.local) {\n                        helper.addErrors(\n                            NO_LOCAL.create(reader.cursor, reader.cursor + 1)\n                        );\n                    }\n                    hasLocal = true;\n                    reader.skip();\n                    if (!helper.merge(this.parseNumber(reader))) {\n                        return helper.fail();\n                    }\n                    if (hasWorld) {\n                        helper.addErrors(MIXED.create(cstart, reader.cursor));\n                    }\n                    break;\n                default:\n                    hasWorld = true;\n                    if (!helper.merge(this.parseNumber(reader, false))) {\n                        return helper.fail();\n                    }\n                    if (hasLocal) {\n                        helper.addErrors(MIXED.create(cstart, reader.cursor));\n                    }\n            }\n\n            if (\n                i < this.rules.count - 1 &&\n                (!reader.canRead() || !helper.merge(reader.expect(\" \")))\n            ) {\n                return fail(\n                    reader,\n                    helper,\n                    this.rules.count,\n                    hasWorld,\n                    hasLocal,\n                    start,\n                    i\n                );\n            }\n        }\n        return helper.succeed();\n    }\n\n    private parseNumber(\n        reader: StringReader,\n        allowBlank: boolean = true\n    ): ReturnedInfo<number> {\n        if ((!reader.canRead() || reader.peek().match(/\\s/)) && allowBlank) {\n            return new ReturnHelper().succeed(0);\n        }\n        return this.rules.float ? reader.readFloat() : reader.readInt();\n    }\n}\n\nexport const rotation = new CoordParser({\n    count: 2,\n    float: true,\n    local: false\n});\n\nexport const vec2 = new CoordParser({\n    count: 2,\n    float: true,\n    local: true\n});\n\nexport const vec3 = new CoordParser({\n    count: 3,\n    float: true,\n    local: true\n});\n\nexport const blockPos = new CoordParser({\n    count: 3,\n    float: false,\n    local: true\n});\n","import { CommandErrorBuilder } from \"../../brigadier/errors\";\nimport { StringReader } from \"../../brigadier/string-reader\";\nimport {\n    buildTagActions,\n    namespaceSuggestionString,\n    parseNamespaceOrTag,\n    ReturnHelper,\n    stringifyNamespace\n} from \"../../misc-functions\";\nimport { Parser, ParserInfo, ReturnedInfo } from \"../../types\";\nimport { parseNBT } from \"./nbt/nbt\";\n\nconst NOTAG = new CommandErrorBuilder(\n    \"argument.item.tag.disallowed\",\n    \"Tags aren't allowed here, only actual items\"\n);\n\nconst UNKNOWNTAG = new CommandErrorBuilder(\n    \"arguments.item.tag.unknown\",\n    \"Unknown item tag '%s'\"\n);\n\nconst UNKNOWNITEM = new CommandErrorBuilder(\n    \"argument.item.id.invalid\",\n    \"Unknown item '%s'\"\n);\n\nexport class ItemParser implements Parser {\n    private readonly useTags: boolean;\n\n    public constructor(useTags: boolean) {\n        this.useTags = useTags;\n    }\n\n    public parse(\n        reader: StringReader,\n        properties: ParserInfo\n    ): ReturnedInfo<undefined> {\n        const helper = new ReturnHelper(properties);\n        const start = reader.cursor;\n        const parsed = parseNamespaceOrTag(\n            reader,\n            properties,\n            this.useTags ? \"item_tags\" : NOTAG\n        );\n        if (helper.merge(parsed)) {\n            const items: string[] = [];\n            if (parsed.data.resolved && parsed.data.values) {\n                helper.merge(\n                    buildTagActions(\n                        parsed.data.values,\n                        start + 1,\n                        reader.cursor,\n                        \"item_tags\",\n                        properties.data.localData\n                    )\n                );\n                parsed.data.values.forEach(v => {\n                    items.push(...(v.data || { values: [] }).values);\n                });\n            } else {\n                if (properties.suggesting && !reader.canRead()) {\n                    helper.addSuggestions(\n                        ...namespaceSuggestionString(\n                            properties.data.globalData.items,\n                            parsed.data.parsed,\n                            start\n                        )\n                    );\n                }\n                const name = stringifyNamespace(parsed.data.parsed);\n                if (properties.data.globalData.items.indexOf(name) < 0) {\n                    helper.addErrors(\n                        UNKNOWNITEM.create(start, reader.cursor, name)\n                    );\n                }\n                items.push(name);\n            }\n            if (reader.peek() === \"{\") {\n                const nbt = parseNBT(reader, properties, {\n                    id: items,\n                    type: \"item\"\n                });\n                helper.merge(nbt);\n            } else {\n                helper.addSuggestion(reader.cursor, \"{\");\n            }\n        } else {\n            if (parsed.data) {\n                helper.addErrors(\n                    UNKNOWNTAG.create(\n                        start,\n                        reader.cursor,\n                        stringifyNamespace(parsed.data)\n                    )\n                );\n                if (reader.peek() === \"{\") {\n                    const nbt = parseNBT(reader, properties, {\n                        id: \"none\",\n                        type: \"item\"\n                    });\n                    helper.merge(nbt);\n                } else {\n                    helper.addSuggestion(reader.cursor, \"{\");\n                }\n            } else {\n                return helper.fail();\n            }\n        }\n        return helper.succeed();\n    }\n}\n\nexport const stack = new ItemParser(false);\nexport const predicate = new ItemParser(true);\n","export const COLORS = [\n    \"black\",\n    \"dark_blue\",\n    \"dark_green\",\n    \"dark_aqua\",\n    \"dark_red\",\n    \"dark_purple\",\n    \"gold\",\n    \"gray\",\n    \"dark_gray\",\n    \"blue\",\n    \"green\",\n    \"aqua\",\n    \"red\",\n    \"light_purple\",\n    \"yellow\",\n    \"white\",\n    \"reset\"\n];\n","export const itemSlots = slotsBuilder();\n\nfunction slotsBuilder(): string[] {\n    const slots = [];\n\n    slots.push(\"armor.chest\", \"armor.feet\", \"armor.head\", \"armor.legs\");\n\n    for (let i = 0; i < 54; i++) {\n        slots.push(`container.${i}`);\n    }\n\n    for (let i = 0; i < 27; i++) {\n        slots.push(`enderchest.${i}`);\n    }\n\n    for (let i = 0; i < 25; i++) {\n        slots.push(`horse.${i}`);\n    }\n    slots.push(\"horse.armor\", \"horse.chest\", \"horse.saddle\");\n\n    for (let i = 0; i < 9; i++) {\n        slots.push(`hotbar.${i}`);\n    }\n\n    for (let i = 0; i < 27; i++) {\n        slots.push(`inventory.${i}`);\n    }\n\n    for (let i = 0; i < 8; i++) {\n        slots.push(`villager.${i}`);\n    }\n\n    slots.push(\"weapon\", \"weapon.mainhand\", \"weapon.offhand\");\n    return slots;\n}\n","import { COLORS } from \"../../colors\";\n\nexport const scoreboardSlots = createSlots();\n\nfunction createSlots(): string[] {\n    const slots = [];\n\n    slots.push(\"list\", \"sidebar\", \"belowName\");\n\n    for (const s of COLORS) {\n        slots.push(`sidebar.team.${s}`);\n    }\n    return slots;\n}\n","import { COLORS } from \"../../colors\";\n\nexport const anchors = [\"feet\", \"eyes\"];\nexport const operations = [\"+=\", \"-=\", \"*=\", \"/=\", \"%=\", \"=\", \">\", \"<\", \"><\"];\nexport const colors = COLORS;\n\nexport const effects = [\n    \"minecraft:speed\",\n    \"minecraft:slowness\",\n    \"minecraft:haste\",\n    \"minecraft:mining_fatigue\",\n    \"minecraft:strength\",\n    \"minecraft:instant_health\",\n    \"minecraft:instant_damage\",\n    \"minecraft:jump_boost\",\n    \"minecraft:nausea\",\n    \"minecraft:regeneration\",\n    \"minecraft:resistance\",\n    \"minecraft:fire_resistance\",\n    \"minecraft:water_breathing\",\n    \"minecraft:invisibility\",\n    \"minecraft:blindness\",\n    \"minecraft:night_vision\",\n    \"minecraft:hunger\",\n    \"minecraft:weakness\",\n    \"minecraft:poison\",\n    \"minecraft:wither\",\n    \"minecraft:health_boost\",\n    \"minecraft:absorption\",\n    \"minecraft:saturation\",\n    \"minecraft:glowing\",\n    \"minecraft:levitation\",\n    \"minecraft:luck\",\n    \"minecraft:unluck\",\n    \"minecraft:slow_falling\",\n    \"minecraft:conduit_power\",\n    \"minecraft:dolphins_grace\"\n];\n\nexport const enchantments = [\n    \"minecraft:protection\",\n    \"minecraft:fire_protection\",\n    \"minecraft:feather_falling\",\n    \"minecraft:blast_protection\",\n    \"minecraft:projectile_protection\",\n    \"minecraft:respiration\",\n    \"minecraft:aqua_affinity\",\n    \"minecraft:thorns\",\n    \"minecraft:depth_strider\",\n    \"minecraft:frost_walker\",\n    \"minecraft:binding_curse\",\n    \"minecraft:sharpness\",\n    \"minecraft:smite\",\n    \"minecraft:bane_of_arthropods\",\n    \"minecraft:knockback\",\n    \"minecraft:fire_aspect\",\n    \"minecraft:looting\",\n    \"minecraft:sweeping\",\n    \"minecraft:efficiency\",\n    \"minecraft:silk_touch\",\n    \"minecraft:unbreaking\",\n    \"minecraft:fortune\",\n    \"minecraft:power\",\n    \"minecraft:punch\",\n    \"minecraft:flame\",\n    \"minecraft:infinity\",\n    \"minecraft:luck_of_the_sea\",\n    \"minecraft:lure\",\n    \"minecraft:loyalty\",\n    \"minecraft:impaling\",\n    \"minecraft:riptide\",\n    \"minecraft:channeling\",\n    \"minecraft:mending\",\n    \"minecraft:vanishing_curse\"\n];\n\nexport const particles = [\n    \"minecraft:ambient_entity_effect\",\n    \"minecraft:angry_villager\",\n    \"minecraft:barrier\",\n    \"minecraft:block\",\n    \"minecraft:bubble\",\n    \"minecraft:cloud\",\n    \"minecraft:crit\",\n    \"minecraft:damage_indicator\",\n    \"minecraft:dragon_breath\",\n    \"minecraft:dripping_lava\",\n    \"minecraft:dripping_water\",\n    \"minecraft:dust\",\n    \"minecraft:effect\",\n    \"minecraft:elder_guardian\",\n    \"minecraft:enchanted_hit\",\n    \"minecraft:enchant\",\n    \"minecraft:end_rod\",\n    \"minecraft:entity_effect\",\n    \"minecraft:explosion_emitter\",\n    \"minecraft:explosion\",\n    \"minecraft:falling_dust\",\n    \"minecraft:firework\",\n    \"minecraft:fishing\",\n    \"minecraft:flame\",\n    \"minecraft:happy_villager\",\n    \"minecraft:heart\",\n    \"minecraft:instant_effect\",\n    \"minecraft:item\",\n    \"minecraft:item_slime\",\n    \"minecraft:item_snowball\",\n    \"minecraft:large_smoke\",\n    \"minecraft:lava\",\n    \"minecraft:mycelium\",\n    \"minecraft:note\",\n    \"minecraft:poof\",\n    \"minecraft:portal\",\n    \"minecraft:rain\",\n    \"minecraft:smoke\",\n    \"minecraft:spit\",\n    \"minecraft:squid_ink\",\n    \"minecraft:sweep_attack\",\n    \"minecraft:totem_of_undying\",\n    \"minecraft:underwater\",\n    \"minecraft:splash\",\n    \"minecraft:witch\",\n    \"minecraft:bubble_pop\",\n    \"minecraft:current_down\",\n    \"minecraft:bubble_column_up\",\n    \"minecraft:nautilus\"\n];\n\nexport const entities = [\n    \"area_effect_cloud\",\n    \"armor_stand\",\n    \"arrow\",\n    \"bat\",\n    \"blaze\",\n    \"boat\",\n    \"cave_spider\",\n    \"chicken\",\n    \"cod\",\n    \"cow\",\n    \"creeper\",\n    \"donkey\",\n    \"dolphin\",\n    \"dragon_fireball\",\n    \"drowned\",\n    \"elder_guardian\",\n    \"end_crystal\",\n    \"ender_dragon\",\n    \"enderman\",\n    \"endermite\",\n    \"evoker_fangs\",\n    \"evoker\",\n    \"experience_orb\",\n    \"eye_of_ender\",\n    \"falling_block\",\n    \"firework_rocket\",\n    \"ghast\",\n    \"giant\",\n    \"guardian\",\n    \"horse\",\n    \"husk\",\n    \"illusioner\",\n    \"item\",\n    \"item_frame\",\n    \"fireball\",\n    \"leash_knot\",\n    \"llama\",\n    \"llama_spit\",\n    \"magma_cube\",\n    \"minecart\",\n    \"chest_minecart\",\n    \"command_block_minecart\",\n    \"furnace_minecart\",\n    \"hopper_minecart\",\n    \"spawner_minecart\",\n    \"tnt_minecart\",\n    \"mule\",\n    \"mooshroom\",\n    \"ocelot\",\n    \"painting\",\n    \"parrot\",\n    \"pig\",\n    \"pufferfish\",\n    \"zombie_pigman\",\n    \"polar_bear\",\n    \"tnt\",\n    \"rabbit\",\n    \"salmon\",\n    \"sheep\",\n    \"shulker\",\n    \"shulker_bullet\",\n    \"silverfish\",\n    \"skeleton\",\n    \"skeleton_horse\",\n    \"slime\",\n    \"small_fireball\",\n    \"snow_golem\",\n    \"snowball\",\n    \"spectral_arrow\",\n    \"spider\",\n    \"squid\",\n    \"stray\",\n    \"tropical_fish\",\n    \"turtle\",\n    \"egg\",\n    \"ender_pearl\",\n    \"experience_bottle\",\n    \"potion\",\n    \"vex\",\n    \"villager\",\n    \"iron_golem\",\n    \"vindicator\",\n    \"witch\",\n    \"wither\",\n    \"wither_skeleton\",\n    \"wither_skull\",\n    \"wolf\",\n    \"zombie\",\n    \"zombie_horse\",\n    \"zombie_villager\",\n    \"phantom\",\n    \"lightning_bolt\",\n    \"trident\"\n];\n\nexport const dimensions = [\"overworld\", \"the_nether\", \"the_end\"];\n","import { CompletionItemKind } from \"vscode-languageserver\";\nimport { CommandErrorBuilder } from \"../../brigadier/errors\";\nimport { StringReader } from \"../../brigadier/string-reader\";\nimport { COLORS } from \"../../colors\";\nimport { itemSlots } from \"../../data/lists/item-slot\";\nimport { scoreboardSlots } from \"../../data/lists/scoreboard-slot\";\nimport { anchors, operations } from \"../../data/lists/statics\";\nimport { ReturnHelper } from \"../../misc-functions\";\nimport { Parser, ParserInfo, ReturnedInfo } from \"../../types\";\n\nexport class ListParser implements Parser {\n    private readonly error: CommandErrorBuilder;\n    private readonly options: string[];\n\n    public constructor(options: string[], err: CommandErrorBuilder) {\n        this.options = options;\n        this.error = err;\n    }\n\n    public parse(\n        reader: StringReader,\n        info: ParserInfo\n    ): ReturnedInfo<undefined> {\n        const start = reader.cursor;\n        const helper = new ReturnHelper(info);\n        const optResult = reader.readOption(\n            this.options,\n            false,\n            CompletionItemKind.EnumMember,\n            \"no\"\n        );\n        if (helper.merge(optResult)) {\n            return helper.succeed();\n        } else {\n            return helper.fail(\n                this.error.create(\n                    start,\n                    reader.cursor,\n                    optResult.data.toString()\n                )\n            );\n        }\n    }\n}\n\nconst colorError = new CommandErrorBuilder(\n    \"argument.color.invalid\",\n    \"Unknown color '%s'\"\n);\nexport const colorParser = new ListParser(COLORS, colorError);\n\nconst entityAnchorError = new CommandErrorBuilder(\n    \"argument.anchor.invalid\",\n    \"Invalid entity anchor position %s\"\n);\nexport const entityAnchorParser = new ListParser(anchors, entityAnchorError);\n\nconst slotError = new CommandErrorBuilder(\"slot.unknown\", \"Unknown slot '%s'\");\nexport const itemSlotParser = new ListParser(itemSlots, slotError);\n\nconst operationError = new CommandErrorBuilder(\n    \"arguments.operation.invalid\",\n    \"Invalid operation\"\n);\nexport const operationParser = new ListParser(operations, operationError);\n\nconst scoreboardSlotError = new CommandErrorBuilder(\n    \"argument.scoreboardDisplaySlot.invalid\",\n    \"Unknown display slot '%s'\"\n);\nexport const scoreBoardSlotParser = new ListParser(\n    scoreboardSlots,\n    scoreboardSlotError\n);\n","import { StringReader } from \"../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../misc-functions\";\nimport { Parser } from \"../../types\";\n\nexport const messageParser: Parser = {\n    parse: (reader: StringReader) => {\n        reader.cursor = reader.getTotalLength();\n        return new ReturnHelper().succeed();\n    }\n};\n","import { CommandErrorBuilder } from \"../../brigadier/errors\";\nimport { StringReader } from \"../../brigadier/string-reader\";\nimport {\n    dimensions,\n    effects,\n    enchantments,\n    entities,\n    particles\n} from \"../../data/lists/statics\";\nimport {\n    convertToNamespace,\n    parseNamespaceOption,\n    ReturnHelper,\n    stringifyNamespace\n} from \"../../misc-functions\";\nimport { ContextChange, Parser, ParserInfo, ReturnedInfo } from \"../../types\";\n\nexport class NamespaceListParser implements Parser {\n    private readonly error: CommandErrorBuilder;\n    private readonly options: string[];\n    public constructor(options: string[], errorBuilder: CommandErrorBuilder) {\n        this.options = options;\n        this.error = errorBuilder;\n    }\n    public parse(\n        reader: StringReader,\n        info: ParserInfo\n    ): ReturnedInfo<ContextChange> {\n        const helper = new ReturnHelper(info);\n        const start = reader.cursor;\n        const result = parseNamespaceOption(\n            reader,\n            this.options.map((v, _) => convertToNamespace(v))\n        );\n        if (helper.merge(result)) {\n            return helper.succeed();\n        } else {\n            if (result.data) {\n                return helper\n                    .addErrors(\n                        this.error.create(\n                            start,\n                            reader.cursor,\n                            stringifyNamespace(result.data)\n                        )\n                    )\n                    .succeed();\n            } else {\n                return helper.fail();\n            }\n        }\n    }\n}\n\nconst summonError = new CommandErrorBuilder(\n    \"entity.notFound\",\n    \"Unknown entity: %s\"\n);\nexport const summonParser = new NamespaceListParser(entities, summonError);\n\nconst enchantmentError = new CommandErrorBuilder(\n    \"enchantment.unknown\",\n    \"Unknown enchantment: %s\"\n);\nexport const enchantmentParser = new NamespaceListParser(\n    enchantments,\n    enchantmentError\n);\n\nconst mobEffectError = new CommandErrorBuilder(\n    \"effect.effectNotFound\",\n    \"Unknown effect: %s\"\n);\nexport const mobEffectParser = new NamespaceListParser(effects, mobEffectError);\n\nconst particleError = new CommandErrorBuilder(\n    \"particle.notFound\",\n    \"Unknown particle: %s\"\n);\nexport const particleParser = new NamespaceListParser(particles, particleError);\n\nconst dimensionError = new CommandErrorBuilder(\n    \"argument.dimension.invalid\",\n    \"Unknown dimension: '%s'\"\n);\n\nexport const dimensionParser = new NamespaceListParser(\n    dimensions,\n    dimensionError\n);\n","import { CompletionItemKind } from \"vscode-languageserver\";\nimport { CommandErrorBuilder } from \"../../brigadier/errors\";\nimport { Resources } from \"../../data/types\";\nimport {\n    buildPath,\n    buildTagActions,\n    ContextPath,\n    convertToNamespace,\n    getResourcesofType,\n    parseNamespace,\n    parseNamespaceOption,\n    parseNamespaceOrTag,\n    processParsedNamespaceOption,\n    ReturnHelper,\n    startPaths,\n    stringifyNamespace\n} from \"../../misc-functions\";\nimport { Parser } from \"../../types\";\n\nconst exceptions = {\n    advancement_notfound: new CommandErrorBuilder(\n        \"advancement.advancementNotFound\",\n        \"Unknown advancement: %s\"\n    ),\n    nobossbar: new CommandErrorBuilder(\n        \"commands.bossbar.unknown\",\n        \"No bossbar exists with the ID '%s'\"\n    ),\n    recipe_notfound: new CommandErrorBuilder(\n        \"recipe.notFound\",\n        \"Unkown recipe: %s\"\n    ),\n    unknown_function: new CommandErrorBuilder(\n        \"arguments.function.unknown\",\n        \"Unknown function '%s'\"\n    ),\n    unknown_resource: new CommandErrorBuilder(\n        \"argument.id.unknown\",\n        \"Unknown resource '%s'\"\n    ),\n    unknown_tag: new CommandErrorBuilder(\n        \"arguments.function.tag.unknown\",\n        \"Unknown function tag '#%s'\"\n    )\n};\n\nexport const functionParser: Parser = {\n    parse: (reader, info) => {\n        const helper = new ReturnHelper(info);\n        const start = reader.cursor;\n        const parsed = parseNamespaceOrTag(reader, info, \"function_tags\");\n        const localData = info.data.localData;\n        if (helper.merge(parsed)) {\n            const data = parsed.data;\n            if (data.resolved && data.values) {\n                helper.merge(\n                    buildTagActions(\n                        data.values,\n                        start,\n                        reader.cursor,\n                        \"function_tags\",\n                        localData\n                    )\n                );\n                return helper.succeed();\n            } else {\n                const options = getResourcesofType(info.data, \"functions\");\n                const postProcess = processParsedNamespaceOption(\n                    data.parsed,\n                    options,\n                    info.suggesting && !reader.canRead(),\n                    start,\n                    CompletionItemKind.Method\n                );\n                if (postProcess.data.length === 0) {\n                    helper.addErrors(\n                        exceptions.unknown_function.create(\n                            start,\n                            reader.cursor,\n                            stringifyNamespace(data.parsed)\n                        )\n                    );\n                }\n                if (localData) {\n                    for (const func of postProcess.data) {\n                        const location = buildPath(\n                            func,\n                            localData,\n                            \"functions\"\n                        );\n                        if (location) {\n                            helper.addActions({\n                                data: location,\n                                high: reader.cursor,\n                                low: start,\n                                type: \"source\"\n                            });\n                        }\n                    }\n                }\n                return helper.mergeChain(postProcess).succeed();\n            }\n        } else {\n            if (!parsed.data) {\n                return helper.fail();\n            } else {\n                return helper\n                    .addErrors(\n                        exceptions.unknown_tag.create(\n                            start,\n                            reader.cursor,\n                            stringifyNamespace(parsed.data)\n                        )\n                    )\n                    .succeed();\n            }\n        }\n    }\n};\n\nconst idParser: Parser = {\n    parse: parseNamespace\n};\n\nconst bossbarParser: Parser = {\n    parse: (reader, info) => {\n        const helper = new ReturnHelper(info);\n        if (info.data.localData && info.data.localData.nbt.level) {\n            const start = reader.cursor;\n            const bars = info.data.localData.nbt.level.Data.CustomBossEvents;\n            const options = Object.keys(bars).map((v, _) =>\n                convertToNamespace(v)\n            );\n            const result = parseNamespaceOption(reader, options);\n            if (helper.merge(result)) {\n                return helper.succeed();\n            } else {\n                if (result.data) {\n                    return helper\n                        .addErrors(\n                            exceptions.nobossbar.create(\n                                start,\n                                reader.cursor,\n                                stringifyNamespace(result.data)\n                            )\n                        )\n                        .succeed();\n                } else {\n                    return helper.fail();\n                }\n            }\n        } else {\n            return helper.return(parseNamespace(reader));\n        }\n    }\n};\n\nconst resourceKinds: Array<\n    ContextPath<\n        | {\n              issue: CommandErrorBuilder;\n              resource: keyof Resources;\n          }\n        | { resource: Parser }\n    >\n> = [\n    {\n        data: {\n            issue: exceptions.advancement_notfound,\n            resource: \"advancements\"\n        },\n        path: [\"advancement\"]\n    },\n    { data: { resource: idParser }, path: [\"bossbar\", \"add\"] },\n    { data: { resource: bossbarParser }, path: [\"bossbar\"] },\n    {\n        data: { resource: bossbarParser },\n        path: [\"execute\", \"store\", \"result\"]\n    },\n    // Worrying about sounds is not in scope for initial release\n    { data: { resource: idParser }, path: [\"playsound\"] },\n    { data: { resource: idParser }, path: [\"stopsound\"] },\n    {\n        data: { resource: \"recipes\", issue: exceptions.advancement_notfound },\n        path: [\"recipe\"]\n    }\n];\n\nexport const resourceParser: Parser = {\n    parse: (reader, info) => {\n        const start = reader.cursor;\n        const helper = new ReturnHelper(info);\n        const kind = startPaths(resourceKinds, info.path);\n        if (kind) {\n            if (typeof kind.resource === \"object\") {\n                return helper.return(kind.resource.parse(reader, info));\n            } else {\n                const result = parseNamespaceOption(\n                    reader,\n                    getResourcesofType(info.data, kind.resource)\n                );\n                if (helper.merge(result)) {\n                    return helper.succeed();\n                } else {\n                    if (result.data) {\n                        return helper\n                            .addErrors(\n                                // @ts-ignore type inference failure\n                                (kind.issue as CommandErrorBuilder).create(\n                                    start,\n                                    reader.cursor,\n                                    stringifyNamespace(result.data)\n                                )\n                            )\n                            .succeed();\n                    } else {\n                        return helper.fail();\n                    }\n                }\n            }\n        } else {\n            throw new Error(\n                `Resource at path ${\n                    info.path\n                } does not have a supported resource`\n            );\n        }\n    }\n};\n","import { CommandErrorBuilder } from \"../../brigadier/errors\";\nimport { DisplaySlots } from \"../../data/nbt/nbt-types\";\nimport { ReturnHelper } from \"../../misc-functions\";\nimport { typed_keys } from \"../../misc-functions/third_party/typed-keys\";\nimport { Parser } from \"../../types\";\n\nconst exceptions = {\n    unknown_objective: new CommandErrorBuilder(\n        \"arguments.objective.notFound\",\n        \"Unknown scoreboard objective '%s'\"\n    ),\n    unknown_team: new CommandErrorBuilder(\"team.notFound\", \"Unknown team '%s'\")\n};\n\nconst slotPurposes: { [_ in keyof DisplaySlots]: string } = {\n    slot_0: \"list\",\n    slot_1: \"sidebar\",\n    slot_10: \"sidebar.team.gray\",\n    slot_11: \"sidebar.team.dark_gray\",\n    slot_12: \"sidebar.team.blue\",\n    slot_13: \"sidebar.team.green\",\n    slot_14: \"sidebar.team.aqua\",\n    slot_15: \"sidebar.team.red\",\n    slot_16: \"sidebar.team.light_purple\",\n    slot_17: \"sidebar.team.yellow\",\n    slot_18: \"sidebar.team.white\",\n    slot_2: \"belowName\",\n    slot_3: \"sidebar.team.black\",\n    slot_4: \"sidebar.team.dark_blue\",\n    slot_5: \"sidebar.team.dark_green\",\n    slot_6: \"sidebar.team.dark_aqua\",\n    slot_7: \"sidebar.team.dark_red\",\n    slot_8: \"sidebar.team.dark_purple\",\n    slot_9: \"sidebar.team.gold\"\n};\n\nexport const objectiveParser: Parser = {\n    parse: (reader, info) => {\n        const helper = new ReturnHelper(info);\n        const start = reader.cursor;\n        if (info.data.localData) {\n            const scoreboardData = info.data.localData.nbt.scoreboard;\n            if (scoreboardData) {\n                const options = scoreboardData.data.Objectives.map(v => v.Name);\n                const result = reader.readOption(\n                    options,\n                    false,\n                    undefined,\n                    \"no\"\n                );\n                if (helper.merge(result)) {\n                    if (!info.suggesting) {\n                        for (const objective of scoreboardData.data\n                            .Objectives) {\n                            if (objective.Name === result.data) {\n                                helper.addActions({\n                                    data: `Displayed as: ${\n                                        objective.DisplayName\n                                    }\n\nCriteria: ${objective.CriteriaName}`,\n                                    high: reader.cursor,\n                                    low: start,\n                                    type: \"hover\"\n                                });\n                                break;\n                            }\n                        }\n                        if (scoreboardData.data.DisplaySlots) {\n                            for (const slot of typed_keys(\n                                scoreboardData.data.DisplaySlots\n                            )) {\n                                if (\n                                    scoreboardData.data.DisplaySlots[slot] ===\n                                    result.data\n                                ) {\n                                    helper.addActions({\n                                        data: `Displayed in ${\n                                            slotPurposes[slot]\n                                        }`,\n                                        high: reader.cursor,\n                                        low: start,\n                                        type: \"hover\"\n                                    });\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    if (result.data) {\n                        helper.addErrors(\n                            exceptions.unknown_objective.create(\n                                start,\n                                reader.cursor,\n                                result.data\n                            )\n                        );\n                    } else {\n                        return helper.fail();\n                    }\n                }\n                return helper.succeed();\n            }\n        }\n        reader.readUnquotedString();\n        return helper.succeed();\n    }\n};\n\nexport const teamParser: Parser = {\n    parse: (reader, info) => {\n        const helper = new ReturnHelper();\n        const start = reader.cursor;\n        if (info.data.localData) {\n            const scoreboardData = info.data.localData.nbt.scoreboard;\n            if (scoreboardData) {\n                const options = scoreboardData.data.Teams;\n                const result = reader.readOption(\n                    options.map(v => v.Name),\n                    false,\n                    undefined,\n                    \"no\"\n                );\n                if (helper.merge(result)) {\n                    for (const team of options) {\n                        if (team.Name === result.data) {\n                            helper.addActions({\n                                data: `\\`\\`\\`json\n${JSON.stringify(team, undefined, 4)}\n\\`\\`\\``,\n                                high: reader.cursor,\n                                low: start,\n                                type: \"hover\"\n                            });\n                            break;\n                        }\n                    }\n                } else {\n                    if (result.data) {\n                        helper.addErrors(\n                            exceptions.unknown_objective.create(\n                                start,\n                                reader.cursor,\n                                result.data\n                            )\n                        );\n                    } else {\n                        return helper.fail();\n                    }\n                }\n            }\n        } else {\n            reader.readUnquotedString();\n        }\n        return helper.succeed();\n    }\n};\nexport const criteriaParser = undefined;\n","import { CommandErrorBuilder } from \"../../brigadier/errors\";\nimport { StringReader } from \"../../brigadier/string-reader\";\nimport { ReturnHelper } from \"../../misc-functions\";\nimport { Parser, ParserInfo, ReturnedInfo } from \"../../types\";\nimport { NBTWalker } from \"./nbt/doc-walker\";\nimport { NBTTagCompound } from \"./nbt/tag/compound-tag\";\n\nconst COMPACC = \".\";\nconst ARROPEN = \"[\";\nconst ARRCLOSE = \"]\";\n\nconst badChar = new CommandErrorBuilder(\n    \"argument.nbt_path.badchar\",\n    \"Bad character '%s'\"\n);\n\nexport const parser: Parser = {\n    parse: (\n        reader: StringReader,\n        prop: ParserInfo\n    ): ReturnedInfo<undefined> => {\n        const helper = new ReturnHelper();\n        const out: string[] = [];\n        const walker = new NBTWalker(\n            new NBTTagCompound({}),\n            prop.data.globalData.nbt_docs,\n            true,\n            false\n        );\n        const chr = reader.readString();\n        if (helper.merge(chr)) {\n            out.push(chr.data);\n        } else {\n            const node = walker.getFinalNode([]);\n            helper.mergeChain(node);\n        }\n        while (reader.canRead() && !/\\s/.test(reader.peek())) {\n            const next = reader.read();\n            if (next === COMPACC) {\n                const str = reader.readString();\n                if (helper.merge(str)) {\n                    out.push(str.data);\n                } else {\n                    const node = walker.getFinalNode([]);\n                    helper.mergeChain(node);\n                }\n            } else if (next === ARROPEN) {\n                const num = reader.readInt();\n                if (helper.merge(num)) {\n                    out.push(num.data.toString());\n                } else {\n                    const node = walker.getFinalNode([]);\n                    helper.mergeChain(node);\n                }\n                if (!helper.merge(reader.expect(ARRCLOSE))) {\n                    return helper.fail();\n                }\n            } else {\n                return helper.fail(\n                    badChar.create(reader.cursor - 1, reader.cursor, next)\n                );\n            }\n        }\n        helper.addSuggestion(reader.cursor, \".\");\n        helper.addSuggestion(reader.cursor, \"[\");\n        return helper.succeed();\n    }\n};\n","import { CommandNode } from \"../data/types\";\nimport { Parser } from \"../types\";\n\nimport * as brigadierParsers from \"./brigadier\";\nimport { literalParser } from \"./literal\";\nimport * as blockParsers from \"./minecraft/block\";\nimport * as coordParsers from \"./minecraft/coordinates\";\nimport * as itemParsers from \"./minecraft/item\";\nimport * as listParsers from \"./minecraft/lists\";\nimport { messageParser } from \"./minecraft/message\";\nimport * as namespaceParsers from \"./minecraft/namespace-list\";\nimport { functionParser, resourceParser } from \"./minecraft/resources\";\nimport { objectiveParser, teamParser } from \"./minecraft/scoreboard\";\n\nimport { parser as NBTPathParser } from \"./minecraft/nbt-path\";\nimport { parser as NBTParser } from \"./minecraft/nbt/nbt\";\n\n/**\n * Incomplete:\n * https://github.com/Levertion/mcfunction-langserver/projects/1\n */\nconst implementedParsers: { [id: string]: Parser } = {\n    \"brigadier:bool\": brigadierParsers.boolParser,\n    \"brigadier:float\": brigadierParsers.floatParser,\n    \"brigadier:integer\": brigadierParsers.intParser,\n    \"brigadier:string\": brigadierParsers.stringParser,\n    \"minecraft:block_pos\": coordParsers.blockPos,\n    \"minecraft:block_predicate\": blockParsers.predicateParser,\n    \"minecraft:block_state\": blockParsers.stateParser,\n    \"minecraft:color\": listParsers.colorParser,\n    \"minecraft:dimension\": namespaceParsers.dimensionParser,\n    \"minecraft:entity_anchor\": listParsers.entityAnchorParser,\n    \"minecraft:entity_summon\": namespaceParsers.summonParser,\n    \"minecraft:function\": functionParser,\n    \"minecraft:item_enchantment\": namespaceParsers.enchantmentParser,\n    \"minecraft:item_predicate\": itemParsers.predicate,\n    \"minecraft:item_slot\": listParsers.itemSlotParser,\n    \"minecraft:item_stack\": itemParsers.stack,\n    \"minecraft:message\": messageParser,\n    \"minecraft:mob_effect\": namespaceParsers.mobEffectParser,\n    \"minecraft:nbt\": NBTParser,\n    \"minecraft:nbt-path\": NBTPathParser,\n    \"minecraft:objective\": objectiveParser,\n    \"minecraft:operation\": listParsers.operationParser,\n    \"minecraft:particle\": namespaceParsers.particleParser,\n    \"minecraft:resource_location\": resourceParser,\n    \"minecraft:rotation\": coordParsers.rotation,\n    \"minecraft:scoreboard_slot\": listParsers.scoreBoardSlotParser,\n    \"minecraft:team\": teamParser,\n    \"minecraft:vec2\": coordParsers.vec2,\n    \"minecraft:vec3\": coordParsers.vec3\n};\n\nexport function getParser(node: CommandNode): Parser | undefined {\n    switch (node.type) {\n        case \"literal\":\n            return literalParser;\n        case \"argument\":\n            if (!!node.parser) {\n                return getArgParser(node.parser);\n            }\n            break;\n        default:\n    }\n    return undefined;\n}\n\nfunction getArgParser(id: string): Parser | undefined {\n    if (\n        !!global.mcLangSettings &&\n        !!global.mcLangSettings.parsers &&\n        global.mcLangSettings.parsers.hasOwnProperty(id)\n    ) {\n        try {\n            return global.mcLangSettings.parsers[id];\n        } catch (_) {\n            mcLangLog(\n                `${global.mcLangSettings.parsers[id]} could not be loaded`\n            );\n        }\n    }\n    if (implementedParsers.hasOwnProperty(id)) {\n        return implementedParsers[id];\n    }\n    mcLangLog(`Argument with parser id ${id} has no associated parser.\nPlease consider reporting this at https://github.com/Levertion/mcfunction-language-server/issues`);\n    return undefined;\n}\n","import {\n    CompletionItem,\n    CompletionItemKind,\n    CompletionList\n} from \"vscode-languageserver/lib/main\";\n\nimport { StringReader } from \"./brigadier/string-reader\";\nimport { COMMENT_START } from \"./consts\";\nimport { DataManager } from \"./data/manager\";\nimport { CommandNodePath, CommandTree } from \"./data/types\";\nimport { createParserInfo } from \"./misc-functions/creators\";\nimport { followPath, getNextNode } from \"./misc-functions/node-tree\";\nimport { getParser } from \"./parsers/get-parser\";\nimport {\n    CommandContext,\n    CommmandData,\n    FunctionInfo,\n    ParseNode,\n    SuggestResult\n} from \"./types\";\n\nexport function computeCompletions(\n    linenum: number,\n    character: number,\n    document: FunctionInfo,\n    data: DataManager\n): CompletionList {\n    const line = document.lines[linenum];\n    if (line.parseInfo === undefined || line.text.startsWith(COMMENT_START)) {\n        return CompletionList.create([], true);\n    }\n    const commandData: CommmandData = {\n        globalData: data.globalData,\n        localData: data.getPackFolderData(document.pack_segments)\n    };\n    const nodes = line.parseInfo ? line.parseInfo.nodes : [];\n    if (nodes.length === 0) {\n        return CompletionList.create(\n            getCompletionsFromNode(\n                linenum,\n                0,\n                character,\n                line.text,\n                [],\n                commandData,\n                {}\n            ),\n            true\n        );\n    }\n    const finals: ParseNode[] = [];\n    const internals: ParseNode[] = [];\n    for (const node of nodes) {\n        if (node.high < character) {\n            if (node.final) {\n                finals.push(node);\n            }\n        } else {\n            if (node.low <= character) {\n                internals.push(node);\n            }\n        }\n    }\n    const completions: CompletionItem[] = [];\n    for (const finalNode of finals) {\n        completions.push(\n            ...getCompletionsFromNode(\n                linenum,\n                finalNode.high + 1,\n                character,\n                line.text,\n                finalNode.path,\n                commandData,\n                finalNode.context\n            )\n        );\n    }\n    for (const insideNode of internals) {\n        const newPath = insideNode.path.slice();\n        const parentPath = newPath.slice(0, -1);\n        completions.push(\n            ...getCompletionsFromNode(\n                linenum,\n                insideNode.low,\n                character,\n                line.text,\n                parentPath,\n                commandData,\n                insideNode.context\n            )\n        );\n    }\n    return CompletionList.create(completions, true);\n}\n\nfunction getCompletionsFromNode(\n    line: number,\n    start: number,\n    end: number,\n    text: string,\n    nodepath: CommandNodePath,\n    data: CommmandData,\n    context: CommandContext\n): CompletionItem[] {\n    const parent = getNextNode(\n        followPath(data.globalData.commands, nodepath),\n        nodepath,\n        (data.globalData.commands as any) as CommandTree\n    ).node;\n    const result: CompletionItem[] = [];\n    if (!!parent.children) {\n        for (const childKey in parent.children) {\n            if (parent.children.hasOwnProperty(childKey)) {\n                const child = parent.children[childKey];\n                const childPath = [...nodepath, childKey];\n                const info = createParserInfo(\n                    child,\n                    data,\n                    childPath,\n                    context,\n                    true\n                );\n                const parser = getParser(child);\n                if (!!parser) {\n                    const reader = new StringReader(text.substring(start, end));\n                    const parseResult = parser.parse(reader, info);\n                    if (!!parseResult) {\n                        result.push(\n                            ...suggestionsToCompletions(\n                                parseResult.suggestions,\n                                line,\n                                start,\n                                end,\n                                parser.kind\n                            )\n                        );\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\n\nfunction suggestionsToCompletions(\n    suggestions: SuggestResult[],\n    line: number,\n    start: number,\n    end: number,\n    defaultKind: CompletionItemKind = CompletionItemKind.Keyword\n): CompletionItem[] {\n    const result: CompletionItem[] = [];\n    for (const suggestion of suggestions) {\n        if (typeof suggestion === \"string\") {\n            result.push({\n                kind: defaultKind,\n                label: suggestion,\n                textEdit: {\n                    newText: suggestion,\n                    range: {\n                        end: { character: end, line },\n                        start: { character: start, line }\n                    }\n                }\n            });\n        } else {\n            const completion: CompletionItem = {\n                kind: suggestion.kind || defaultKind,\n                label: suggestion.text,\n                textEdit: {\n                    newText: suggestion.text,\n                    range: {\n                        end: { character: end, line },\n                        start: { character: start + suggestion.start, line }\n                    }\n                }\n            };\n            if (!!suggestion.description) {\n                completion.detail = suggestion.description;\n            }\n            result.push(completion);\n        }\n    }\n    return result;\n}\n","import { resourceTypes, ReturnHelper } from \"../../misc-functions\";\nimport { typed_keys } from \"../../misc-functions/third_party/typed-keys\";\n\nimport { join } from \"path\";\nimport { ReturnSuccess } from \"../../types\";\nimport { GlobalData, Resources, WorldInfo } from \"../types\";\n\nexport async function runMapFunctions(\n    resources: Resources,\n    globalData: GlobalData,\n    packRoot: string,\n    localData?: WorldInfo\n): Promise<ReturnSuccess<Resources>> {\n    const result: Resources = {};\n    const helper = new ReturnHelper();\n    const promises: Array<Promise<void>> = [];\n    for (const type of typed_keys(resources)) {\n        type resourcesType = NonNullable<Resources[typeof type]>;\n        const val = (result[type] = [] as resourcesType);\n        const data = resources[type] as resourcesType;\n        // tslint:disable-next-line:no-unbound-method We control this function, so we know it won't use the this keyword.\n        const mapFunction = resourceTypes[type].mapFunction;\n        if (mapFunction) {\n            promises.push(\n                ...data.map(async v => {\n                    const res = await mapFunction(\n                        v,\n                        packRoot,\n                        globalData,\n                        localData\n                    );\n                    helper.merge(res);\n                    val.push(res.data);\n                })\n            );\n        } else {\n            val.push(...data);\n        }\n    }\n    await Promise.all(promises);\n    return helper.succeed(result);\n}\n\nexport async function mapPacksInfo(\n    packsInfo: WorldInfo,\n    global: GlobalData\n): Promise<ReturnSuccess<WorldInfo>> {\n    const helper = new ReturnHelper();\n    const result: WorldInfo = { ...packsInfo, packs: {} };\n    const promises = typed_keys(packsInfo.packs).map(async packID => {\n        const element = packsInfo.packs[packID];\n        const subresult = await runMapFunctions(\n            element.data,\n            global,\n            join(packsInfo.location, element.name),\n            packsInfo\n        );\n        helper.merge(subresult);\n        result.packs[packID] = { ...element, data: subresult.data };\n    });\n    await Promise.all(promises);\n    return helper.succeed(result);\n}\n","import * as Long from \"long\";\n\nexport class BufferStream {\n    private readonly buf: Buffer;\n    private index: number;\n\n    public constructor(buffer: Buffer) {\n        this.index = 0;\n        this.buf = buffer;\n    }\n\n    public getByte(): number {\n        const out = this.buf.readInt8(this.index);\n        this.index++;\n        return out;\n    }\n\n    public getDouble(): number {\n        const out = this.buf.readDoubleBE(this.index);\n        this.index += 8;\n        return out;\n    }\n\n    public getFloat(): number {\n        const out = this.buf.readFloatBE(this.index);\n        this.index += 4;\n        return out;\n    }\n\n    public getInt(): number {\n        const out = this.buf.readInt32BE(this.index);\n        this.index += 4;\n        return out;\n    }\n\n    public getLong(): Long {\n        const arr = this.buf.subarray(this.index, this.index + 8);\n        this.index += 8;\n        return Long.fromBytesBE([...arr]);\n    }\n\n    public getShort(): number {\n        const out = this.buf.readInt16BE(this.index);\n        this.index += 2;\n        return out;\n    }\n\n    public getUTF8(): string {\n        const len = this.getShort();\n        const out = this.buf.toString(\"utf8\", this.index, this.index + len);\n        this.index += len;\n        return out;\n    }\n}\n","import { promisify } from \"util\";\nimport * as zlib from \"zlib\";\nimport { BufferStream } from \"./buffer-stream\";\n\nconst unzipAsync = promisify<zlib.InputType, Buffer>(zlib.unzip);\n\nlet tags: Tag;\n\ntype tagparser<T> = (buffer: BufferStream) => T;\n\nconst nbtbyte = (buffer: BufferStream) => buffer.getByte();\nconst nbtshort = (buffer: BufferStream) => buffer.getShort();\nconst nbtint = (buffer: BufferStream) => buffer.getInt();\nconst nbtlong = (buffer: BufferStream) => buffer.getLong();\nconst nbtfloat = (buffer: BufferStream) => buffer.getFloat();\nconst nbtdouble = (buffer: BufferStream) => buffer.getDouble();\n\nconst nbtbytearray = (buffer: BufferStream) => {\n    const len = buffer.getInt();\n    const out: number[] = [];\n    for (let i = 0; i < len; i++) {\n        out.push(buffer.getByte());\n    }\n    return out;\n};\n\nconst nbtstring = (buffer: BufferStream) => buffer.getUTF8();\n\nconst nbtlist = (buffer: BufferStream) => {\n    const id = buffer.getByte();\n    const len = buffer.getInt();\n    const parser = tags[id];\n    const out: any[] = [];\n    for (let i = 0; i < len; i++) {\n        out.push(parser(buffer));\n    }\n    return out;\n};\n\nconst nbtcompound = (buffer: BufferStream) => {\n    let tag: number = buffer.getByte();\n    const out: { [key: string]: any } = {};\n    while (tag !== 0) {\n        const name = buffer.getUTF8();\n        const parser = tags[tag];\n        out[name] = parser(buffer);\n        tag = buffer.getByte();\n    }\n    return out;\n};\n\nconst nbtintarray = (buffer: BufferStream) => {\n    const len = buffer.getInt();\n    const out: number[] = [];\n    for (let i = 0; i < len; i++) {\n        out.push(buffer.getInt());\n    }\n    return out;\n};\n\nconst nbtlongarray = (buffer: BufferStream) => {\n    const len = buffer.getInt();\n    const out: Long[] = [];\n    for (let i = 0; i < len; i++) {\n        out.push(buffer.getLong());\n    }\n    return out;\n};\n\ninterface Tag {\n    [id: number]: tagparser<any>;\n}\n\ntags = {\n    // Need to redeclare because of TSLint\n    1: nbtbyte,\n    2: nbtshort,\n    3: nbtint,\n    4: nbtlong,\n    5: nbtfloat,\n    6: nbtdouble,\n    7: nbtbytearray,\n    8: nbtstring,\n    9: nbtlist,\n    10: nbtcompound,\n    11: nbtintarray,\n    12: nbtlongarray\n};\n\nexport async function parse<T>(\n    buffer: Buffer,\n    named: boolean = true\n): Promise<T> {\n    let unzipbuf;\n    try {\n        unzipbuf = await unzipAsync(buffer);\n    } catch (e) {\n        unzipbuf = buffer;\n    }\n    const stream = new BufferStream(unzipbuf);\n    const id = stream.getByte();\n    if (named) {\n        stream.getUTF8(); // Name\n    }\n    const parser = tags[id];\n    return parser(stream) as T;\n}\n","import * as path from \"path\";\nimport { readFileAsync } from \"../../misc-functions\";\nimport { WorldNBT } from \"../types\";\nimport { Level, Scoreboard } from \"./nbt-types\";\nimport { parse } from \"./parser\";\n\nexport async function loadNBT(worldLoc: string): Promise<WorldNBT> {\n    const nbt: WorldNBT = {} as WorldNBT;\n\n    const levelpath = path.resolve(worldLoc, \"./level.dat\");\n    try {\n        const levelbuf: Buffer = await readFileAsync(levelpath);\n        nbt.level = await parse<Level>(levelbuf);\n    } catch (e) {\n        // Level doesn't exist\n    }\n\n    const scpath = path.resolve(worldLoc, \"./data/scoreboard.dat\");\n    try {\n        const scoreboardbuf: Buffer = await readFileAsync(scpath);\n        nbt.scoreboard = await parse<Scoreboard>(scoreboardbuf);\n    } catch (e) {\n        // Scoreboard file doesn't exist\n    }\n\n    return nbt;\n}\n","import * as path from \"path\";\n\nimport { DATAFOLDER, MCMETAFILE, SLASH, SLASHREPLACEREGEX } from \"../consts\";\nimport { resourceTypes, ReturnHelper } from \"../misc-functions\";\nimport { createExtensionFileError } from \"../misc-functions/file-errors\";\nimport {\n    readDirAsync,\n    readJSON,\n    statAsync,\n    walkDir\n} from \"../misc-functions/promisified-fs\";\nimport { typed_keys } from \"../misc-functions/third_party/typed-keys\";\nimport { ReturnSuccess } from \"../types\";\nimport { mapPacksInfo } from \"./extractor/mapfunctions\";\nimport { loadNBT } from \"./nbt/nbt-cache\";\nimport {\n    Datapack,\n    DataPackID,\n    GlobalData,\n    McmetaFile,\n    MinecraftResource,\n    Resources,\n    WorldInfo\n} from \"./types\";\n\nexport async function getNamespaceResources(\n    namespace: string,\n    dataFolder: string,\n    id: DataPackID | undefined,\n    result: Resources = {}\n): Promise<ReturnSuccess<Resources>> {\n    const helper = new ReturnHelper();\n    const namespaceFolder = path.join(dataFolder, namespace);\n    const subDirs = await subDirectories(namespaceFolder);\n    await Promise.all(\n        typed_keys(resourceTypes).map(async type => {\n            const resourceInfo = resourceTypes[type];\n            if (subDirs.indexOf(resourceInfo.path[0]) === -1) {\n                return;\n            }\n            const dataContents = path.join(\n                namespaceFolder,\n                ...resourceInfo.path\n            );\n            const files = await walkDir(dataContents);\n            if (files.length === 0) {\n                return;\n            }\n            const nameSpaceContents = result[type] || [];\n            await Promise.all(\n                files.map(async file => {\n                    const realExtension = path.extname(file);\n                    if (realExtension !== resourceInfo.extension) {\n                        helper.addMisc(\n                            createExtensionFileError(\n                                file,\n                                resourceInfo.extension,\n                                realExtension\n                            )\n                        );\n                    }\n                    const internalUri = path.relative(dataContents, file);\n                    const newResource: MinecraftResource = {\n                        namespace,\n                        pack: id,\n                        path: internalUri\n                            .slice(0, -realExtension.length)\n                            .replace(SLASHREPLACEREGEX, SLASH)\n                    };\n                    nameSpaceContents.push(newResource);\n                })\n            );\n            result[type] = nameSpaceContents;\n        })\n    );\n\n    return helper.succeed(result);\n}\n\nasync function buildDataPack(\n    packFolder: string,\n    id: DataPackID,\n    packName: string\n): Promise<ReturnSuccess<Datapack>> {\n    const helper = new ReturnHelper();\n    const dataFolder = path.join(packFolder, DATAFOLDER);\n    const [mcmeta, packResources] = await Promise.all([\n        readJSON<McmetaFile>(path.join(packFolder, MCMETAFILE)),\n        getPackResources(dataFolder, id)\n    ]);\n    const result: Datapack = { id, data: packResources.data, name: packName };\n    helper.merge(packResources);\n    if (helper.merge(mcmeta)) {\n        result.mcmeta = mcmeta.data;\n    }\n    return helper.succeed(result);\n}\n\nasync function getPackResources(\n    dataFolder: string,\n    id: DataPackID\n): Promise<ReturnSuccess<Resources>> {\n    const helper = new ReturnHelper();\n    const namespaces = await subDirectories(dataFolder);\n    const result: Resources = {};\n    await Promise.all(\n        namespaces.map(async namespace => {\n            const resources = await getNamespaceResources(\n                namespace,\n                dataFolder,\n                id,\n                result\n            );\n            helper.merge(resources);\n            return resources.data;\n        })\n    );\n    return helper.succeed(result);\n}\n\nexport async function getPacksInfo(\n    location: string,\n    globalData: GlobalData\n): Promise<ReturnSuccess<WorldInfo>> {\n    const packNames = await subDirectories(location);\n    const helper = new ReturnHelper();\n    const packs = [...packNames.entries()];\n    const nbt = await loadNBT(path.resolve(location, \"../\"));\n    const result: WorldInfo = { location, packnamesmap: {}, packs: {}, nbt };\n    const promises: Array<Promise<void>> = packs.map(\n        async ([packID, packName]) => {\n            const loc = path.join(location, packName);\n            const packData = await buildDataPack(loc, packID, packName);\n            helper.merge(packData);\n            result.packs[packID] = packData.data;\n            result.packnamesmap[packName] = packID;\n        }\n    );\n    await Promise.all(promises);\n    const otherResult = await mapPacksInfo(result, globalData);\n    return helper.mergeChain(otherResult).succeed(otherResult.data);\n}\n\nasync function subDirectories(baseFolder: string): Promise<string[]> {\n    let files: string[] = [];\n    try {\n        files = await readDirAsync(baseFolder);\n    } catch {\n        return [];\n    }\n    const promises = files.map<Promise<boolean>>(async name => {\n        try {\n            return (await statAsync(path.join(baseFolder, name))).isDirectory();\n        } catch {\n            return false;\n        }\n    });\n    const results = await Promise.all(promises);\n    return files.filter((_, i) => results[i]);\n}\n","import * as fs from \"fs\";\nimport * as path from \"path\";\nimport { promisify } from \"util\";\n\nimport { DATAFOLDER } from \"../../consts\";\nimport { ReturnHelper } from \"../../misc-functions\";\nimport { ReturnSuccess } from \"../../types\";\nimport { getNamespaceResources } from \"../datapack-resources\";\nimport { BlocksPropertyInfo, CommandTree, GlobalData } from \"../types\";\nimport { runMapFunctions } from \"./mapfunctions\";\nconst readFileAsync = promisify(fs.readFile);\n\ntype DataSaveResult<T extends keyof GlobalData> = [T, GlobalData[T]];\n\nexport async function collectData(\n    version: string,\n    dataDir: string\n): Promise<ReturnSuccess<GlobalData>> {\n    const helper = new ReturnHelper();\n    const result: GlobalData = { meta_info: { version } } as GlobalData;\n    const cleanups = await Promise.all([\n        getBlocks(dataDir),\n        getItems(dataDir),\n        getCommands(dataDir),\n        getResources(dataDir)\n    ]);\n    for (const dataType of cleanups) {\n        result[dataType[0]] = dataType[1];\n    }\n    const resources = await runMapFunctions(result.resources, result, dataDir);\n    return helper\n        .mergeChain(resources)\n        .succeed({ ...result, resources: resources.data });\n}\n\n//#region Resources\nasync function getResources(\n    dataDir: string\n): Promise<DataSaveResult<\"resources\">> {\n    const namespacePath = path.join(dataDir, DATAFOLDER);\n    const resources = await getNamespaceResources(\n        \"minecraft\",\n        namespacePath,\n        undefined\n    );\n    return [\"resources\", resources.data];\n}\n//#endregion\n//#region Items\nasync function getItems(dataDir: string): Promise<DataSaveResult<\"items\">> {\n    const itemsData: Dictionary<{ protocol_id: number }> = JSON.parse(\n        (await readFileAsync(\n            path.join(dataDir, \"reports\", \"items.json\")\n        )).toString()\n    );\n    return [\"items\", Object.keys(itemsData)];\n}\nasync function getCommands(\n    dataDir: string\n): Promise<DataSaveResult<\"commands\">> {\n    const tree: CommandTree = JSON.parse(\n        (await readFileAsync(\n            path.join(dataDir, \"reports\", \"commands.json\")\n        )).toString()\n    );\n    return [\"commands\", tree];\n}\n//#endregion\n\n//#region Blocks\nasync function getBlocks(dataDir: string): Promise<DataSaveResult<\"blocks\">> {\n    const blocksData: BlocksJson = JSON.parse(\n        (await readFileAsync(\n            path.join(dataDir, \"reports\", \"blocks.json\")\n        )).toString()\n    );\n    return [\"blocks\", cleanBlocks(blocksData)];\n}\n\nfunction cleanBlocks(blocks: BlocksJson): BlocksPropertyInfo {\n    const result: BlocksPropertyInfo = {};\n    for (const blockName in blocks) {\n        if (blocks.hasOwnProperty(blockName)) {\n            const blockInfo = blocks[blockName];\n            result[blockName] = {};\n            if (!!blockInfo.properties) {\n                Object.assign(result[blockName], blockInfo.properties);\n            }\n        }\n    }\n    return result;\n}\n\ninterface BlocksJson {\n    [id: string]: {\n        properties?: {\n            [id: string]: string[];\n        };\n    };\n}\n//#endregion\n","// tslint:disable:no-require-imports\nimport * as fs from \"fs\";\nimport * as path from \"path\";\n// @ts-ignore `import *` syntax is broken in this case as requestPromise would be a function\nimport requestPromise from \"request-promise-native\";\n\nexport async function getPathToJar(\n    tempdir: string,\n    currentversion: string\n): Promise<JarInfo> {\n    if (!!mcLangSettings.data.customJar) {\n        return { jarPath: mcLangSettings.data.customJar, version: \"\" };\n    } else {\n        return downloadJar(currentversion, tempdir);\n    }\n}\n\nexport async function downloadJar(\n    currentversion: string,\n    tmpDirName: string\n): Promise<JarInfo> {\n    const versionInfo = await getLatestVersionInfo();\n    if (versionInfo.id !== currentversion) {\n        const singleVersion: SingleVersionInformation = await requestPromise(\n            versionInfo.url,\n            {\n                json: true\n            }\n        ).promise();\n        const jarPath = path.join(\n            tmpDirName,\n            `minecraft-function-${versionInfo.id}.jar`\n        );\n        const requestPromised = requestPromise(\n            singleVersion.downloads.server.url\n        );\n        requestPromised.pipe(fs.createWriteStream(jarPath));\n        await Promise.resolve(requestPromised);\n        return { jarPath, version: versionInfo.id };\n    } else {\n        throw new Error(\n            \"Downloading new global data not needed as current version is the same as the latest version.\"\n        );\n    }\n}\n\nexport interface JarInfo {\n    jarPath: string;\n    version: string;\n}\n\n//#region Version Manifest Usage\ninterface SingleVersionInformation {\n    downloads: {\n        server: {\n            sha1: string;\n            size: number;\n            url: string;\n        };\n    };\n}\n\nasync function getLatestVersionInfo(): Promise<VersionInfo> {\n    const manifest: VersionsManifest = await requestPromise(\n        \"https://launchermeta.mojang.com/mc/game/version_manifest.json\",\n        {\n            json: true\n        }\n    ).promise();\n    const version = findVersion(getVersionId(manifest), manifest);\n    return version;\n}\n\nfunction getVersionId(manifest: VersionsManifest): string {\n    if (mcLangSettings.data.snapshots) {\n        return manifest.latest.snapshot;\n    } else {\n        return manifest.latest.release;\n    }\n}\n\nfunction findVersion(version: string, manifest: VersionsManifest): VersionInfo {\n    return manifest.versions.find(\n        verInfo => verInfo.id === version\n    ) as VersionInfo;\n}\n\ninterface VersionInfo {\n    id: string;\n    releaseTime: string;\n    time: string;\n    type: \"snapshot\" | \"release\";\n    url: string;\n}\n\ninterface VersionsManifest {\n    latest: {\n        release: string;\n        snapshot: string;\n    };\n    versions: VersionInfo[];\n}\n//#endregion\n","import { execFile } from \"child_process\";\nimport * as path from \"path\";\nimport { promisify } from \"util\";\nconst execFileAsync = promisify(execFile);\n\n/**\n * Get the command used to execute a java version\n */\nexport async function checkJavaPath(): Promise<string> {\n    const javaPath = mcLangSettings.data.javaPath || \"java\";\n    try {\n        await execFileAsync(javaPath, [\"-version\"], { env: process.env });\n        return javaPath;\n    } catch (error) {\n        throw new Error(\n            `Could not find Java executable. Got message: '${error}'`\n        );\n    }\n}\n\nexport async function runGenerator(\n    javapath: string,\n    tempdir: string,\n    jarpath: string\n): Promise<string> {\n    const resultFolder = path.join(tempdir, \"generated\");\n    await execFileAsync(javapath, [\n        \"-cp\",\n        jarpath,\n        \"net.minecraft.data.Main\",\n        \"--output\",\n        resultFolder,\n        \"--all\"\n    ]);\n    return resultFolder;\n}\n","import * as fs from \"fs\";\nimport { tmpdir } from \"os\";\nimport * as path from \"path\";\nimport { promisify } from \"util\";\n\nimport { ReturnHelper } from \"../../misc-functions\";\nimport { ReturnSuccess } from \"../../types\";\nimport { cacheData } from \"../cache\";\nimport { Cacheable } from \"../types\";\nimport { collectData } from \"./collect-data\";\nimport { getPathToJar } from \"./download\";\nimport { checkJavaPath, runGenerator } from \"./extract-data\";\n\nconst mkdtmpAsync = promisify(fs.mkdtemp);\n\n/**\n * Will throw an error if something goes wrong.\n * Steps:\n * - Check if enabled in settings. ✓\n * - Check versions manifest. Compare with cached if available ✓\n *  - At the same time, check if java is installed ✓\n * - Get single version information ✓\n * - Download the jar into a temporary folder ✓\n * - Run the exposed data generator. ✓\n * - Collect the data exposed\n *  - Blocks and states\n *  - Items\n *  - (Entities)?\n *  - Commands\n *  - Advancements, recipes, structures, tags, etc\n * - Cache that data\n * - Return the data\n */\nexport async function collectGlobalData(\n    currentversion: string = \"\"\n): Promise<ReturnSuccess<Cacheable>> {\n    if (mcLangSettings.data.enabled) {\n        const javaPath = await checkJavaPath();\n        const dir = await mkdtmpAsync(path.join(tmpdir(), \"mcfunction\"));\n        const jarInfo = await getPathToJar(dir, currentversion);\n        const datadir = await runGenerator(javaPath, dir, jarInfo.jarPath);\n        mcLangLog(\"Generator Finished\");\n        const helper = new ReturnHelper();\n        const data = await collectData(jarInfo.version, datadir);\n        await cacheData(data.data);\n        return helper.mergeChain(data).succeed(data.data);\n    } else {\n        throw new Error(\n            \"Data Obtainer disabled in settings. To obtain data automatically, please enable it.\"\n        );\n    }\n}\n","import * as path from \"path\";\nimport { readJSONRaw } from \"../../../misc-functions/promisified-fs\";\n\nexport class MemoryFS {\n    private data: { [internalPath: string]: any };\n    /**\n     * The real filesystem path of the root folder\n     */\n    private readonly root: string;\n\n    public constructor(root: string, internal?: MemoryFS[\"data\"]) {\n        this.root = root;\n        this.data = internal || {};\n    }\n\n    public clear(): void {\n        this.data = {};\n    }\n\n    public get<T>(internalPath: string): T {\n        return this.data[internalPath];\n    }\n\n    public getRoot(): string {\n        return this.root;\n    }\n\n    public isEmpty(): boolean {\n        return Object.keys(this.data).length === 0;\n    }\n\n    public async load(realPath: string): Promise<void> {\n        if (path.extname(realPath) === \".json\") {\n            const data = await readJSONRaw(realPath);\n            this.setExternal(realPath, data);\n        }\n    }\n\n    public set(internalPath: string, data: any): void {\n        this.data[internalPath] = data;\n    }\n\n    public setExternal(realPath: string, data: any): void {\n        const internalPath = path\n            .relative(this.root, realPath)\n            .replace(new RegExp(`\\\\${path.win32.sep}`, \"g\"), path.posix.sep);\n        this.data[internalPath] = data;\n    }\n}\n","import * as path from \"path\";\nimport { walkDir } from \"../misc-functions/promisified-fs\";\nimport { MemoryFS } from \"../parsers/minecraft/nbt/doc-fs\";\nimport { NonCacheable } from \"./types\";\n\nexport const rootNodePath = require.resolve(\"mc-nbt-paths/root.json\");\nexport const modulePath = path.dirname(rootNodePath);\n\nexport async function setupFiles(dir: string = modulePath): Promise<MemoryFS> {\n    const docfs = new MemoryFS(dir);\n    const paths = await walkDir(dir);\n    const promises: Array<Promise<void>> = [];\n    for (const p of paths) {\n        promises.push(docfs.load(p));\n    }\n    await Promise.all(promises);\n    return docfs;\n}\n\nexport async function loadNonCached(): Promise<NonCacheable> {\n    const [nbtDocs] = await Promise.all([setupFiles()]);\n    return { nbt_docs: nbtDocs };\n}\n","import {\n    DidChangeWatchedFilesParams,\n    FileChangeType\n} from \"vscode-languageserver\";\n\nimport { extname, join } from \"path\";\nimport { MCMETAFILE } from \"../consts\";\nimport {\n    getKindAndNamespace,\n    namespacesEqual,\n    PackLocationSegments,\n    parseDataPath,\n    resourceTypes,\n    ReturnHelper\n} from \"../misc-functions\";\nimport { createExtensionFileError } from \"../misc-functions/file-errors\";\nimport { readJSON } from \"../misc-functions/promisified-fs\";\nimport { ReturnedInfo, ReturnSuccess } from \"../types\";\nimport { readCache } from \"./cache\";\nimport { getPacksInfo } from \"./datapack-resources\";\nimport { collectGlobalData } from \"./extractor\";\nimport { loadNonCached } from \"./noncached\";\nimport {\n    Datapack,\n    DataPackID,\n    GlobalData,\n    LocalData,\n    McmetaFile,\n    MinecraftResource,\n    WorldInfo\n} from \"./types\";\n\nexport class DataManager {\n    /**\n     * Create a datamanager using Dummy Data for running tests.\n     */\n    public static newWithData(\n        dummyGlobal?: DataManager[\"globalDataInternal\"],\n        dummyPacks?: DataManager[\"packDataComplete\"]\n    ): DataManager {\n        const manager = new DataManager();\n\n        manager.globalDataInternal = dummyGlobal || manager.globalDataInternal;\n        Object.assign(manager.packDataComplete, dummyPacks);\n        return manager;\n    }\n    //#region Data Management\n    private globalDataInternal: GlobalData = {} as GlobalData;\n\n    private readonly packDataComplete: { [root: string]: WorldInfo } = {};\n\n    private readonly packDataPromises: {\n        [root: string]: Promise<ReturnSuccess<WorldInfo>>;\n    } = {};\n\n    public get globalData(): GlobalData {\n        return this.globalDataInternal;\n    }\n    //#endregion\n    //#region Constructor\n    //#endregion\n    public getPackFolderData(\n        folder: PackLocationSegments | undefined\n    ): LocalData | undefined {\n        if (\n            !!folder &&\n            this.packDataComplete.hasOwnProperty(folder.packsFolder)\n        ) {\n            const info = this.packDataComplete[folder.packsFolder];\n\n            return { ...info, current: info.packnamesmap[folder.pack] };\n        }\n        return undefined;\n    }\n\n    public async handleChanges(\n        event: DidChangeWatchedFilesParams\n    ): Promise<ReturnedInfo<undefined>> {\n        const helper = new ReturnHelper(false);\n        const firsts = new Set<string>();\n        const promises = event.changes.map(async change => {\n            try {\n                const parsedPath = parseDataPath(change.uri);\n                if (parsedPath) {\n                    interface InlineData {\n                        data: WorldInfo;\n                        pack: Datapack;\n                        packID: DataPackID;\n                    }\n                    const getData = async (): Promise<InlineData> => {\n                        const first = await this.readPackFolderData(\n                            parsedPath.packsFolder\n                        );\n                        if (first) {\n                            firsts.add(parsedPath.packsFolder);\n                        }\n                        const data = this.getPackFolderData(parsedPath);\n                        if (!data) {\n                            throw new Error(\n                                \"Could not load data from datapacks folder\"\n                            );\n                        }\n                        const packID = data.packnamesmap[parsedPath.pack];\n                        const pack = data.packs[packID];\n                        return { data, pack, packID };\n                    };\n\n                    if (parsedPath.rest === MCMETAFILE) {\n                        const { pack } = await getData();\n                        if (!firsts.has(parsedPath.packsFolder)) {\n                            const res = await readJSON<McmetaFile>(change.uri);\n                            pack.mcmeta = helper.merge(res)\n                                ? res.data\n                                : undefined;\n                        }\n                    } else {\n                        const namespace = getKindAndNamespace(parsedPath.rest);\n                        if (namespace) {\n                            const { pack, packID, data } = await getData();\n                            if (!firsts.has(parsedPath.packsFolder)) {\n                                const shouldUpdateContents =\n                                    change.type === FileChangeType.Changed &&\n                                    resourceTypes[namespace.kind].mapFunction;\n                                let contents = pack.data[namespace.kind];\n                                if (\n                                    (change.type === FileChangeType.Deleted ||\n                                        shouldUpdateContents) &&\n                                    !!contents\n                                ) {\n                                    for (let i = 0; i < contents.length; i++) {\n                                        const element = contents[i];\n                                        if (\n                                            namespacesEqual(\n                                                element,\n                                                namespace.location\n                                            )\n                                        ) {\n                                            contents.splice(i, 1);\n                                            break;\n                                        }\n                                    }\n                                }\n                                if (\n                                    change.type === FileChangeType.Created ||\n                                    shouldUpdateContents\n                                ) {\n                                    if (!contents) {\n                                        contents = pack.data[\n                                            namespace.kind\n                                        ] = [];\n                                    }\n                                    const newResource: MinecraftResource = {\n                                        ...namespace.location,\n                                        pack: packID\n                                    };\n                                    const actual = extname(change.uri);\n                                    const expected =\n                                        resourceTypes[namespace.kind].extension;\n                                    if (actual === expected) {\n                                        const mapFunction =\n                                            // tslint:disable-next-line:no-unbound-method We control this function, so we know it won't use the this keyword.\n                                            resourceTypes[namespace.kind]\n                                                .mapFunction;\n                                        if (mapFunction) {\n                                            const result = await mapFunction(\n                                                newResource,\n                                                join(\n                                                    parsedPath.packsFolder,\n                                                    parsedPath.pack\n                                                ),\n                                                this.globalData,\n                                                data\n                                            );\n                                            if (helper.merge(result)) {\n                                                contents.push(result.data);\n                                            }\n                                        } else {\n                                            contents.push(newResource);\n                                        }\n                                    } else {\n                                        helper.addMisc(\n                                            createExtensionFileError(\n                                                change.uri,\n                                                expected,\n                                                actual\n                                            )\n                                        );\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            } catch (error) {\n                mcLangLog(\n                    `Change ${JSON.stringify(\n                        change\n                    )} could not be completed, due to '${JSON.stringify(\n                        error\n                    )}'`\n                );\n            }\n        });\n        await Promise.all(promises);\n        return helper.succeed();\n    }\n\n    public async loadGlobalData(): Promise<true | string> {\n        let version: string | undefined;\n        if (!!this.globalData.meta_info) {\n            version = this.globalData.meta_info.version;\n        }\n        try {\n            const helper = new ReturnHelper();\n            const data = await collectGlobalData(version);\n            const noncache = await loadNonCached();\n            helper.merge(data);\n            this.globalDataInternal = { ...data.data, ...noncache };\n            return true;\n        } catch (error) {\n            return `Error loading global data: ${error.stack ||\n                error.toString()}`;\n        }\n    }\n\n    public async readCache(): Promise<boolean> {\n        try {\n            const cache = await readCache();\n            const noncache = await loadNonCached();\n            this.globalDataInternal = { ...cache, ...noncache };\n            mcLangLog(\"Cache Successfully read\");\n            return true;\n        } catch (error) {\n            mcLangLog(\n                `Reading cache failed with error ${JSON.stringify(error)}`\n            );\n            return false;\n        }\n    }\n\n    /**\n     * @returns Whether this is the first request for this folder\n     */\n    public async readPackFolderData(\n        folder: string\n    ): Promise<ReturnedInfo<void>> {\n        const helper = new ReturnHelper();\n        if (!this.packDataPromises.hasOwnProperty(folder)) {\n            this.packDataPromises[folder] = getPacksInfo(\n                folder,\n                this.globalData\n            );\n            const result = await this.packDataPromises[folder];\n            this.packDataComplete[folder] = result.data;\n            helper.merge(result);\n            return helper.succeed();\n        } else {\n            await this.packDataPromises[folder];\n            return helper.fail();\n        }\n    }\n}\n","/**\n * merge_deep function adapted from:\n *\n * https://stackoverflow.com/a/34749873/8728461\n *\n * Originally, non-typescript code by: https://github.com/salakar\n */\n\ntype AnyDict = Dictionary<any>;\n\n/**\n * Simple object check.\n * @param item the item\n */\nexport function isObject(item: any): item is AnyDict {\n    return item && typeof item === \"object\" && !Array.isArray(item);\n}\n\n/**\n * Deep merge two objects.\n */\nexport function mergeDeep(target: AnyDict, ...sources: AnyDict[]): AnyDict {\n    if (!sources.length) {\n        return target;\n    }\n    const source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, { [key]: {} });\n                }\n                mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        }\n    }\n    return mergeDeep(target, ...sources);\n}\n","import { EventEmitter } from \"events\";\nimport { DiagnosticSeverity } from \"vscode-languageserver/lib/main\";\n\nimport { CommandErrorBuilder } from \"./brigadier/errors\";\nimport { StringReader } from \"./brigadier/string-reader\";\nimport { COMMENT_START, SPACE } from \"./consts\";\nimport { DataManager } from \"./data/manager\";\nimport {\n    CommandNode,\n    CommandNodePath,\n    GlobalData,\n    LocalData\n} from \"./data/types\";\nimport {\n    createParserInfo,\n    getNextNode,\n    isSuccessful,\n    ReturnHelper\n} from \"./misc-functions\";\nimport { getParser } from \"./parsers/get-parser\";\nimport {\n    CommandContext,\n    CommmandData,\n    FunctionInfo,\n    ParseNode,\n    ReturnedInfo,\n    StoredParseResult\n} from \"./types\";\n\nconst parseExceptions = {\n    Ambiguity: new CommandErrorBuilder(\n        \"parsing.command.ambiguous\",\n        \"Command text is possibly ambiguous\",\n        DiagnosticSeverity.Information\n    ),\n    NoSuccesses: new CommandErrorBuilder(\n        \"command.parsing.matchless\",\n        \"No nodes which matched '%s' found\"\n    ),\n    NotRunnable: new CommandErrorBuilder(\n        \"parsing.command.executable\",\n        \"The command '%s' cannot be run.\",\n        DiagnosticSeverity.Warning\n    )\n};\n\nexport function parseCommand(\n    text: string,\n    globalData: GlobalData,\n    localData: LocalData | undefined\n): StoredParseResult | void {\n    if (text.length === 0 || text.startsWith(COMMENT_START)) {\n        return undefined;\n    }\n    const reader = new StringReader(text);\n    const data: CommmandData = { globalData, localData };\n    const startingcontext: CommandContext = {};\n    const recurse = parsechildren(\n        reader,\n        globalData.commands as any,\n        [],\n        data,\n        startingcontext\n    );\n    const nodes: ParseNode[] = [];\n    if (isSuccessful(recurse)) {\n        nodes.push(...recurse.data);\n    }\n    return { actions: recurse.actions, nodes, errors: recurse.errors };\n}\n\nfunction parsechildren(\n    reader: StringReader,\n    node: CommandNode,\n    path: CommandNodePath,\n    data: CommmandData,\n    context: CommandContext\n): ReturnedInfo<ParseNode[]> {\n    const parent = getNextNode(node, path, data.globalData.commands);\n    const helper = new ReturnHelper();\n    const children = parent.node.children;\n    if (children) {\n        const nodes: ParseNode[] = [];\n        const start = reader.cursor;\n        let successCount = 0;\n        let min: number = reader.getTotalLength();\n        for (const childKey of Object.keys(children)) {\n            const child = children[childKey];\n            const childpath = [...parent.path, childKey];\n            const result = parseAgainstNode(\n                reader,\n                child,\n                childpath,\n                data,\n                context\n            );\n            if (helper.merge(result)) {\n                const newNode: ParseNode = {\n                    context,\n                    final: true,\n                    high: reader.cursor,\n                    low: start,\n                    path: childpath\n                };\n                const childdata = result.data;\n                function checkRead(): boolean {\n                    if (reader.canRead()) {\n                        return true;\n                    } else {\n                        if (!childdata.node.executable) {\n                            helper.addErrors(\n                                parseExceptions.NotRunnable.create(\n                                    0,\n                                    reader.cursor,\n                                    reader.string\n                                )\n                            );\n                        }\n                        return false;\n                    }\n                }\n                if (checkRead()) {\n                    if (reader.peek() === SPACE) {\n                        successCount++;\n                        reader.skip();\n                        if (checkRead()) {\n                            const newContext = childdata.newContext\n                                ? childdata.newContext\n                                : context;\n                            const recurse = parsechildren(\n                                reader,\n                                childdata.node,\n                                childpath,\n                                data,\n                                newContext\n                            );\n                            if (helper.merge(recurse)) {\n                                min = Math.min(min, reader.cursor);\n                                nodes.push(...recurse.data);\n                                newNode.final = false;\n                            }\n                        }\n                        nodes.push(newNode);\n                    }\n                } else {\n                    successCount++;\n                    nodes.push(newNode);\n                }\n            }\n            reader.cursor = start;\n        }\n        if (successCount === 0) {\n            return helper.fail(\n                parseExceptions.NoSuccesses.create(\n                    reader.cursor,\n                    reader.getTotalLength(),\n                    reader.getRemaining()\n                )\n            );\n        }\n        if (successCount > 1) {\n            helper.addErrors(parseExceptions.Ambiguity.create(start, min));\n        }\n        return helper.succeed(nodes);\n    } else {\n        if (!(parent.node as CommandNode).executable) {\n            mcLangLog(\n                `Malformed tree at path ${JSON.stringify(\n                    path\n                )}. No children and not executable`\n            );\n        }\n        return helper.fail();\n    }\n}\n\ninterface NodeParseSuccess {\n    max: number;\n    newContext?: CommandContext;\n    node: CommandNode;\n}\n\nfunction parseAgainstNode(\n    reader: StringReader,\n    node: CommandNode,\n    path: CommandNodePath,\n    data: CommmandData,\n    context: CommandContext\n): ReturnedInfo<NodeParseSuccess> {\n    const parser = getParser(node);\n    const helper = new ReturnHelper(false);\n    if (!!parser) {\n        const result = parser.parse(\n            reader,\n            createParserInfo(node, data, path, context, false)\n        );\n        if (!!result) {\n            if (helper.merge(result)) {\n                const newContext = { ...context, ...result.data };\n                return helper.succeed<NodeParseSuccess>({\n                    max: reader.cursor,\n                    newContext,\n                    node\n                });\n            } else {\n                return helper.fail();\n            }\n        } else {\n            return helper.succeed<NodeParseSuccess>({\n                max: reader.cursor,\n                node\n            });\n        }\n    } else {\n        return helper.fail();\n    }\n}\n\nexport function parseLines(\n    document: FunctionInfo,\n    data: DataManager,\n    emitter: EventEmitter,\n    documentUri: string,\n    lines: number[]\n): void {\n    for (const lineNo of lines) {\n        const line = document.lines[lineNo];\n        const packsInfo = data.getPackFolderData(document.pack_segments);\n        let localData: LocalData | undefined;\n        if (packsInfo && document.pack_segments) {\n            localData = {\n                ...packsInfo,\n                current: packsInfo.packnamesmap[document.pack_segments.pack]\n            };\n        }\n        const result = parseCommand(line.text, data.globalData, localData);\n        line.parseInfo = result ? result : false;\n        line.actions = undefined;\n        line.nodes = undefined;\n        emitter.emit(`${documentUri}:${lineNo}`);\n    }\n}\n\nexport function parseDocument(\n    document: FunctionInfo,\n    data: DataManager,\n    emitter: EventEmitter,\n    documentUri: string\n): void {\n    const lines = document.lines.map((_, i) => i);\n    parseLines(document, data, emitter, documentUri, lines);\n}\n","import { EventEmitter } from \"events\";\nimport { promisify } from \"util\";\nimport { shim } from \"util.promisify\";\nshim();\nimport { Interval, IntervalTree } from \"node-interval-tree\";\nimport {\n    CompletionList,\n    createConnection,\n    Diagnostic,\n    DidChangeWatchedFilesNotification,\n    Hover,\n    IPCMessageReader,\n    IPCMessageWriter,\n    Location,\n    Position,\n    TextDocumentPositionParams,\n    TextDocumentSyncKind\n} from \"vscode-languageserver/lib/main\";\nimport Uri from \"vscode-uri\";\n\nimport { computeCompletions } from \"./completions\";\nimport { readSecurity } from \"./data/cache\";\nimport { DataManager } from \"./data/manager\";\nimport { CommandNode } from \"./data/types\";\nimport {\n    actOnSecurity,\n    commandErrorToDiagnostic,\n    followPath,\n    isSuccessful,\n    parseDataPath,\n    runChanges,\n    securityIssues,\n    setup_logging,\n    splitLines\n} from \"./misc-functions\";\nimport { mergeDeep } from \"./misc-functions/third_party/merge-deep\";\nimport { parseDocument, parseLines } from \"./parse\";\nimport {\n    CommandLine,\n    FunctionInfo,\n    MiscInfo,\n    ParseNode,\n    SubAction,\n    WorkspaceSecurity\n} from \"./types\";\n\nconst connection = createConnection(\n    new IPCMessageReader(process),\n    new IPCMessageWriter(process)\n);\nconnection.listen();\n\n//#region Data Storage\nlet manager: DataManager;\nconst documents: Map<string, FunctionInfo> = new Map();\nconst fileErrors = new Map<string, { [group: string]: string }>();\n// Avoids race condition between parsing after change and getting completions\nconst parseCompletionEvents = new EventEmitter();\nlet security: Promise<WorkspaceSecurity>;\n\nlet started = false;\nlet starting = false;\n//#endregion\n\n// For Server Startup logic, see: https://github.com/Microsoft/language-server-protocol/issues/246\nconnection.onInitialize(() => {\n    setup_logging(connection);\n\n    manager = new DataManager();\n    return {\n        capabilities: {\n            completionProvider: {\n                resolveProvider: false\n            },\n            definitionProvider: true,\n            hoverProvider: true,\n            textDocumentSync: {\n                change: TextDocumentSyncKind.Incremental,\n                openClose: true\n            }\n        }\n    };\n});\n\n// Handles the starting of the server\nconnection.onDidChangeConfiguration(async params => {\n    let startinglocal = false;\n    if (!starting) {\n        starting = true;\n        startinglocal = true;\n        global.mcLangSettings = {} as McFunctionSettings;\n        security = readSecurity();\n    }\n    await ensureSecure(params.settings);\n    const reparseall = () => {\n        for (const [uri, doc] of documents.entries()) {\n            loadData(uri);\n            parseDocument(doc, manager, parseCompletionEvents, uri);\n            sendDiagnostics(uri);\n        }\n    };\n    if (startinglocal) {\n        const cacheread = await manager.readCache();\n        if (cacheread) {\n            started = true;\n            reparseall();\n        }\n        const getDataResult = await manager.loadGlobalData();\n        if (getDataResult === true) {\n            started = true;\n            reparseall();\n        } else if (!cacheread) {\n            connection.sendNotification(\"mcfunction/shutdown\", getDataResult);\n            return;\n        }\n    }\n});\n\nasync function ensureSecure(settings: {\n    mcfunction: Partial<McFunctionSettings>;\n}): Promise<void> {\n    const secure = await security;\n    const newsettings = mergeDeep(\n        {},\n        global.mcLangSettings,\n        settings.mcfunction\n    ) as McFunctionSettings;\n\n    try {\n        const issues = securityIssues(newsettings, secure);\n        if (issues.length > 0) {\n            // Failed security checkup challenge\n            const safeToContinue = await actOnSecurity(\n                issues,\n                connection,\n                secure\n            );\n            if (!safeToContinue) {\n                connection.sendNotification(\n                    \"mcfunction/shutdown\",\n                    `Shutting down because of insecure settings: '${issues.join(\n                        \"', '\"\n                    )}'`\n                );\n                return;\n            }\n        }\n    } catch (error) {\n        connection.sendNotification(\n            \"mcfunction/shutdown\",\n            `Shutting down because of insecure settings: '${error}'`\n        );\n        return;\n    }\n    global.mcLangSettings = newsettings;\n}\n\nfunction loadData(uri: string): void {\n    const doc = documents.get(uri);\n    if (doc && doc.pack_segments) {\n        const segments = doc.pack_segments;\n        manager\n            .readPackFolderData(segments.packsFolder)\n            .then(first => {\n                if (isSuccessful(first)) {\n                    connection.client.register(\n                        DidChangeWatchedFilesNotification.type,\n                        {\n                            watchers: [\n                                {\n                                    globPattern: `${segments.packsFolder}/**/*`\n                                }\n                            ]\n                        }\n                    );\n                }\n                parseDocument(doc, manager, parseCompletionEvents, uri);\n                sendDiagnostics(uri);\n                handleMiscInfo(first.misc);\n            })\n            .catch(e => {\n                mcLangLog(`Getting pack folder data failed for reason: '${e}'`);\n            });\n    }\n}\n\nconnection.onDidOpenTextDocument(params => {\n    const uri = params.textDocument.uri;\n    const uriClass = Uri.parse(uri);\n    const parsethis = () => {\n        // Sanity check\n        if (started && documents.has(uri)) {\n            parseDocument(\n                documents.get(uri) as FunctionInfo,\n                manager,\n                parseCompletionEvents,\n                uri\n            );\n            sendDiagnostics(uri);\n        }\n    };\n    if (uriClass.scheme === \"file\") {\n        const fsPath = uriClass.fsPath;\n        const dataPackSegments = parseDataPath(fsPath);\n        documents.set(uri, {\n            lines: splitLines(params.textDocument.text),\n            pack_segments: dataPackSegments\n        });\n        if (started) {\n            loadData(uri);\n        }\n        parsethis();\n    } else {\n        documents.set(uri, {\n            lines: splitLines(params.textDocument.text),\n            pack_segments: undefined\n        });\n    }\n    parsethis();\n});\n\nconnection.onDidChangeTextDocument(params => {\n    const uri = params.textDocument.uri;\n    const document = documents.get(uri) as FunctionInfo;\n    const changedlines = runChanges(params, document);\n    if (started) {\n        parseLines(document, manager, parseCompletionEvents, uri, changedlines);\n        sendDiagnostics(uri);\n    }\n});\n\nfunction sendDiagnostics(uri: string): void {\n    const doc = documents.get(uri) as FunctionInfo;\n    const diagnostics: Diagnostic[] = [];\n    for (let line = 0; line < doc.lines.length; line++) {\n        const lineContent = doc.lines[line];\n        if (!!lineContent.parseInfo && !!lineContent.parseInfo.errors) {\n            diagnostics.push(\n                ...lineContent.parseInfo.errors.map(error =>\n                    commandErrorToDiagnostic(error, line)\n                )\n            );\n        }\n    }\n    connection.sendDiagnostics({ uri, diagnostics });\n}\n\nconnection.onDidCloseTextDocument(params => {\n    // Clear diagnostics - might not be needed\n    connection.sendDiagnostics({\n        diagnostics: [],\n        uri: params.textDocument.uri\n    });\n    documents.delete(params.textDocument.uri);\n});\n\nconnection.onDidChangeWatchedFiles(async e => {\n    const result = await manager.handleChanges(e);\n    handleMiscInfo(result.misc);\n});\n\nfunction handleMiscInfo(miscInfos: MiscInfo[]): void {\n    const changedFileErrors = new Set<string>();\n    for (const misc of miscInfos) {\n        if (misc.kind === \"FileError\") {\n            changedFileErrors.add(misc.filePath);\n            const value = fileErrors.get(misc.filePath);\n            if (value) {\n                fileErrors.set(misc.filePath, {\n                    ...value,\n                    group: misc.message\n                });\n            } else {\n                fileErrors.set(misc.filePath, {\n                    group: misc.message\n                });\n            }\n        }\n        if (misc.kind === \"ClearError\") {\n            changedFileErrors.add(misc.filePath);\n            const group = misc.group;\n            if (group) {\n                const value = fileErrors.get(misc.filePath);\n                if (value) {\n                    const { group: _, ...rest } = value;\n                    fileErrors.set(misc.filePath, { ...rest });\n                }\n            } else {\n                fileErrors.delete(misc.filePath);\n            }\n        }\n    }\n    for (const uri of changedFileErrors) {\n        const value = fileErrors.get(uri);\n        if (value) {\n            const diagnostics: Diagnostic[] = [];\n            for (const group of Object.keys(value)) {\n                diagnostics.push({\n                    message: value[group],\n                    range: {\n                        end: { line: 0, character: 0 },\n                        start: { line: 0, character: 0 }\n                    }\n                });\n            }\n            connection.sendDiagnostics({ uri, diagnostics });\n        }\n    }\n}\n\nconnection.onCompletion(params => {\n    const doc = documents.get(params.textDocument.uri) as FunctionInfo;\n    const line = doc.lines[params.position.line];\n    const computeCompletionsLocal = () =>\n        computeCompletions(\n            params.position.line,\n            params.position.character,\n            doc,\n            manager\n        );\n    if (!started) {\n        return [];\n    }\n    if (line.hasOwnProperty(\"parseInfo\")) {\n        return computeCompletionsLocal();\n    } else {\n        return promisify(cb =>\n            parseCompletionEvents.once(\n                `${params.textDocument.uri}:${params.position.line}`,\n                cb\n            )\n        )().then<CompletionList>(computeCompletionsLocal);\n    }\n});\n\nconnection.onHover(params => {\n    if (started) {\n        const docLine = getLine(params);\n        if (docLine) {\n            function computeIntervalHovers<T extends Interval>(\n                intervals: T[],\n                commandLine: CommandLine,\n                line: number,\n                map: (intervals: T[]) => Hover[\"contents\"]\n            ): Hover {\n                const end: Position = {\n                    character: intervals.reduce(\n                        (acc, v) => Math.max(acc, v.high),\n                        0\n                    ),\n                    line\n                };\n                const start: Position = {\n                    character: intervals.reduce(\n                        (acc, v) => Math.min(acc, v.low),\n                        commandLine.text.length\n                    ),\n                    line\n                };\n                return {\n                    contents: map(intervals),\n                    range: { start, end }\n                };\n            }\n            const hovers = getActionsOfKind(docLine, params.position, \"hover\");\n            if (hovers.length > 0) {\n                return computeIntervalHovers(\n                    hovers,\n                    docLine,\n                    params.position.line,\n                    i => i.map(v => v.data)\n                );\n            } else {\n                const tree = getNodeTree(docLine);\n                if (tree) {\n                    const matching = tree.search(\n                        params.position.character,\n                        params.position.character\n                    );\n                    if (matching.length > 0) {\n                        return computeIntervalHovers(\n                            matching,\n                            docLine,\n                            params.position.line,\n                            i =>\n                                i.map<string>(node => {\n                                    const data = followPath(\n                                        manager.globalData.commands,\n                                        node.path\n                                    ) as CommandNode;\n                                    return `${\n                                        data.type === \"literal\"\n                                            ? \"literal\"\n                                            : `\\`${data.parser}\\` parser`\n                                    } on path '${node.path.join(\", \")}'`;\n                                })\n                        );\n                    }\n                }\n            }\n        }\n    }\n    return undefined;\n});\n\nconnection.onDefinition(params => {\n    const docLine = getLine(params);\n    if (docLine) {\n        const actions = getActionsOfKind(docLine, params.position, \"source\");\n        const start: Position = { line: 0, character: 0 };\n        return actions.map<Location>(a => ({\n            range: { start, end: start },\n            uri: Uri.file(a.data as any).toString()\n        }));\n    }\n    return [];\n});\n\nfunction getLine(params: TextDocumentPositionParams): CommandLine | undefined {\n    const doc = documents.get(params.textDocument.uri);\n    if (doc) {\n        const line = doc.lines[params.position.line];\n\n        return line;\n    }\n    return undefined;\n}\n\nfunction getActionsOfKind(\n    line: CommandLine,\n    position: Position,\n    kind: SubAction[\"type\"]\n): SubAction[] {\n    if (line.parseInfo) {\n        if (!line.actions) {\n            line.actions = new IntervalTree();\n            for (const action of line.parseInfo.actions) {\n                line.actions.insert(action);\n            }\n        }\n        const tree = line.actions;\n        return tree\n            .search(position.character, position.character)\n            .filter(v => v.type === kind);\n    }\n    return [];\n}\n\nfunction getNodeTree(line: CommandLine): IntervalTree<ParseNode> | undefined {\n    if (line.nodes) {\n        return line.nodes;\n    }\n    if (line.parseInfo) {\n        const tree = new IntervalTree<ParseNode>();\n        for (const node of line.parseInfo.nodes) {\n            tree.insert(node);\n        }\n        return tree;\n    }\n    return undefined;\n}\n"]}