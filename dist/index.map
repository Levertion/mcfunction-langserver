{"version":3,"sources":["misc-functions/context.ts","misc-functions/creators.ts","consts.ts","misc-functions/namespace.ts","misc-functions/group-resources.ts","misc-functions/file-errors.ts","brigadier/errors.ts","types.ts","misc-functions/return-helper.ts","misc-functions/promisified-fs.ts","misc-functions/third_party/typed-keys.ts","misc-functions/datapack-folder.ts","misc-functions/translation.ts","misc-functions/lsp-conversions.ts","misc-functions/node-tree.ts","data/cache.ts","misc-functions/security.ts","misc-functions/setup.ts","colors.ts","data/lists/statics.ts","misc-functions/parsing/namespace.ts","misc-functions/parsing/nmsp-tag.ts","misc-functions/index.ts","brigadier/string-reader.ts","parsers/brigadier/bool.ts","parsers/brigadier/double.ts","parsers/brigadier/float.ts","parsers/brigadier/integer.ts","parsers/brigadier/string.ts","parsers/brigadier/index.ts","parsers/literal.ts","test/blanks.ts","parsers/minecraft/nbt/tag/lists.ts","parsers/minecraft/nbt/util/doc-walker-util.ts","parsers/minecraft/nbt/tag/nbt-tag.ts","parsers/minecraft/nbt/tag/string-tag.ts","parsers/minecraft/nbt/doc-walker-func.ts","parsers/minecraft/nbt/util/nbt-util.ts","parsers/minecraft/nbt/tag/compound-tag.ts","parsers/minecraft/nbt/tag/list-tag.ts","parsers/minecraft/nbt/tag/number.ts","parsers/minecraft/nbt/tag/typed-list-tag.ts","parsers/minecraft/nbt/tag-parser.ts","parsers/minecraft/nbt/util/array-reader.ts","parsers/minecraft/nbt/walker.ts","parsers/minecraft/nbt/nbt.ts","parsers/minecraft/block.ts","parsers/minecraft/component.ts","parsers/minecraft/coordinates.ts","parsers/minecraft/namespace-list.ts","parsers/minecraft/range.ts","parsers/minecraft/entity.ts","parsers/minecraft/item.ts","data/lists/item-slot.ts","data/lists/scoreboard-slot.ts","parsers/minecraft/lists.ts","parsers/minecraft/message.ts","parsers/minecraft/nbt-path.ts","parsers/minecraft/resources.ts","data/lists/criteria.ts","parsers/minecraft/scoreboard.ts","parsers/minecraft/swizzle.ts","parsers/minecraft/time.ts","parsers/get-parser.ts","completions.ts","actions.ts","data/extractor/mapfunctions.ts","data/nbt/buffer-stream.ts","data/nbt/parser.ts","data/nbt/nbt-cache.ts","data/datapack-resources.ts","data/extractor/collect-data.ts","data/extractor/download.ts","data/extractor/extract-data.ts","data/extractor/index.ts","data/noncached.ts","data/manager.ts","misc-functions/third_party/merge-deep.ts","parse.ts","index.ts"],"names":[],"mappings":"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","file":"index.map","sourceRoot":"..\\src","sourcesContent":["import { CommandNodePath } from \"../data/types\";\r\n\r\nexport interface ContextPath<T> {\r\n    data: T;\r\n    path: CommandNodePath;\r\n}\r\n\r\nexport function resolvePaths<T>(\r\n    paths: Array<ContextPath<T>>,\r\n    argPath: CommandNodePath\r\n): T | undefined {\r\n    for (const path of paths) {\r\n        if (stringArrayEqual(argPath, path.path)) {\r\n            return path.data;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function stringArrayEqual(arr1: string[], arr2: string[]): boolean {\r\n    return arr1.length === arr2.length && arr1.every((v, i) => v === arr2[i]);\r\n}\r\n\r\nexport function startPaths<T>(\r\n    paths: Array<ContextPath<T>>,\r\n    argpath: CommandNodePath\r\n): T | undefined {\r\n    let best: [number, T?] = [0, undefined];\r\n    for (const option of paths) {\r\n        if (\r\n            option.path.length > best[0] &&\r\n            option.path.length <= argpath.length &&\r\n            option.path.every((v, i) => v === argpath[i])\r\n        ) {\r\n            best = [option.path.length, option.data];\r\n        }\r\n    }\r\n    return best[1];\r\n}\r\n","import { CommandNode, CommandNodePath } from \"../data/types\";\r\nimport { CommandContext, CommandData, CommandLine, ParserInfo } from \"../types\";\r\n\r\n/**\r\n * Build parser info from the data required\r\n */\r\nexport function createParserInfo(\r\n    node: CommandNode,\r\n    data: CommandData,\r\n    path: CommandNodePath,\r\n    context: CommandContext,\r\n    suggesting: boolean\r\n): ParserInfo {\r\n    const result: ParserInfo = {\r\n        context,\r\n        data,\r\n        node_properties: node.properties || {},\r\n        path,\r\n        suggesting\r\n    };\r\n    return result;\r\n}\r\n\r\n/**\r\n * Convert a string into CommandLines based on newline characters\r\n */\r\nexport function splitLines(text: string): CommandLine[] {\r\n    return createCommandLines(text.split(/\\r?\\n/));\r\n}\r\n\r\n/**\r\n * Convert the given string array into a blank CommandLine Array\r\n */\r\nexport function createCommandLines(lines: string[]): CommandLine[] {\r\n    const result: CommandLine[] = [];\r\n    for (const line of lines) {\r\n        result.push({ text: line });\r\n    }\r\n    return result;\r\n}\r\n","export const COMMENT_START = \"#\";\r\nexport const SPACE = \" \";\r\n\r\n// Namespaces\r\nexport const DEFAULT_NAMESPACE = \"minecraft\";\r\nexport const NAMESPACE = \":\";\r\nexport const DATAFOLDER = \"data\";\r\nexport const SLASH = \"/\";\r\nexport const SLASHREGEX = /\\//g;\r\nexport const SLASHREPLACEREGEX = /\\\\/g;\r\nexport const MCMETAFILE = \"pack.mcmeta\";\r\n\r\n// Blocks\r\nexport const TAG_START = \"#\";\r\n\r\n// Misc\r\n\r\nexport const JAVAMAXINT = 2147483647;\r\nexport const JAVAMININT = -2147483648;\r\n\r\nexport const NONWHITESPACE = /\\S/;\r\n","import { DEFAULT_NAMESPACE, NAMESPACE } from \"../consts\";\r\nimport { NamespacedName } from \"../data/types\";\r\n\r\nexport function namespacesEqual(\r\n    first: NamespacedName,\r\n    second: NamespacedName\r\n): boolean {\r\n    return namesEqual(first, second) && first.path === second.path;\r\n}\r\n\r\nexport function namesEqual(\r\n    first: NamespacedName,\r\n    second: NamespacedName\r\n): boolean {\r\n    return (\r\n        first.namespace === second.namespace ||\r\n        (isNamespaceDefault(first) && isNamespaceDefault(second))\r\n    );\r\n}\r\n\r\nexport function isNamespaceDefault(name: NamespacedName): boolean {\r\n    return name.namespace === undefined || name.namespace === DEFAULT_NAMESPACE;\r\n}\r\n\r\nexport function stringifyNamespace(namespace: NamespacedName): string {\r\n    return (\r\n        (namespace.namespace ? namespace.namespace : DEFAULT_NAMESPACE) +\r\n        NAMESPACE +\r\n        namespace.path\r\n    );\r\n}\r\n\r\nexport function convertToNamespace(\r\n    input: string,\r\n    splitChar: string = NAMESPACE\r\n): NamespacedName {\r\n    const index = input.indexOf(splitChar);\r\n    if (index >= 0) {\r\n        const pathContents = input.substring(\r\n            index + splitChar.length,\r\n            input.length\r\n        );\r\n        // Path contents should not have a : in the contents, however this is to be checked higher up.\r\n        // This simplifies using the parsed result when parsing options\r\n\r\n        // Related: https://bugs.mojang.com/browse/MC-91245 (Fixed)\r\n        if (index >= 1) {\r\n            return { namespace: input.substring(0, index), path: pathContents };\r\n        } else {\r\n            return { path: pathContents };\r\n        }\r\n    } else {\r\n        return { path: input };\r\n    }\r\n}\r\n","import {\r\n    GlobalData,\r\n    MinecraftResource,\r\n    NamespacedName,\r\n    Resources,\r\n    WorldInfo\r\n} from \"../data/types\";\r\nimport { CommandData } from \"../types\";\r\nimport { namespacesEqual } from \"./namespace\";\r\n\r\nexport function getResourcesofType<\r\n    T extends MinecraftResource = MinecraftResource\r\n>(resources: CommandData, type: keyof Resources): T[] {\r\n    return getResourcesSplit<T>(\r\n        type,\r\n        resources.globalData,\r\n        resources.localData\r\n    );\r\n}\r\n\r\nexport function getResourcesSplit<\r\n    T extends MinecraftResource = MinecraftResource\r\n>(type: keyof Resources, globalData: GlobalData, packsInfo?: WorldInfo): T[] {\r\n    const results: MinecraftResource[] = [];\r\n    const globalResources = globalData.resources[type];\r\n    if (!!globalResources) {\r\n        results.push(...globalResources);\r\n    }\r\n    if (packsInfo) {\r\n        for (const packId in packsInfo.packs) {\r\n            if (packsInfo.packs.hasOwnProperty(packId)) {\r\n                const pack = packsInfo.packs[packId];\r\n                if (pack.data.hasOwnProperty(type)) {\r\n                    const data = pack.data[type];\r\n                    if (!!data) {\r\n                        results.push(...data);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return results as T[];\r\n}\r\n\r\nexport function getMatching<T extends NamespacedName>(\r\n    resources: T[],\r\n    value: T\r\n): T[] {\r\n    const results: T[] = [];\r\n    for (const resource of resources) {\r\n        if (namespacesEqual(resource, value)) {\r\n            results.push(resource);\r\n        }\r\n    }\r\n    return results;\r\n}\r\n","import { MiscInfo } from \"../types\";\r\n\r\nexport function createExtensionFileError(\r\n    filePath: string,\r\n    expected: string,\r\n    actual: string\r\n): MiscInfo {\r\n    return {\r\n        filePath,\r\n        group: \"extension\",\r\n        kind: \"FileError\",\r\n        message: `File has incorrect extension: Expected ${expected}, got ${actual}.`\r\n    };\r\n}\r\n\r\nexport function createJSONFileError(filePath: string, error: any): MiscInfo {\r\n    return {\r\n        filePath,\r\n        group: \"json\",\r\n        kind: \"FileError\",\r\n        message: `JSON parsing failed: '${error}'`\r\n    };\r\n}\r\n\r\nexport function createFileClear(filePath: string, group?: string): MiscInfo {\r\n    return { kind: \"ClearError\", filePath, group };\r\n}\r\n","import { DiagnosticSeverity } from \"vscode-languageserver/lib/main\";\r\nimport { MCFormat } from \"../misc-functions\";\r\nimport { LineRange } from \"../types\";\r\n\r\n/**\r\n * A blank command error\r\n */\r\nexport interface BlankCommandError {\r\n    /**\r\n     * The code of this error, usable for translation?\r\n     */\r\n    code: string;\r\n    /**\r\n     * The severity of this error.\r\n     */\r\n    severity: DiagnosticSeverity;\r\n    /**\r\n     * The substitutions to insert into the error text.\r\n     */\r\n    substitutions?: string[];\r\n    /**\r\n     * The cached text of this error.\r\n     */\r\n    text: string;\r\n}\r\n\r\n/**\r\n * An error inside a command.\r\n */\r\nexport interface CommandError extends BlankCommandError {\r\n    /**\r\n     * The range of this error.\r\n     */\r\n    range: LineRange;\r\n}\r\n\r\n/**\r\n * Helper class to create command errors\r\n */\r\nexport class CommandErrorBuilder {\r\n    private readonly code: string;\r\n    private readonly default: string;\r\n    private readonly severity: DiagnosticSeverity;\r\n\r\n    public constructor(\r\n        code: string,\r\n        explanation: string,\r\n        severity: DiagnosticSeverity = DiagnosticSeverity.Error\r\n    ) {\r\n        this.code = code;\r\n        this.default = explanation;\r\n        this.severity = severity;\r\n    }\r\n\r\n    public create(\r\n        start: number,\r\n        end: number,\r\n        ...substitutions: string[]\r\n    ): CommandError {\r\n        const diagnosis: CommandError = Object.assign(\r\n            this.createBlank(...substitutions),\r\n            { range: { start, end } }\r\n        );\r\n        return diagnosis;\r\n    }\r\n\r\n    public createBlank(...substitutions: string[]): BlankCommandError {\r\n        return {\r\n            code: this.code,\r\n            severity: this.severity,\r\n            substitutions,\r\n            text: MCFormat(this.default, ...substitutions)\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Transform `err` into a real command error.\r\n * MODIFIES `err`\r\n * @param err The error to transform\r\n * @param start The starting location in the line of the error\r\n * @param end The end position\r\n */\r\nexport function fillBlankError(\r\n    err: BlankCommandError,\r\n    start: number,\r\n    end: number\r\n): CommandError {\r\n    return { ...err, range: { start, end } };\r\n}\r\n","import { DataInterval, Interval, IntervalTree } from \"node-interval-tree\";\r\nimport { JSONDocument } from \"vscode-json-languageservice\";\r\nimport {\r\n    CompletionItemKind,\r\n    InsertTextFormat,\r\n    MarkedString,\r\n    MarkupContent,\r\n    TextDocument\r\n} from \"vscode-languageserver/lib/main\";\r\nimport { BlankCommandError, CommandError } from \"./brigadier/errors\";\r\nimport { StringReader } from \"./brigadier/string-reader\";\r\nimport { CommandNodePath, GlobalData, LocalData } from \"./data/types\";\r\nimport { PackLocationSegments } from \"./misc-functions\";\r\nimport { TypedNode } from \"./parsers/minecraft/nbt/util/doc-walker-util\";\r\n\r\n//#region Document\r\nexport interface FunctionInfo {\r\n    lines: CommandLine[];\r\n    /**\r\n     * The filesystem path to the `datapacks` folder this is part of - NOT the folder of the single datapack\r\n     */\r\n    pack_segments: PackLocationSegments | undefined;\r\n}\r\n\r\nexport interface WorkspaceSecurity {\r\n    // CustomParsers?: boolean;\r\n    JarPath?: boolean;\r\n    JavaPath?: boolean;\r\n}\r\n\r\nexport interface CommandLine {\r\n    /**\r\n     * A cache of the tree of actions\r\n     */\r\n    actions?: IntervalTree<SubAction>;\r\n    nodes?: IntervalTree<ParseNode>;\r\n    parseInfo?: StoredParseResult | false;\r\n    text: string;\r\n}\r\n//#endregion\r\n\r\n//#region Interaction with parsers\r\nexport interface ParserInfo {\r\n    /**\r\n     * The immutable context\r\n     */\r\n    context: CommandContext;\r\n    data: CommandData;\r\n    node_properties: Dictionary<any>;\r\n    path: CommandNodePath; // Will be > 0\r\n    /**\r\n     * When suggesting, the end of the reader's string will be the cursor position\r\n     */\r\n    suggesting: boolean;\r\n}\r\n\r\nexport interface CommandData {\r\n    globalData: GlobalData;\r\n    /**\r\n     * Data from datapacks\r\n     */\r\n    localData?: LocalData;\r\n}\r\n\r\nexport interface Suggestion {\r\n    description?: string | MarkupContent;\r\n    insertTextFormat?: InsertTextFormat;\r\n    kind?: CompletionItemKind;\r\n    label?: string;\r\n    /**\r\n     * The start from where value should be replaced. 0 indexed character gaps.\r\n     * E.g. `@e[na` with the suggestion `{value:\"name=\",start:3}`\r\n     * would make `@e[name=` when accepted.\r\n     */\r\n    start: number;\r\n    text: string;\r\n}\r\n\r\nexport type SuggestResult = Suggestion | string;\r\n\r\n/**\r\n * A change to the shared context\r\n */\r\nexport type ContextChange = Partial<CommandContext> | undefined;\r\n\r\nexport interface CommandContext {\r\n    // [key: string]: any;\r\n    /**\r\n     * What we know about the executor of the commmand.\r\n     *\r\n     * TODO: Possibly allow specifying this within a function as a sort of shebang,\r\n     * then validate all function calls with this requirement\r\n     */\r\n    executor?: EntityInfo;\r\n    /**\r\n     * The result from an nbt path\r\n     */\r\n    nbt_path?: TypedNode[\"type\"];\r\n    /**\r\n     * A different entity which is important during parsing\r\n     */\r\n    otherEntity?: EntityInfo;\r\n}\r\n\r\nexport interface EntityInfo {\r\n    /**\r\n     * The possible entity types of this entity\r\n     */\r\n    ids?: string[];\r\n}\r\n\r\nexport interface Parser {\r\n    /**\r\n     * The default suggestion kind for suggestions from this parser\r\n     */\r\n    kind?: CompletionItemKind;\r\n    /**\r\n     * Parse the argument as described in NodeProperties against this parser in the reader.\r\n     * Gets both suggestions and success\r\n     */\r\n    parse(\r\n        reader: StringReader,\r\n        properties: ParserInfo\r\n    ): ReturnedInfo<ContextChange | undefined>;\r\n}\r\n\r\n//#endregion\r\n//#region ParsingData\r\nexport interface ParseNode extends Interval {\r\n    context: CommandContext;\r\n    final?: CommandContext;\r\n    path: CommandNodePath;\r\n}\r\n\r\nexport interface StoredParseResult {\r\n    actions: SubAction[];\r\n    errors: CommandError[];\r\n    nodes: ParseNode[];\r\n}\r\n\r\ninterface SubActionBase<U extends string, T> extends DataInterval<T> {\r\n    type: U;\r\n}\r\n\r\nexport interface JSONDocInfo {\r\n    json: JSONDocument;\r\n    text: TextDocument;\r\n}\r\n\r\nexport type SubAction =\r\n    // See https://github.com/Microsoft/language-server-protocol/issues/518.\r\n    // tslint:disable-next-line:deprecation - TODO: this needs a PR to fix\r\n    | SubActionBase<\"hover\", MarkedString>\r\n    | SubActionBase<\"format\", string>\r\n    | SubActionBase<\"source\", string>\r\n    | SubActionBase<\"json\", JSONDocInfo>;\r\n//  | SubActionBase<\"highlight\", HighlightScope>;\r\n//  | SubActionBase<\"rename\", RenameRequest>;\r\n\r\n//#endregion\r\nexport type Success = true;\r\nexport const success: Success = true;\r\n\r\nexport const failure: Failure = false;\r\nexport type Failure = false;\r\n\r\n//#region ReturnData\r\nexport interface ReturnData<ErrorKind extends BCE = CE> {\r\n    actions: SubAction[];\r\n    errors: ErrorKind[];\r\n    /**\r\n     * Points not related to a specific line being parsed.\r\n     * This includes errors inside a file for example.\r\n     */\r\n    misc: MiscInfo[];\r\n    suggestions: SuggestResult[];\r\n}\r\n\r\ntype MiscInfoBase<kind extends string, value> = value & {\r\n    kind: kind;\r\n};\r\n\r\nexport type MiscInfo =\r\n    | MiscInfoBase<\"FileError\", FileError>\r\n    | MiscInfoBase<\"ClearError\", ClearFileError>;\r\n\r\ninterface FileError {\r\n    filePath: string;\r\n    group: string;\r\n    message: string;\r\n}\r\n\r\ninterface ClearFileError {\r\n    filePath: string;\r\n    group?: string;\r\n}\r\n\r\n/**\r\n * A general return type which can either succeed or fail, bringing other data\r\n */\r\nexport type ReturnedInfo<T, ErrorKind extends BCE = CE, E = undefined> =\r\n    | ReturnSuccess<T, ErrorKind>\r\n    | ReturnFailure<E, ErrorKind>;\r\n\r\nexport interface ReturnFailure<K = undefined, ErrorKind extends BCE = CE>\r\n    extends ReturnData<ErrorKind> {\r\n    data: K;\r\n    kind: Failure;\r\n}\r\n\r\nexport interface ReturnSuccess<T, ErrorKind extends BCE = CE>\r\n    extends ReturnData<ErrorKind> {\r\n    data: T;\r\n    kind: Success;\r\n}\r\n//#endregion\r\n// Helper types to lower the amount of repetition of the names\r\nexport type BCE = BlankCommandError;\r\nexport type CE = CommandError;\r\n\r\n//#region Misc types\r\n\r\nexport interface LineRange {\r\n    end: number;\r\n    start: number;\r\n}\r\n\r\nexport interface Ranged<T> {\r\n    range: LineRange;\r\n    value: T;\r\n}\r\n\r\n//#endregion\r\n","// tslint:disable:helper-return\r\nimport {\r\n    BlankCommandError,\r\n    CommandError,\r\n    fillBlankError\r\n} from \"../brigadier/errors\";\r\nimport {\r\n    BCE,\r\n    CE,\r\n    Failure,\r\n    failure,\r\n    MiscInfo,\r\n    ParserInfo,\r\n    ReturnData,\r\n    ReturnedInfo,\r\n    ReturnFailure,\r\n    ReturnSuccess,\r\n    SubAction,\r\n    success,\r\n    Success,\r\n    Suggestion,\r\n    SuggestResult\r\n} from \"../types\";\r\n\r\n/**\r\n * Create an instance of the common return type\r\n */\r\nfunction createReturn<ErrorKind extends BCE = CE>(): ReturnData<ErrorKind> {\r\n    return { actions: [], errors: [], suggestions: [], misc: [] };\r\n}\r\n\r\n/**\r\n * Test if `input` is successful\r\n * @param input The info to test\r\n */\r\nexport function isSuccessful<T, E extends BCE = CE>(\r\n    input: ReturnedInfo<T, E, any>\r\n): input is ReturnSuccess<T, E> {\r\n    return input.kind === success;\r\n}\r\n\r\n/**\r\n * Fill the blank errors in data with 'real' errors\r\n * MODIFIES `data`\r\n * @param data The data to modify\r\n * @param start The starting position of the area the errors should cover\r\n * @param end The end position\r\n */\r\nexport function fillBlanks<T>(\r\n    data: ReturnedInfo<T, BCE>,\r\n    start: number,\r\n    end: number\r\n): ReturnedInfo<T>;\r\nexport function fillBlanks(\r\n    data: ReturnData<BCE>,\r\n    start: number,\r\n    end: number\r\n): ReturnData {\r\n    const errors = [];\r\n    for (const err of data.errors) {\r\n        errors.push(fillBlankError(err, start, end));\r\n    }\r\n    return { ...data, errors };\r\n}\r\n\r\nexport interface MergeOptions {\r\n    actions?: boolean;\r\n    errors?: boolean;\r\n    misc?: boolean;\r\n    suggestions?: boolean;\r\n}\r\n\r\nexport class ReturnHelper<Errorkind extends BlankCommandError = CommandError> {\r\n    private readonly data: ReturnData<Errorkind> = createReturn<Errorkind>();\r\n    private readonly suggestMode?: boolean;\r\n\r\n    public constructor(suggesting?: ParserInfo | boolean) {\r\n        if (typeof suggesting !== \"undefined\") {\r\n            if (typeof suggesting === \"boolean\") {\r\n                this.suggestMode = suggesting;\r\n                return;\r\n            }\r\n            this.suggestMode = suggesting.suggesting;\r\n        }\r\n    }\r\n\r\n    public addActions(...actions: SubAction[]): this {\r\n        if (this.suggestMode === undefined || !this.suggestMode) {\r\n            this.data.actions.push(...actions);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public addErrors(...errs: Errorkind[]): this {\r\n        if (this.suggestMode === undefined || !this.suggestMode) {\r\n            this.data.errors.push(...errs);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public addFileErrorIfFalse(\r\n        option: boolean,\r\n        filePath: string,\r\n        group: string,\r\n        message: string\r\n    ): option is true {\r\n        if (!option) {\r\n            this.addMisc({\r\n                filePath,\r\n                group,\r\n                kind: \"FileError\",\r\n                message\r\n            });\r\n        } else {\r\n            this.addMisc({ group, filePath, kind: \"ClearError\" });\r\n        }\r\n        return option;\r\n    }\r\n    public addMisc(...others: MiscInfo[]): this {\r\n        if (this.suggestMode === undefined || !this.suggestMode) {\r\n            this.data.misc.push(...others);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public addSuggestion(\r\n        start: number,\r\n        text: string,\r\n        kind?: Suggestion[\"kind\"],\r\n        description?: string\r\n    ): this {\r\n        if (this.suggestMode === undefined || this.suggestMode) {\r\n            this.addSuggestions({\r\n                description,\r\n                kind,\r\n                start,\r\n                text\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n    public addSuggestions(...suggestions: SuggestResult[]): this {\r\n        if (this.suggestMode === undefined || this.suggestMode) {\r\n            this.data.suggestions.push(...suggestions);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public fail(err?: Errorkind): ReturnFailure<undefined, Errorkind> {\r\n        if (!!err && !this.suggestMode) {\r\n            this.addErrors(err);\r\n        }\r\n        return {\r\n            ...this.getShared(),\r\n            kind: failure as Failure\r\n        } as ReturnFailure<undefined, Errorkind>;\r\n    }\r\n\r\n    public failWithData<T>(data: T): ReturnFailure<T, Errorkind> {\r\n        return { ...this.getShared(), data, kind: failure as Failure };\r\n    }\r\n\r\n    public getShared(): ReturnData<Errorkind> {\r\n        return this.data;\r\n    }\r\n    public merge<T>(\r\n        merge: ReturnedInfo<T, Errorkind, any>,\r\n        suggestOverride?: MergeOptions\r\n    ): merge is ReturnSuccess<T, Errorkind> {\r\n        this.mergeChain(merge, suggestOverride);\r\n        return isSuccessful(merge);\r\n    }\r\n\r\n    public mergeChain(\r\n        merge: ReturnedInfo<any, Errorkind>,\r\n        {\r\n            suggestions = this.suggestMode === undefined\r\n                ? true\r\n                : this.suggestMode,\r\n            errors = this.suggestMode === undefined || !this.suggestMode,\r\n            actions = this.suggestMode === undefined || !this.suggestMode,\r\n            misc = this.suggestMode === undefined || !this.suggestMode\r\n        }: MergeOptions = {}\r\n    ): this {\r\n        if (suggestions) {\r\n            this.addSuggestions(...merge.suggestions);\r\n        }\r\n        if (errors) {\r\n            this.addErrors(...merge.errors);\r\n        }\r\n        if (actions) {\r\n            this.addActions(...merge.actions);\r\n        }\r\n        if (misc) {\r\n            this.addMisc(...merge.misc);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public return<T, E>(\r\n        other: ReturnedInfo<T, Errorkind, E>\r\n    ): ReturnedInfo<T, Errorkind, E> {\r\n        if (this.merge(other)) {\r\n            return this.succeed(other.data);\r\n        } else {\r\n            return this.failWithData(other.data);\r\n        }\r\n    }\r\n\r\n    public succeed<T extends undefined>(\r\n        data?: T\r\n    ): ReturnSuccess<undefined, Errorkind>;\r\n    public succeed<T>(data: T): ReturnSuccess<T, Errorkind>;\r\n    public succeed<T>(data: T): ReturnSuccess<T, Errorkind> {\r\n        return { ...this.getShared(), data, kind: success as Success };\r\n    }\r\n}\r\n\r\nexport function prepareForParser(\r\n    info: ReturnedInfo<any, any, any>,\r\n    suggesting: boolean | ParserInfo\r\n): ReturnedInfo<undefined> {\r\n    const helper = new ReturnHelper(suggesting);\r\n    if (helper.merge(info)) {\r\n        return helper.succeed();\r\n    } else {\r\n        return helper.fail();\r\n    }\r\n}\r\n\r\nexport function getReturned<T>(value: T | undefined): ReturnedInfo<T> {\r\n    const helper = new ReturnHelper();\r\n    if (typeof value === \"undefined\") {\r\n        return helper.fail();\r\n    } else {\r\n        return helper.succeed(value);\r\n    }\r\n}\r\n","import * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport { promisify } from \"util\";\r\nimport { ReturnedInfo } from \"../types\";\r\nimport { createJSONFileError } from \"./file-errors\";\r\nimport { ReturnHelper } from \"./return-helper\";\r\n\r\nexport const readFileAsync = promisify(fs.readFile);\r\nexport const saveFileAsync = promisify(fs.writeFile);\r\nexport const mkdirAsync = promisify(fs.mkdir);\r\nexport const readDirAsync = promisify(fs.readdir);\r\nexport const statAsync = promisify(fs.stat);\r\n\r\nexport async function readJSONRaw<T>(filePath: string): Promise<T> {\r\n    const buffer = await readFileAsync(filePath);\r\n    return JSON.parse(buffer.toString());\r\n}\r\n\r\nexport async function writeJSON(filepath: string, o: object): Promise<void> {\r\n    await saveFileAsync(filepath, JSON.stringify(o, undefined, 4));\r\n}\r\n\r\nexport async function readJSON<T>(filePath: string): Promise<ReturnedInfo<T>> {\r\n    const helper = new ReturnHelper();\r\n    let buffer: Buffer;\r\n    try {\r\n        buffer = await readFileAsync(filePath);\r\n    } catch (error) {\r\n        mcLangLog(`File at '${filePath}' not available: ${error}`);\r\n        return helper.fail();\r\n    }\r\n    try {\r\n        const result = JSON.parse(buffer.toString());\r\n        return helper.succeed<T>(result);\r\n    } catch (e) {\r\n        return helper.addMisc(createJSONFileError(filePath, e)).fail();\r\n    }\r\n}\r\n\r\nexport async function walkDir(currentPath: string): Promise<string[]> {\r\n    const subFolders: string[] = [];\r\n    try {\r\n        subFolders.push(...(await readDirAsync(currentPath)));\r\n    } catch (error) {\r\n        return [];\r\n    }\r\n    const promises = subFolders.map(async sub => {\r\n        try {\r\n            const files: string[] = [];\r\n            const subFile = path.join(currentPath, sub);\r\n            if ((await statAsync(subFile)).isDirectory()) {\r\n                files.push(...(await walkDir(subFile)));\r\n            } else {\r\n                files.push(subFile);\r\n            }\r\n            return files;\r\n        } catch (error) {\r\n            return [];\r\n        }\r\n    });\r\n    const results = await Promise.all(promises);\r\n    return ([] as string[]).concat(...results);\r\n}\r\n","/**\r\n * Get the keys of the object in a way friendly to\r\n * the typescript compiler.\r\n * Taken from https://github.com/Microsoft/TypeScript/pull/12253#issuecomment-353494273\r\n * @param o The object to get the keys of.\r\n */\r\nexport function typed_keys<O>(o: O): Array<keyof O> {\r\n    return Object.keys(o) as Array<keyof O>;\r\n}\r\n","// tslint:disable:helper-return\r\nimport * as defaultPath from \"path\";\r\nimport {\r\n    DATAFOLDER,\r\n    SLASH,\r\n    SLASHREGEX,\r\n    SLASHREPLACEREGEX,\r\n    TAG_START\r\n} from \"../consts\";\r\nimport {\r\n    Advancement,\r\n    DataResource,\r\n    GlobalData,\r\n    MinecraftResource,\r\n    NamespacedName,\r\n    Resources,\r\n    Tag,\r\n    WorldInfo\r\n} from \"../data/types\";\r\nimport { namespacedEntities, namespacedFluids } from \"../misc-functions\";\r\nimport { ReturnSuccess } from \"../types\";\r\nimport { getMatching, getResourcesSplit } from \"./group-resources\";\r\nimport { convertToNamespace, stringifyNamespace } from \"./namespace\";\r\nimport { readJSON, readJSONRaw } from \"./promisified-fs\";\r\nimport { ReturnHelper } from \"./return-helper\";\r\nimport { typed_keys } from \"./third_party/typed-keys\";\r\n\r\n/** A minimal path module for use in this file */\r\ntype PathModule = Pick<\r\n    typeof import(\"path\").posix, // N.B. `.posix` is required.\r\n    \"extname\" | \"sep\" | \"format\" | \"isAbsolute\" | \"join\" | \"normalize\" | \"parse\"\r\n>;\r\n\r\nexport interface PackLocationSegments {\r\n    pack: string;\r\n    packsFolder: string;\r\n    rest: string;\r\n}\r\n\r\n/**\r\n * Find the datapacks folder a file is in.\r\n * @param fileLocation The URI of the file\r\n * @param path The path module to use (allows for testing).\r\n */\r\nexport function parseDataPath(\r\n    fileLocation: string,\r\n    path: PathModule = defaultPath\r\n): PackLocationSegments | undefined {\r\n    const parsed = path.parse(path.normalize(fileLocation));\r\n    const dirs = parsed.dir.split(path.sep);\r\n    const packsFolderIndex = dirs.findIndex(\r\n        v => v.toLowerCase() === \"datapacks\"\r\n    );\r\n    if (packsFolderIndex !== -1) {\r\n        const remainder = dirs.slice(packsFolderIndex + 1);\r\n        if (remainder.length >= 1) {\r\n            let packsFolder = path.join(...dirs.slice(0, packsFolderIndex + 1));\r\n            // Ugly hack because path.join ignores a leading empty dir, leading to the result of\r\n            // `/home/datapacks` going to `home/datapacks`\r\n            if (path.sep === \"/\" && !path.isAbsolute(packsFolder)) {\r\n                packsFolder = path.sep + packsFolder;\r\n            }\r\n            packsFolder = path.format({ dir: packsFolder });\r\n            const rest = path.join(...remainder.slice(1), parsed.base);\r\n            return { packsFolder, pack: remainder[0], rest };\r\n        }\r\n    } else {\r\n        const dataFolderIndex = dirs.findIndex(\r\n            v => v.toLowerCase() === DATAFOLDER\r\n        );\r\n        // There is at least a datapacks (or whatever) folder, and the datapack folder itself, which have indices 0 and 1 respectively (or 1 and 2 etc.)\r\n        if (dataFolderIndex > 1) {\r\n            const remainder = dirs.slice(dataFolderIndex - 1); // The datapack's folder name onwards\r\n            if (remainder.length >= 1) {\r\n                // Always true?\r\n                let packsFolder = path.join(\r\n                    ...dirs.slice(0, dataFolderIndex - 1)\r\n                );\r\n                // Ugly hack because path.join ignores a leading empty dir, leading to the result of\r\n                // `/home/datapacks` going to `home/datapacks`\r\n                if (path.sep === \"/\" && !path.isAbsolute(packsFolder)) {\r\n                    packsFolder = path.sep + packsFolder;\r\n                }\r\n                packsFolder = path.format({ dir: packsFolder });\r\n                const rest = path.join(...remainder.slice(1), parsed.base);\r\n                return { packsFolder, pack: remainder[0], rest };\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\ninterface ResourceInfo<U extends keyof Resources> {\r\n    extension: string;\r\n    path: [U] | string[]; // Custom tuple improves autocomplete mostly.\r\n    mapFunction?(\r\n        value: NonNullable<Resources[U]> extends Array<infer T> ? T : never,\r\n        packroot: string,\r\n        globalData: GlobalData,\r\n        packsInfo?: WorldInfo\r\n    ): Promise<ReturnSuccess<typeof value>>;\r\n}\r\n\r\nexport const resourceTypes: { [T in keyof Resources]-?: ResourceInfo<T> } = {\r\n    advancements: {\r\n        extension: \".json\",\r\n        mapFunction: async (v, packroot) => {\r\n            const helper = new ReturnHelper();\r\n            try {\r\n                const advancement: Advancement = (await readJSONRaw(\r\n                    getPath(v, packroot, \"advancements\")\r\n                )) as any;\r\n                return helper.succeed({\r\n                    ...v,\r\n                    data: Object.keys(advancement.criteria)\r\n                } as DataResource<string[]>);\r\n            } catch (e) {\r\n                return helper.succeed(v);\r\n            }\r\n        },\r\n        path: [\"advancements\"]\r\n    },\r\n    block_tags: {\r\n        extension: \".json\",\r\n        mapFunction: async (v, packroot, globalData, packsInfo) =>\r\n            readTag(\r\n                v,\r\n                packroot,\r\n                \"block_tags\",\r\n                getResourcesSplit(\"block_tags\", globalData, packsInfo),\r\n                s => globalData.blocks.hasOwnProperty(s)\r\n            ),\r\n        path: [\"tags\", \"blocks\"]\r\n    },\r\n    entity_tags: {\r\n        extension: \".json\",\r\n        mapFunction: async (v, packroot, globalData, packsInfo) =>\r\n            readTag(\r\n                v,\r\n                packroot,\r\n                \"entity_tags\",\r\n                getResourcesSplit(\"entity_tags\", globalData, packsInfo),\r\n                s =>\r\n                    getMatching(namespacedEntities, convertToNamespace(s))\r\n                        .length > 0\r\n            ),\r\n        path: [\"tags\", \"entity_types\"]\r\n    },\r\n    fluid_tags: {\r\n        extension: \".json\",\r\n        mapFunction: async (v, packroot, globalData, packsInfo) =>\r\n            readTag(\r\n                v,\r\n                packroot,\r\n                \"fluid_tags\",\r\n                getResourcesSplit(\"fluid_tags\", globalData, packsInfo),\r\n                s =>\r\n                    getMatching(namespacedFluids, convertToNamespace(s))\r\n                        .length > 0\r\n            ),\r\n        path: [\"tags\", \"fluids\"]\r\n    },\r\n    function_tags: {\r\n        extension: \".json\",\r\n        mapFunction: async (v, packroot, globalData, packsInfo) => {\r\n            const functions = getResourcesSplit(\r\n                \"functions\",\r\n                globalData,\r\n                packsInfo\r\n            );\r\n            return readTag(\r\n                v,\r\n                packroot,\r\n                \"function_tags\",\r\n                getResourcesSplit(\"function_tags\", globalData, packsInfo),\r\n                s => getMatching(functions, convertToNamespace(s)).length > 0\r\n            );\r\n        },\r\n        path: [\"tags\", \"functions\"]\r\n    },\r\n    functions: { extension: \".mcfunction\", path: [\"functions\"] },\r\n    item_tags: {\r\n        extension: \".json\",\r\n        mapFunction: async (v, packroot, globalData, packsInfo) =>\r\n            readTag(\r\n                v,\r\n                packroot,\r\n                \"item_tags\",\r\n                getResourcesSplit(\"item_tags\", globalData, packsInfo),\r\n                s => globalData.items.indexOf(s) !== -1\r\n            ),\r\n        path: [\"tags\", \"items\"]\r\n    },\r\n    loot_tables: { extension: \".json\", path: [\"loot_tables\"] },\r\n    recipes: { extension: \".json\", path: [\"recipes\"] },\r\n    structures: { extension: \".nbt\", path: [\"structures\"] }\r\n};\r\n\r\ninterface KindNamespace {\r\n    kind: keyof Resources;\r\n    location: NamespacedName & { namespace: string };\r\n}\r\n\r\nexport function getKindAndNamespace(\r\n    rest: string,\r\n    path: PathModule = defaultPath\r\n): KindNamespace | undefined {\r\n    const sections = path.normalize(rest).split(path.sep);\r\n    if (sections[0] === DATAFOLDER && sections.length > 2) {\r\n        // Namespace,data,\r\n        const remainder = sections.splice(2);\r\n        for (const kind of typed_keys(resourceTypes)) {\r\n            const typeInfo = resourceTypes[kind];\r\n            if (\r\n                (typeInfo.path as string[]).every((v, i) => remainder[i] === v)\r\n            ) {\r\n                const namespace = sections[1];\r\n                const further = remainder.slice(typeInfo.path.length);\r\n                if (further.length > 0) {\r\n                    const last = further[further.length - 1];\r\n                    if (path.extname(last) === typeInfo.extension) {\r\n                        const pth = path\r\n                            .join(\r\n                                ...further.slice(0, -1),\r\n                                last.slice(0, -typeInfo.extension.length)\r\n                            )\r\n                            .replace(SLASHREPLACEREGEX, SLASH);\r\n                        return {\r\n                            kind,\r\n                            location: {\r\n                                namespace,\r\n                                path: pth\r\n                            }\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function getPath(\r\n    resource: MinecraftResource,\r\n    packroot: string,\r\n    kind: keyof Resources,\r\n    path: PathModule = defaultPath\r\n): string {\r\n    return path.join(\r\n        packroot,\r\n        DATAFOLDER,\r\n        resource.namespace,\r\n        ...resourceTypes[kind].path,\r\n        resource.path\r\n            .replace(SLASHREGEX, path.sep)\r\n            .concat(resourceTypes[kind].extension)\r\n    );\r\n}\r\n\r\nexport function buildPath(\r\n    resource: MinecraftResource,\r\n    packs: WorldInfo,\r\n    kind: keyof Resources,\r\n    path: PathModule = defaultPath\r\n): string | undefined {\r\n    if (resource.pack !== undefined) {\r\n        const pack = packs.packs[resource.pack];\r\n        return getPath(\r\n            resource,\r\n            path.join(packs.location, pack.name),\r\n            kind,\r\n            path\r\n        );\r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nasync function readTag(\r\n    resource: MinecraftResource,\r\n    packRoot: string,\r\n    type: keyof Resources,\r\n    options: MinecraftResource[],\r\n    isKnown: (value: string) => boolean\r\n): Promise<ReturnSuccess<DataResource<Tag> | MinecraftResource>> {\r\n    const helper = new ReturnHelper();\r\n    const filePath = getPath(resource, packRoot, type);\r\n    const tag = await readJSON<Tag>(filePath);\r\n    if (helper.merge(tag)) {\r\n        if (\r\n            helper.addFileErrorIfFalse(\r\n                !!tag.data.values,\r\n                filePath,\r\n                \"InvalidTagNoValues\",\r\n                `tag does not have a values key: ${JSON.stringify(tag.data)}`\r\n            )\r\n        ) {\r\n            if (\r\n                helper.addFileErrorIfFalse(\r\n                    Array.isArray(tag.data.values),\r\n                    filePath,\r\n                    \"InvalidTagValuesNotArray\",\r\n                    `tag values is not an array: ${JSON.stringify(\r\n                        tag.data.values\r\n                    )}`\r\n                )\r\n            ) {\r\n                if (\r\n                    helper.addFileErrorIfFalse(\r\n                        // tslint:disable-next-line:strict-type-predicates\r\n                        tag.data.values.every(v => typeof v === \"string\"),\r\n                        filePath,\r\n                        \"InvalidTagValuesNotString\",\r\n                        `tag values contains a non string value: ${JSON.stringify(\r\n                            tag.data.values\r\n                        )}`\r\n                    )\r\n                ) {\r\n                    const seen = new Set<string>();\r\n                    const duplicates = new Set<string>();\r\n                    const unknowns = new Set<string>();\r\n                    for (const v of tag.data.values) {\r\n                        if (v.startsWith(TAG_START)) {\r\n                            const tagText = v.slice(1);\r\n                            const tagNamespace = convertToNamespace(tagText);\r\n                            const tagName = stringifyNamespace(tagNamespace);\r\n                            const tagString = `#${tagName}`;\r\n                            const result = getMatching(options, tagNamespace);\r\n                            if (result.length === 0) {\r\n                                unknowns.add(tagString);\r\n                            }\r\n                            if (seen.has(tagString)) {\r\n                                duplicates.add(tagString);\r\n                            }\r\n                            seen.add(tagString);\r\n                        } else {\r\n                            const valueNamespace = convertToNamespace(v);\r\n                            const value = stringifyNamespace(valueNamespace);\r\n                            if (seen.has(value)) {\r\n                                duplicates.add(value);\r\n                            }\r\n                            seen.add(value);\r\n                            if (!isKnown(value)) {\r\n                                unknowns.add(value);\r\n                            }\r\n                        }\r\n                    }\r\n                    helper.addFileErrorIfFalse(\r\n                        duplicates.size === 0,\r\n                        filePath,\r\n                        \"InvalidTagValuesDuplicates\",\r\n                        `Tag contains duplicate values: \"${[...duplicates].join(\r\n                            '\", \"'\r\n                        )}\"`\r\n                    );\r\n                    helper.addFileErrorIfFalse(\r\n                        unknowns.size === 0,\r\n                        filePath,\r\n                        \"InvalidTagValuesUnknown\",\r\n                        `Tag contains unknown values: \"${[...unknowns].join(\r\n                            '\", \"'\r\n                        )}\"`\r\n                    );\r\n                    return helper.succeed({\r\n                        ...resource,\r\n                        data: tag.data\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return helper.succeed(resource);\r\n}\r\n","import { vsprintf } from \"sprintf-js\";\r\n\r\nexport function shouldTranslate(): boolean {\r\n    return mcLangSettings.translation.lang.toLowerCase() !== \"en-us\";\r\n}\r\n\r\nexport function MCFormat(base: string, ...substitutions: string[]): string {\r\n    return vsprintf(base, substitutions);\r\n}\r\n","import {\r\n    Diagnostic,\r\n    DidChangeTextDocumentParams,\r\n    Range\r\n} from \"vscode-languageserver/lib/main\";\r\nimport { CommandError } from \"../brigadier/errors\";\r\nimport { FunctionInfo } from \"../types\";\r\nimport { splitLines } from \"./creators\";\r\nimport { shouldTranslate } from \"./translation\";\r\n\r\n/**\r\n * Turn a command error into a language server diagnostic\r\n */\r\nexport function commandErrorToDiagnostic(\r\n    error: CommandError,\r\n    line: number\r\n): Diagnostic {\r\n    const range: Range = {\r\n        end: { line, character: error.range.end },\r\n        start: { line, character: error.range.start }\r\n    };\r\n    // Run Translation stuff on the error?\r\n    const text = shouldTranslate()\r\n        ? `'${error.text}': Translation is not yet supported` // Translate(error.code)\r\n        : error.text;\r\n    return Diagnostic.create(\r\n        range,\r\n        text,\r\n        error.severity,\r\n        error.code,\r\n        \"mcfunction\"\r\n    );\r\n}\r\n\r\nexport function runChanges(\r\n    changes: DidChangeTextDocumentParams,\r\n    functionInfo: FunctionInfo\r\n): number[] {\r\n    const changed: number[] = [];\r\n    for (const change of changes.contentChanges) {\r\n        if (!!change.range) {\r\n            // Appease the compiler, as the change interface seems to have range optional\r\n            const { start, end }: Range = change.range;\r\n            const newLineContent = functionInfo.lines[start.line].text\r\n                .substring(0, start.character)\r\n                .concat(\r\n                    change.text,\r\n                    functionInfo.lines[end.line].text.substring(end.character)\r\n                );\r\n            const difference = end.line - start.line + 1;\r\n            const newLines = splitLines(newLineContent);\r\n            functionInfo.lines.splice(start.line, difference, ...newLines);\r\n            changed.forEach((v, i) => {\r\n                if (v > start.line) {\r\n                    changed[i] = v - difference + newLines.length;\r\n                }\r\n            });\r\n            changed.push(\r\n                ...Array.from(\r\n                    new Array(newLines.length),\r\n                    (_, i) => start.line + i\r\n                )\r\n            );\r\n        }\r\n    }\r\n    const unique = changed.filter(\r\n        (value, index, self) => self.indexOf(value) === index\r\n    );\r\n    unique.sort((a, b) => a - b);\r\n    return unique;\r\n}\r\n","import {\r\n    CommandNode,\r\n    CommandNodePath,\r\n    CommandTree,\r\n    MCNode\r\n} from \"../data/types\";\r\n\r\nexport function followPath<T extends MCNode<T>>(\r\n    tree: MCNode<T>,\r\n    path: CommandNodePath\r\n): MCNode<T> {\r\n    // There are no protections here, because if a path is given it should be correct.\r\n    let current = tree;\r\n    for (const section of path) {\r\n        if (!!current.children && !!current.children[section]) {\r\n            current = current.children[section];\r\n        }\r\n    }\r\n    return current;\r\n}\r\n\r\nexport function getNextNode(\r\n    node:\r\n        | CommandNode\r\n        | MCNode<CommandNode> & {\r\n              executable?: boolean;\r\n              redirect?: CommandNodePath;\r\n          }, // Allow use of node.redirect without a tsignore\r\n    nodePath: CommandNodePath,\r\n    tree: CommandTree\r\n): GetNodeResult {\r\n    const redirect: CommandNodePath | undefined = node.redirect;\r\n    if (!!redirect) {\r\n        return { node: followPath(tree, redirect), path: redirect };\r\n    } else {\r\n        if (!node.children && !node.executable) {\r\n            // In this case either tree is malformed or in `execute run`\r\n            // So we just return the entire tree\r\n            return { node: tree, path: [] };\r\n        }\r\n        return { node, path: nodePath };\r\n    }\r\n}\r\n\r\ninterface GetNodeResult {\r\n    node: MCNode<CommandNode>;\r\n    path: CommandNodePath;\r\n}\r\n","import * as path from \"path\";\r\n\r\nimport {\r\n    mkdirAsync,\r\n    readJSONRaw,\r\n    saveFileAsync,\r\n    writeJSON\r\n} from \"../misc-functions/promisified-fs\";\r\nimport { typed_keys } from \"../misc-functions/third_party/typed-keys\";\r\nimport { WorkspaceSecurity } from \"../types\";\r\nimport { Cacheable } from \"./types\";\r\n\r\nif (!process.env.MCFUNCTION_CACHE_DIR) {\r\n    throw new Error(\"Environment variable MCFUNCTION_CACHE_DIR must be set\");\r\n}\r\nexport const cacheFolder = process.env.MCFUNCTION_CACHE_DIR;\r\n\r\nconst cacheFileNames: { [K in keyof Cacheable]: string } = {\r\n    blocks: \"blocks.json\",\r\n    commands: \"commands.json\",\r\n    items: \"items.json\",\r\n    meta_info: \"meta_info.json\",\r\n    resources: \"resources.json\"\r\n};\r\n\r\nexport async function readCache(): Promise<Cacheable> {\r\n    const data: Cacheable = {} as Cacheable;\r\n    const keys = typed_keys(cacheFileNames);\r\n    await Promise.all(\r\n        keys.map(async key => {\r\n            data[key] = await readJSONRaw<Cacheable[typeof key]>(\r\n                path.join(cacheFolder, cacheFileNames[key])\r\n            );\r\n        })\r\n    );\r\n    return data;\r\n}\r\n\r\nexport async function cacheData(data: Cacheable): Promise<void> {\r\n    try {\r\n        await mkdirAsync(cacheFolder, \"777\");\r\n    } catch (_) {\r\n        // Don't use the error, which is normally thrown if the folder doesn't exist\r\n    }\r\n    const keys: Array<keyof typeof cacheFileNames> = typed_keys(cacheFileNames);\r\n    await Promise.all(\r\n        keys.map(async key =>\r\n            writeJSON(path.join(cacheFolder, cacheFileNames[key]), data[key])\r\n        )\r\n    );\r\n    return;\r\n}\r\n\r\nexport async function storeSecurity(\r\n    security: WorkspaceSecurity\r\n): Promise<void> {\r\n    await saveFileAsync(\r\n        path.join(cacheFolder, \"security.json\"),\r\n        JSON.stringify(security)\r\n    );\r\n}\r\n\r\nexport async function readSecurity(): Promise<WorkspaceSecurity> {\r\n    try {\r\n        return await readJSONRaw(path.join(cacheFolder, \"security.json\"));\r\n    } catch (error) {\r\n        return {};\r\n    }\r\n}\r\n","import { IConnection } from \"vscode-languageserver/lib/main\";\r\nimport { storeSecurity } from \"../data/cache\";\r\nimport { WorkspaceSecurity } from \"../types\";\r\n\r\n/**\r\n * Check if the given change requires security confirmation\r\n */\r\nexport function securityIssues(\r\n    settings: McFunctionSettings,\r\n    security: WorkspaceSecurity\r\n): Array<keyof WorkspaceSecurity> {\r\n    const results: Array<keyof WorkspaceSecurity> = [];\r\n    if (!!settings.data) {\r\n        if (!!settings.data.customJar && security.JarPath !== true) {\r\n            results.push(\"JarPath\");\r\n        }\r\n        if (!!settings.data.javaPath && security.JavaPath !== true) {\r\n            results.push(\"JavaPath\");\r\n        }\r\n    }\r\n    if (!!settings.parsers /* && security.CustomParsers !== true */) {\r\n        /* const names = Object.keys(settings.parsers);\r\n        if (names.length > 0) {\r\n            results.push(\"CustomParsers\");\r\n        } */\r\n        throw new Error(`Custom parsers are not supported for client implementations.\r\nTo request this feature be enabled, open an issue at https://github.com/Levertion/mcfunction-langserver`);\r\n    }\r\n    return results;\r\n}\r\n\r\nexport async function actOnSecurity(\r\n    issues: Array<keyof WorkspaceSecurity>,\r\n    connection: IConnection,\r\n    security: WorkspaceSecurity\r\n): Promise<boolean> {\r\n    let securityChanged = false;\r\n    const resave = async () => {\r\n        if (securityChanged) {\r\n            await storeSecurity(security);\r\n        }\r\n    };\r\n    for (const issue of issues) {\r\n        const response = await Promise.resolve(\r\n            connection.window.showErrorMessage(\r\n                `[MCFUNCTION] You have the potentially insecure setting '${issue}' set, but no confirmation has been recieved.`,\r\n                { title: \"Yes\" },\r\n                { title: \"No (Stops server)\" }\r\n            )\r\n        );\r\n        if (!!response && response.title === \"Yes\") {\r\n            security[issue] = true;\r\n            securityChanged = true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    await resave();\r\n    return true;\r\n}\r\n","import { IConnection } from \"vscode-languageserver/lib/main\";\r\n\r\nexport function setup_logging(connection: IConnection): void {\r\n    const log = (message: string) => {\r\n        connection.console.log(message);\r\n    };\r\n    // tslint:disable-next-line:prefer-object-spread\r\n    global.mcLangLog = Object.assign(log, {\r\n        internal: (m: string) => {\r\n            if (mcLangSettings.trace.internalLogging) {\r\n                log(`[McFunctionInternal] ${m}`);\r\n            }\r\n        }\r\n    });\r\n}\r\n","export const COLORS = [\r\n    \"black\",\r\n    \"dark_blue\",\r\n    \"dark_green\",\r\n    \"dark_aqua\",\r\n    \"dark_red\",\r\n    \"dark_purple\",\r\n    \"gold\",\r\n    \"gray\",\r\n    \"dark_gray\",\r\n    \"blue\",\r\n    \"green\",\r\n    \"aqua\",\r\n    \"red\",\r\n    \"light_purple\",\r\n    \"yellow\",\r\n    \"white\",\r\n    \"reset\"\r\n];\r\n","import { COLORS } from \"../../colors\";\r\n\r\nexport const anchors = [\"feet\", \"eyes\"];\r\nexport const operations = [\"+=\", \"-=\", \"*=\", \"/=\", \"%=\", \"=\", \">\", \"<\", \"><\"];\r\nexport const colors = COLORS;\r\n\r\nexport const effects = [\r\n    \"minecraft:speed\",\r\n    \"minecraft:slowness\",\r\n    \"minecraft:haste\",\r\n    \"minecraft:mining_fatigue\",\r\n    \"minecraft:strength\",\r\n    \"minecraft:instant_health\",\r\n    \"minecraft:instant_damage\",\r\n    \"minecraft:jump_boost\",\r\n    \"minecraft:nausea\",\r\n    \"minecraft:regeneration\",\r\n    \"minecraft:resistance\",\r\n    \"minecraft:fire_resistance\",\r\n    \"minecraft:water_breathing\",\r\n    \"minecraft:invisibility\",\r\n    \"minecraft:blindness\",\r\n    \"minecraft:night_vision\",\r\n    \"minecraft:hunger\",\r\n    \"minecraft:weakness\",\r\n    \"minecraft:poison\",\r\n    \"minecraft:wither\",\r\n    \"minecraft:health_boost\",\r\n    \"minecraft:absorption\",\r\n    \"minecraft:saturation\",\r\n    \"minecraft:glowing\",\r\n    \"minecraft:levitation\",\r\n    \"minecraft:luck\",\r\n    \"minecraft:unluck\",\r\n    \"minecraft:slow_falling\",\r\n    \"minecraft:conduit_power\",\r\n    \"minecraft:dolphins_grace\"\r\n];\r\n\r\nexport const enchantments = [\r\n    \"minecraft:protection\",\r\n    \"minecraft:fire_protection\",\r\n    \"minecraft:feather_falling\",\r\n    \"minecraft:blast_protection\",\r\n    \"minecraft:projectile_protection\",\r\n    \"minecraft:respiration\",\r\n    \"minecraft:aqua_affinity\",\r\n    \"minecraft:thorns\",\r\n    \"minecraft:depth_strider\",\r\n    \"minecraft:frost_walker\",\r\n    \"minecraft:binding_curse\",\r\n    \"minecraft:sharpness\",\r\n    \"minecraft:smite\",\r\n    \"minecraft:bane_of_arthropods\",\r\n    \"minecraft:knockback\",\r\n    \"minecraft:fire_aspect\",\r\n    \"minecraft:looting\",\r\n    \"minecraft:sweeping\",\r\n    \"minecraft:efficiency\",\r\n    \"minecraft:silk_touch\",\r\n    \"minecraft:unbreaking\",\r\n    \"minecraft:fortune\",\r\n    \"minecraft:power\",\r\n    \"minecraft:punch\",\r\n    \"minecraft:flame\",\r\n    \"minecraft:infinity\",\r\n    \"minecraft:luck_of_the_sea\",\r\n    \"minecraft:lure\",\r\n    \"minecraft:loyalty\",\r\n    \"minecraft:impaling\",\r\n    \"minecraft:riptide\",\r\n    \"minecraft:channeling\",\r\n    \"minecraft:mending\",\r\n    \"minecraft:vanishing_curse\"\r\n];\r\n\r\nexport const particles = [\r\n    \"minecraft:ambient_entity_effect\",\r\n    \"minecraft:angry_villager\",\r\n    \"minecraft:barrier\",\r\n    \"minecraft:block\",\r\n    \"minecraft:bubble\",\r\n    \"minecraft:cloud\",\r\n    \"minecraft:crit\",\r\n    \"minecraft:damage_indicator\",\r\n    \"minecraft:dragon_breath\",\r\n    \"minecraft:dripping_lava\",\r\n    \"minecraft:dripping_water\",\r\n    \"minecraft:dust\",\r\n    \"minecraft:effect\",\r\n    \"minecraft:elder_guardian\",\r\n    \"minecraft:enchanted_hit\",\r\n    \"minecraft:enchant\",\r\n    \"minecraft:end_rod\",\r\n    \"minecraft:entity_effect\",\r\n    \"minecraft:explosion_emitter\",\r\n    \"minecraft:explosion\",\r\n    \"minecraft:falling_dust\",\r\n    \"minecraft:firework\",\r\n    \"minecraft:fishing\",\r\n    \"minecraft:flame\",\r\n    \"minecraft:happy_villager\",\r\n    \"minecraft:heart\",\r\n    \"minecraft:instant_effect\",\r\n    \"minecraft:item\",\r\n    \"minecraft:item_slime\",\r\n    \"minecraft:item_snowball\",\r\n    \"minecraft:large_smoke\",\r\n    \"minecraft:lava\",\r\n    \"minecraft:mycelium\",\r\n    \"minecraft:note\",\r\n    \"minecraft:poof\",\r\n    \"minecraft:portal\",\r\n    \"minecraft:rain\",\r\n    \"minecraft:smoke\",\r\n    \"minecraft:spit\",\r\n    \"minecraft:squid_ink\",\r\n    \"minecraft:sweep_attack\",\r\n    \"minecraft:totem_of_undying\",\r\n    \"minecraft:underwater\",\r\n    \"minecraft:splash\",\r\n    \"minecraft:witch\",\r\n    \"minecraft:bubble_pop\",\r\n    \"minecraft:current_down\",\r\n    \"minecraft:bubble_column_up\",\r\n    \"minecraft:nautilus\"\r\n];\r\n\r\nexport const entities = [\r\n    \"area_effect_cloud\",\r\n    \"armor_stand\",\r\n    \"arrow\",\r\n    \"bat\",\r\n    \"blaze\",\r\n    \"boat\",\r\n    \"cave_spider\",\r\n    \"chicken\",\r\n    \"cod\",\r\n    \"cow\",\r\n    \"creeper\",\r\n    \"donkey\",\r\n    \"dolphin\",\r\n    \"dragon_fireball\",\r\n    \"drowned\",\r\n    \"elder_guardian\",\r\n    \"end_crystal\",\r\n    \"ender_dragon\",\r\n    \"enderman\",\r\n    \"endermite\",\r\n    \"evoker_fangs\",\r\n    \"evoker\",\r\n    \"experience_orb\",\r\n    \"eye_of_ender\",\r\n    \"falling_block\",\r\n    \"firework_rocket\",\r\n    \"ghast\",\r\n    \"giant\",\r\n    \"guardian\",\r\n    \"horse\",\r\n    \"husk\",\r\n    \"illusioner\",\r\n    \"item\",\r\n    \"item_frame\",\r\n    \"fireball\",\r\n    \"leash_knot\",\r\n    \"llama\",\r\n    \"llama_spit\",\r\n    \"magma_cube\",\r\n    \"minecart\",\r\n    \"chest_minecart\",\r\n    \"command_block_minecart\",\r\n    \"furnace_minecart\",\r\n    \"hopper_minecart\",\r\n    \"spawner_minecart\",\r\n    \"tnt_minecart\",\r\n    \"mule\",\r\n    \"mooshroom\",\r\n    \"ocelot\",\r\n    \"painting\",\r\n    \"parrot\",\r\n    \"pig\",\r\n    \"pufferfish\",\r\n    \"zombie_pigman\",\r\n    \"polar_bear\",\r\n    \"tnt\",\r\n    \"rabbit\",\r\n    \"salmon\",\r\n    \"sheep\",\r\n    \"shulker\",\r\n    \"shulker_bullet\",\r\n    \"silverfish\",\r\n    \"skeleton\",\r\n    \"skeleton_horse\",\r\n    \"slime\",\r\n    \"small_fireball\",\r\n    \"snow_golem\",\r\n    \"snowball\",\r\n    \"spectral_arrow\",\r\n    \"spider\",\r\n    \"squid\",\r\n    \"stray\",\r\n    \"tropical_fish\",\r\n    \"turtle\",\r\n    \"egg\",\r\n    \"ender_pearl\",\r\n    \"experience_bottle\",\r\n    \"potion\",\r\n    \"vex\",\r\n    \"villager\",\r\n    \"iron_golem\",\r\n    \"vindicator\",\r\n    \"witch\",\r\n    \"wither\",\r\n    \"wither_skeleton\",\r\n    \"wither_skull\",\r\n    \"wolf\",\r\n    \"zombie\",\r\n    \"zombie_horse\",\r\n    \"zombie_villager\",\r\n    \"phantom\",\r\n    \"lightning_bolt\",\r\n    \"trident\"\r\n];\r\n\r\nexport const fluids = [\"minecraft:water\", \"minecraft:lava\"];\r\n\r\nexport const dimensions = [\"overworld\", \"the_nether\", \"the_end\"];\r\n","import { CompletionItemKind } from \"vscode-languageserver/lib/main\";\r\nimport {\r\n    convertToNamespace,\r\n    namespacesEqual,\r\n    ReturnHelper,\r\n    stringifyNamespace\r\n} from \"..\";\r\nimport { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { StringReader } from \"../../brigadier/string-reader\";\r\nimport { entities, fluids } from \"../../data/lists/statics\";\r\nimport { NamespacedName } from \"../../data/types\";\r\nimport { CE, ReturnedInfo, ReturnSuccess, Suggestion } from \"../../types\";\r\nimport { isNamespaceDefault, namesEqual } from \"../namespace\";\r\n\r\nconst NAMESPACEEXCEPTIONS = {\r\n    invalid_id: new CommandErrorBuilder(\r\n        \"argument.id.invalid\",\r\n        \"Invalid character '%s' in location %s\"\r\n    )\r\n};\r\n\r\nconst disallowedPath = /[^0-9a-z_/\\.-]/g;\r\nexport const namespaceChars = /^[0-9a-z_:/\\.-]$/;\r\n\r\nexport function stringArrayToNamespaces(strings: string[]): NamespacedName[] {\r\n    // tslint:disable-next-line:no-unnecessary-callback-wrapper this is a false positive - see https://github.com/palantir/tslint/issues/2430\r\n    return strings.map(v => convertToNamespace(v));\r\n}\r\n// This should be in lists/statics, but that creates a dependency loop\r\nexport const namespacedEntities = stringArrayToNamespaces(entities);\r\nexport const namespacedFluids = stringArrayToNamespaces(fluids);\r\n\r\nexport function readNamespaceText(reader: StringReader): string {\r\n    return reader.readWhileRegexp(namespaceChars);\r\n}\r\n\r\n/**\r\n * Does `base`(eg minecraft:stone) start with `test` (e.g. sto) [Y]\r\n */\r\nexport function namespaceStart(\r\n    base: NamespacedName,\r\n    test: NamespacedName\r\n): boolean {\r\n    if (test.namespace === undefined) {\r\n        return (\r\n            (isNamespaceDefault(base) && base.path.startsWith(test.path)) ||\r\n            (!!base.namespace && base.namespace.startsWith(test.path))\r\n        );\r\n    } else {\r\n        return namesEqual(base, test) && base.path.startsWith(test.path);\r\n    }\r\n}\r\n\r\nexport function namespaceSuggestions(\r\n    options: NamespacedName[],\r\n    value: NamespacedName,\r\n    start: number\r\n): Suggestion[] {\r\n    const result: Suggestion[] = [];\r\n    for (const option of options) {\r\n        if (namespaceStart(option, value)) {\r\n            result.push({ text: stringifyNamespace(option), start });\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function namespaceSuggestionString(\r\n    options: string[],\r\n    value: NamespacedName,\r\n    start: number\r\n): Suggestion[] {\r\n    return namespaceSuggestions(stringArrayToNamespaces(options), value, start);\r\n}\r\n\r\nexport function parseNamespace(\r\n    reader: StringReader\r\n): ReturnedInfo<NamespacedName> {\r\n    const helper = new ReturnHelper();\r\n    const start = reader.cursor;\r\n    const text = readNamespaceText(reader);\r\n    const namespace = convertToNamespace(text);\r\n    let next: RegExpExecArray | null;\r\n    let failed = false;\r\n    // Give an error for each invalid character\r\n    do {\r\n        next = disallowedPath.exec(namespace.path);\r\n        if (next) {\r\n            // Relies on the fact that convertToNamespace splits on the first\r\n            const i = text.indexOf(\":\") + 1 + next.index + start;\r\n            failed = true;\r\n            helper.addErrors(\r\n                NAMESPACEEXCEPTIONS.invalid_id.create(i, i + 1, next[0], text)\r\n            );\r\n        }\r\n    } while (next);\r\n    if (failed) {\r\n        return helper.fail();\r\n    } else {\r\n        return helper.succeed(namespace);\r\n    }\r\n}\r\n\r\ninterface OptionResult<T> {\r\n    literal: NamespacedName;\r\n    values: T[];\r\n}\r\n\r\nexport function parseNamespaceOption<T extends NamespacedName>(\r\n    reader: StringReader,\r\n    options: T[],\r\n    completionKind?: CompletionItemKind\r\n): ReturnedInfo<OptionResult<T>, CE, NamespacedName | undefined> {\r\n    const helper = new ReturnHelper();\r\n    const start = reader.cursor;\r\n    const namespace = parseNamespace(reader);\r\n    if (helper.merge(namespace)) {\r\n        const results = processParsedNamespaceOption(\r\n            namespace.data,\r\n            options,\r\n            !reader.canRead(),\r\n            start,\r\n            completionKind\r\n        );\r\n        helper.merge(results);\r\n        if (results.data.length > 0) {\r\n            return helper.succeed<OptionResult<T>>({\r\n                literal: namespace.data,\r\n                values: results.data\r\n            });\r\n        } else {\r\n            return helper.failWithData(namespace.data);\r\n        }\r\n    } else {\r\n        return helper.failWithData(undefined);\r\n    }\r\n}\r\n\r\nexport function processParsedNamespaceOption<T extends NamespacedName>(\r\n    namespace: NamespacedName,\r\n    options: T[],\r\n    suggest: boolean,\r\n    start: number,\r\n    completionKind?: CompletionItemKind\r\n): ReturnSuccess<T[]> {\r\n    const results: T[] = [];\r\n    const helper = new ReturnHelper();\r\n    for (const val of options) {\r\n        if (namespacesEqual(val, namespace)) {\r\n            results.push(val);\r\n        }\r\n        if (suggest && namespaceStart(val, namespace)) {\r\n            helper.addSuggestion(\r\n                start,\r\n                stringifyNamespace(val),\r\n                completionKind\r\n            );\r\n        }\r\n    }\r\n    return helper.succeed(results);\r\n}\r\n","import { CompletionItemKind } from \"vscode-languageserver/lib/main\";\r\nimport {\r\n    buildPath,\r\n    convertToNamespace,\r\n    getResourcesofType,\r\n    namespacesEqual,\r\n    ReturnHelper\r\n} from \"..\";\r\nimport { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { StringReader } from \"../../brigadier/string-reader\";\r\nimport { TAG_START } from \"../../consts\";\r\nimport {\r\n    DataResource,\r\n    NamespacedName,\r\n    Resources,\r\n    Tag,\r\n    WorldInfo\r\n} from \"../../data/types\";\r\nimport { CE, ParserInfo, ReturnedInfo, ReturnSuccess } from \"../../types\";\r\nimport {\r\n    parseNamespace,\r\n    parseNamespaceOption,\r\n    readNamespaceText\r\n} from \"./namespace\";\r\n\r\nexport interface TagParseResult {\r\n    parsed: NamespacedName;\r\n    resolved?: NamespacedName[];\r\n    values?: Array<DataResource<Tag>>;\r\n}\r\n\r\n/**\r\n * Parse a namespace or tag.\r\n * Returned:\r\n *  - values are the resources which are the exact matches\r\n *  - resolved are the lowest level tag members\r\n *  - parsed is the literal tag. If parsed exists, but not resolved/values, then it was a non-tag\r\n *  - if not successful, if data undefined then parsing failed.\r\n *  - if data is a value, then a tag parsed but was unknown\r\n */\r\nexport function parseNamespaceOrTag(\r\n    reader: StringReader,\r\n    info: ParserInfo,\r\n    taghandling: keyof Resources | CommandErrorBuilder\r\n): ReturnedInfo<TagParseResult, CE, NamespacedName | undefined> {\r\n    const helper = new ReturnHelper(info);\r\n    const start = reader.cursor;\r\n    if (reader.peek() === TAG_START) {\r\n        reader.skip();\r\n        if (typeof taghandling === \"string\") {\r\n            const tags: Array<DataResource<Tag>> = getResourcesofType(\r\n                info.data,\r\n                taghandling\r\n            );\r\n            const parsed = parseNamespaceOption(\r\n                reader,\r\n                tags,\r\n                CompletionItemKind.Folder\r\n            );\r\n            if (helper.merge(parsed)) {\r\n                const values = parsed.data.values;\r\n                const resolved: NamespacedName[] = [];\r\n                for (const value of values) {\r\n                    resolved.push(...getLowestForTag(value, tags));\r\n                }\r\n                return helper.succeed<TagParseResult>({\r\n                    parsed: parsed.data.literal,\r\n                    resolved,\r\n                    values\r\n                });\r\n            } else {\r\n                return helper.failWithData(parsed.data);\r\n            }\r\n        } else {\r\n            readNamespaceText(reader);\r\n            return helper.fail(taghandling.create(start, reader.cursor));\r\n        }\r\n    } else {\r\n        if (!reader.canRead() && typeof taghandling === \"string\") {\r\n            helper.addSuggestion(\r\n                reader.cursor,\r\n                TAG_START,\r\n                CompletionItemKind.Operator\r\n            );\r\n        }\r\n        const parsed = parseNamespace(reader);\r\n        if (helper.merge(parsed)) {\r\n            return helper.succeed({ parsed: parsed.data });\r\n        } else {\r\n            return helper.fail();\r\n        }\r\n    }\r\n}\r\n\r\nfunction getLowestForTag(\r\n    tag: DataResource<Tag>,\r\n    options: Array<DataResource<Tag>>\r\n): NamespacedName[] {\r\n    if (!tag.data) {\r\n        return [];\r\n    }\r\n    const results: NamespacedName[] = [];\r\n    for (const tagMember of tag.data.values) {\r\n        if (tagMember[0] === TAG_START) {\r\n            const namespace = convertToNamespace(tagMember.substring(1));\r\n            for (const option of options) {\r\n                if (namespacesEqual(namespace, option)) {\r\n                    results.push(...getLowestForTag(option, options));\r\n                }\r\n            }\r\n        } else {\r\n            results.push(convertToNamespace(tagMember));\r\n        }\r\n    }\r\n    return results;\r\n}\r\n\r\nexport function buildTagActions(\r\n    tags: Array<DataResource<Tag>>,\r\n    low: number,\r\n    high: number,\r\n    type: keyof Resources,\r\n    localData?: WorldInfo\r\n): ReturnSuccess<void> {\r\n    const helper = new ReturnHelper();\r\n    for (const resource of tags) {\r\n        if (resource.data) {\r\n            helper.addActions({\r\n                data: `\\`\\`\\`json\r\n${JSON.stringify(resource.data, undefined, 4)}\r\n\\`\\`\\``,\r\n                high,\r\n                low,\r\n                type: \"hover\"\r\n            });\r\n        }\r\n        if (localData) {\r\n            const location = buildPath(resource, localData, type);\r\n            if (location) {\r\n                helper.addActions({\r\n                    data: location,\r\n                    high,\r\n                    low,\r\n                    type: \"source\"\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return helper.succeed();\r\n}\r\n","export * from \"./context\";\r\nexport * from \"./creators\";\r\nexport * from \"./datapack-folder\";\r\nexport * from \"./file-errors\";\r\nexport * from \"./group-resources\";\r\nexport * from \"./lsp-conversions\";\r\nexport * from \"./namespace\";\r\nexport * from \"./node-tree\";\r\nexport * from \"./promisified-fs\";\r\nexport * from \"./return-helper\";\r\nexport * from \"./security\";\r\nexport * from \"./setup\";\r\nexport * from \"./translation\";\r\n\r\nexport * from \"./parsing/namespace\";\r\nexport * from \"./parsing/nmsp-tag\";\r\n","import { CompletionItemKind } from \"vscode-languageserver/lib/main\";\r\nimport { getReturned, ReturnHelper } from \"../misc-functions\";\r\nimport { typed_keys } from \"../misc-functions/third_party/typed-keys\";\r\nimport { CE, ReturnedInfo, Suggestion } from \"../types\";\r\nimport { CommandErrorBuilder } from \"./errors\";\r\n\r\nconst EXCEPTIONS = {\r\n    EXPECTED_BOOL: new CommandErrorBuilder(\r\n        \"parsing.bool.expected\",\r\n        \"Expected bool\"\r\n    ),\r\n    EXPECTED_END_OF_QUOTE: new CommandErrorBuilder(\r\n        \"parsing.quote.expected.end\",\r\n        \"Unclosed quoted string\"\r\n    ),\r\n    EXPECTED_FLOAT: new CommandErrorBuilder(\r\n        \"parsing.float.expected\",\r\n        \"Expected float\"\r\n    ),\r\n    EXPECTED_INT: new CommandErrorBuilder(\r\n        \"parsing.int.expected\",\r\n        \"Expected integer\"\r\n    ),\r\n    EXPECTED_START_OF_QUOTE: new CommandErrorBuilder(\r\n        \"parsing.quote.expected.start\",\r\n        \"Expected quote to start a string\"\r\n    ),\r\n    EXPECTED_STRING_FROM: new CommandErrorBuilder(\r\n        \"parsing.expected.option\",\r\n        \"Expected string from [%s], got '%s'\"\r\n    ),\r\n    EXPECTED_SYMBOL: new CommandErrorBuilder(\r\n        \"parsing.expected\",\r\n        \"Expected '%s'\"\r\n    ),\r\n    INVALID_BOOL: new CommandErrorBuilder(\r\n        \"parsing.bool.invalid\",\r\n        \"Invalid bool, expected true or false but found '%s'\"\r\n    ),\r\n    INVALID_ESCAPE: new CommandErrorBuilder(\r\n        \"parsing.quote.escape\",\r\n        \"Invalid escape sequence '\\\\%s' in quoted string)\"\r\n    ),\r\n    INVALID_FLOAT: new CommandErrorBuilder(\r\n        \"parsing.float.invalid\",\r\n        \"Invalid float '%s'\"\r\n    ),\r\n    INVALID_INT: new CommandErrorBuilder(\r\n        \"parsing.int.invalid\",\r\n        \"Invalid integer '%s'\"\r\n    )\r\n};\r\n\r\nexport const QUOTE = '\"';\r\nconst ESCAPE = \"\\\\\";\r\nexport type QuotingKind = \"both\" | \"yes\" | RegExp;\r\n\r\nexport interface QuotingInfo {\r\n    /**\r\n     * True if quoting is allowed\r\n     */\r\n    quote: boolean;\r\n    /**\r\n     * Defined if not quoting is allowed\r\n     */\r\n    unquoted?: RegExp;\r\n}\r\nexport class StringReader {\r\n    public static charAllowedInUnquotedString = /^[0-9A-Za-z_\\-\\.+]$/;\r\n    public static charAllowedNumber = /^[0-9\\-\\.]$/;\r\n    public static defaultQuotingInfo: QuotingInfo = {\r\n        quote: true,\r\n        unquoted: StringReader.charAllowedInUnquotedString\r\n    };\r\n\r\n    private static readonly bools = { true: true, false: false };\r\n    public cursor = 0;\r\n    public readonly string: string;\r\n\r\n    public constructor(stringToRead: string) {\r\n        this.string = stringToRead;\r\n    }\r\n    public canRead(length: number = 1): boolean {\r\n        return this.cursor + length <= this.string.length;\r\n    }\r\n    /**\r\n     * Require that a specific string follows\r\n     * @param str The string which should come next\r\n     */\r\n    public expect(str: string): ReturnedInfo<undefined> {\r\n        const helper = new ReturnHelper();\r\n        if (str.startsWith(this.getRemaining())) {\r\n            helper.addSuggestions({\r\n                start: this.cursor,\r\n                text: str\r\n            });\r\n        }\r\n        const sub = this.string.substr(this.cursor, str.length);\r\n        if (sub !== str) {\r\n            return helper.fail(\r\n                EXCEPTIONS.EXPECTED_SYMBOL.create(\r\n                    this.cursor,\r\n                    Math.min(this.string.length, this.cursor + str.length),\r\n                    str\r\n                )\r\n            );\r\n        }\r\n        this.cursor += str.length;\r\n        return helper.succeed();\r\n    }\r\n\r\n    public expectOption<T extends string>(...options: T[]): ReturnedInfo<T> {\r\n        const helper = new ReturnHelper();\r\n        const start = this.cursor;\r\n        let out: string | undefined;\r\n        for (const s of options) {\r\n            if (\r\n                helper.merge(this.expect(s), {\r\n                    errors: false\r\n                })\r\n            ) {\r\n                if (!out || s.length > out.length) {\r\n                    out = s;\r\n                }\r\n                this.cursor = start;\r\n            }\r\n        }\r\n        if (!out) {\r\n            return helper.fail(\r\n                EXCEPTIONS.EXPECTED_STRING_FROM.create(\r\n                    start,\r\n                    Math.min(\r\n                        this.getTotalLength(),\r\n                        start + Math.max(...options.map(v => v.length))\r\n                    ),\r\n                    options.join(),\r\n                    this.getRemaining()\r\n                )\r\n            );\r\n        }\r\n        this.cursor += out.length;\r\n        return helper.succeed(out as T);\r\n    }\r\n\r\n    public getRead(): string {\r\n        return this.string.substring(0, this.cursor);\r\n    }\r\n    public getRemaining(): string {\r\n        return this.string.substring(this.cursor);\r\n    }\r\n    public getRemainingLength(): number {\r\n        return this.string.length - this.cursor;\r\n    }\r\n    public getTotalLength(): number {\r\n        return this.string.length;\r\n    }\r\n    public peek(offset: number = 0): string {\r\n        return this.string.charAt(this.cursor + offset);\r\n    }\r\n    public read(): string {\r\n        return this.string.charAt(this.cursor++);\r\n    }\r\n    /**\r\n     * Read a boolean value from the string\r\n     */\r\n    public readBoolean(quoting?: QuotingInfo): ReturnedInfo<boolean> {\r\n        const helper = new ReturnHelper();\r\n        const start = this.cursor;\r\n        const value = this.readOption<keyof typeof StringReader[\"bools\"]>(\r\n            typed_keys(StringReader.bools),\r\n            quoting\r\n        );\r\n        if (!helper.merge(value)) {\r\n            if (value.data !== undefined) {\r\n                return helper.fail(\r\n                    EXCEPTIONS.INVALID_BOOL.create(\r\n                        start,\r\n                        this.cursor,\r\n                        value.data\r\n                    )\r\n                );\r\n            } else {\r\n                return helper.fail();\r\n            }\r\n        }\r\n        return helper.succeed(StringReader.bools[value.data]);\r\n    }\r\n    /**\r\n     * Read a float from the string\r\n     */\r\n    public readFloat(): ReturnedInfo<number> {\r\n        const helper = new ReturnHelper();\r\n        const start: number = this.cursor;\r\n        const readToTest: string = this.readWhileRegexp(\r\n            StringReader.charAllowedNumber\r\n        );\r\n        if (readToTest.length === 0) {\r\n            return helper.fail(\r\n                EXCEPTIONS.EXPECTED_FLOAT.create(start, this.string.length)\r\n            );\r\n        }\r\n\r\n        // The Java readInt throws upon multiple `.`s, but Javascript's doesn't\r\n        if ((readToTest.match(/\\./g) || []).length > 1) {\r\n            return helper.fail(\r\n                EXCEPTIONS.INVALID_FLOAT.create(\r\n                    start,\r\n                    this.cursor,\r\n                    this.string.substring(start, this.cursor)\r\n                )\r\n            );\r\n        }\r\n        try {\r\n            return helper.succeed(parseFloat(readToTest));\r\n        } catch (error) {\r\n            return helper.fail(\r\n                EXCEPTIONS.INVALID_FLOAT.create(start, this.cursor, readToTest)\r\n            );\r\n        }\r\n    }\r\n    /**\r\n     * Read an integer from the string\r\n     */\r\n    public readInt(): ReturnedInfo<number> {\r\n        const helper = new ReturnHelper();\r\n        const start: number = this.cursor;\r\n        const readToTest: string = this.readWhileRegexp(\r\n            StringReader.charAllowedNumber\r\n        );\r\n        if (readToTest.length === 0) {\r\n            return helper.fail(\r\n                EXCEPTIONS.EXPECTED_INT.create(start, this.string.length)\r\n            );\r\n        }\r\n        // The Java readInt throws upon a `.`, but the regex includes one in brigadier\r\n        // This handles this case\r\n        if (readToTest.indexOf(\".\") !== -1) {\r\n            return helper.fail(\r\n                EXCEPTIONS.INVALID_INT.create(\r\n                    start,\r\n                    this.cursor,\r\n                    this.string.substring(start, this.cursor)\r\n                )\r\n            );\r\n        }\r\n        try {\r\n            return helper.succeed(Number.parseInt(readToTest, 10));\r\n        } catch (error) {\r\n            return helper.fail(\r\n                EXCEPTIONS.INVALID_INT.create(start, this.cursor, readToTest)\r\n            );\r\n        }\r\n    }\r\n    /**\r\n     * Expect a string from a selection\r\n     * @param quoteKind how should the string be handled.\r\n     * - `both`: StringReader::readString()\r\n     * - `yes`: StringReader::readQuotedString()\r\n     * - `no`: StringReader::readUnquotedString()\r\n     */\r\n    public readOption<T extends string>(\r\n        options: T[],\r\n        quoteKind: QuotingInfo = StringReader.defaultQuotingInfo,\r\n        completion?: CompletionItemKind\r\n    ): ReturnedInfo<T, CE, string | undefined> {\r\n        const start = this.cursor;\r\n        const helper = new ReturnHelper();\r\n        const result = this.readOptionInner(quoteKind);\r\n        // Reading failed, which must be due to an invalid quoted string\r\n        if (!helper.merge(result, { suggestions: false })) {\r\n            if (result.data && !this.canRead()) {\r\n                const bestEffort = result.data;\r\n                helper.addSuggestions(\r\n                    ...options\r\n                        .filter(option => option.startsWith(bestEffort))\r\n                        .map<Suggestion>(v =>\r\n                            completionForString(v, start, quoteKind, completion)\r\n                        )\r\n                );\r\n            }\r\n            return helper.fail();\r\n        }\r\n        const valid = options.some(opt => opt === result.data);\r\n        if (!this.canRead()) {\r\n            helper.addSuggestions(\r\n                ...options\r\n                    .filter(opt => opt.startsWith(result.data))\r\n                    .map<Suggestion>(v =>\r\n                        completionForString(v, start, quoteKind, completion)\r\n                    )\r\n            );\r\n        }\r\n        if (valid) {\r\n            return helper.succeed(result.data as T);\r\n        } else {\r\n            /* if (addError) {\r\n                helper.addErrors(\r\n                    EXCEPTIONS.EXPECTED_STRING_FROM.create(\r\n                        start,\r\n                        this.cursor,\r\n                        JSON.stringify(options),\r\n                        result.data\r\n                    )\r\n                );\r\n            } */\r\n            return helper.failWithData(result.data);\r\n        }\r\n    }\r\n    /**\r\n     * Read from the string, returning a string, which, in the original had been surrounded by quotes\r\n     */\r\n    public readQuotedString(): ReturnedInfo<string, CE, string | undefined> {\r\n        const helper = new ReturnHelper();\r\n        const start = this.cursor;\r\n        if (!this.canRead()) {\r\n            return helper.succeed(\"\");\r\n        }\r\n        if (this.peek() !== QUOTE) {\r\n            return helper.fail(\r\n                EXCEPTIONS.EXPECTED_START_OF_QUOTE.create(\r\n                    this.cursor,\r\n                    this.string.length\r\n                )\r\n            );\r\n        }\r\n        let result = \"\";\r\n        let escaped = false;\r\n        while (this.canRead()) {\r\n            this.skip();\r\n            const char: string = this.peek();\r\n            if (escaped) {\r\n                if (char === QUOTE || char === ESCAPE) {\r\n                    result += char;\r\n                    escaped = false;\r\n                } else {\r\n                    this.skip();\r\n                    return helper.fail(\r\n                        EXCEPTIONS.INVALID_ESCAPE.create(\r\n                            this.cursor - 2,\r\n                            this.cursor,\r\n                            char\r\n                        )\r\n                    ); // Includes backslash\r\n                }\r\n            } else if (char === ESCAPE) {\r\n                escaped = true;\r\n            } else if (char === QUOTE) {\r\n                this.skip();\r\n                return helper.succeed(result);\r\n            } else {\r\n                result += char;\r\n            }\r\n        }\r\n        return helper\r\n            .addSuggestion(this.cursor, QUOTE) // Always cannot read at this point\r\n            .addErrors(\r\n                EXCEPTIONS.EXPECTED_END_OF_QUOTE.create(\r\n                    start,\r\n                    this.string.length\r\n                )\r\n            )\r\n            .failWithData(result);\r\n    }\r\n    /**\r\n     * Read a string from the string. If it surrounded by quotes, the quotes are ignored.\r\n     * The cursor ends on the last character in the string.\r\n     */\r\n    public readString(\r\n        unquotedRegex: RegExp = StringReader.charAllowedInUnquotedString\r\n    ): ReturnedInfo<string, CE, string | undefined> {\r\n        const helper = new ReturnHelper();\r\n        if (this.canRead() && this.peek() === QUOTE) {\r\n            return helper.return(this.readQuotedString());\r\n        } else {\r\n            if (!this.canRead()) {\r\n                helper.addSuggestions({\r\n                    start: this.cursor,\r\n                    text: QUOTE\r\n                });\r\n            }\r\n            return helper.succeed(this.readWhileRegexp(unquotedRegex));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Read a string which is not surrounded by quotes.\r\n     * Can only contain alphanumerical characters, _,+,. and -\r\n     */\r\n    public readUnquotedString(): string {\r\n        return this.readWhileRegexp(StringReader.charAllowedInUnquotedString);\r\n    }\r\n\r\n    /**\r\n     * Read the string until a certain regular expression matches the\r\n     * character under the cursor.\r\n     * @param exp The Regular expression to test against.\r\n     */\r\n    public readUntilRegexp(exp: RegExp): string {\r\n        return this.readWhileFunction(s => !exp.test(s));\r\n    }\r\n    /**\r\n     * Read while a certain function returns true on each consecutive character starting with the one under the cursor.\r\n     * In most cases, it is better to use readWhileRegexp.\r\n     * @param callback The function to use.\r\n     */\r\n    public readWhileFunction(callback: (char: string) => boolean): string {\r\n        const begin = this.cursor;\r\n        while (callback(this.peek())) {\r\n            if (this.canRead()) {\r\n                this.skip();\r\n            } else {\r\n                return this.string.substring(begin);\r\n            }\r\n        }\r\n        return this.string.substring(begin, this.cursor);\r\n    }\r\n    /**\r\n     * Read the string while a certain regular expression matches the character under the cursor.\r\n     * The cursor ends on the first character which doesn't match\r\n     * @param exp The Regular Expression to test against\r\n     */\r\n    public readWhileRegexp(exp: RegExp): string {\r\n        return this.readWhileFunction(s => exp.test(s));\r\n    }\r\n\r\n    public skip(): void {\r\n        this.cursor++;\r\n    }\r\n    public skipWhitespace(): void {\r\n        this.readWhileRegexp(/\\s/); // Whitespace\r\n    }\r\n    private readOptionInner(\r\n        info: QuotingInfo\r\n    ): ReturnedInfo<string, CE, string | undefined> {\r\n        // tslint:disable:helper-return\r\n        if (info.quote) {\r\n            return this.readString(info.unquoted);\r\n        } else {\r\n            if (info.unquoted) {\r\n                return getReturned(this.readWhileRegexp(info.unquoted));\r\n            } else {\r\n                throw new Error(\r\n                    \"Quoting kind which doesn't support quoting or any characters\"\r\n                );\r\n            }\r\n        }\r\n        // tslint:enable:helper-return\r\n    }\r\n}\r\n\r\nexport function completionForString(\r\n    value: string,\r\n    start: number,\r\n    quoting: QuotingInfo,\r\n    kind?: CompletionItemKind\r\n): Suggestion {\r\n    return { kind, start, text: quoteIfNeeded(value, quoting) };\r\n}\r\n\r\nexport function quoteIfNeeded(\r\n    value: string,\r\n    quoting: QuotingInfo = StringReader.defaultQuotingInfo\r\n): string {\r\n    if (!quoting.quote) {\r\n        return value;\r\n    } else {\r\n        if (quoting.unquoted) {\r\n            for (const char of value) {\r\n                if (!char.match(quoting.unquoted)) {\r\n                    return QUOTE + escapeQuotes(value) + QUOTE;\r\n                }\r\n            }\r\n            return value;\r\n        }\r\n        return QUOTE + escapeQuotes(value) + QUOTE;\r\n    }\r\n}\r\n\r\nfunction escapeQuotes(value: string): string {\r\n    return value.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"');\r\n}\r\n\r\nexport const READER_EXCEPTIONS = EXCEPTIONS;\r\n","import { CompletionItemKind } from \"vscode-languageserver/lib/main\";\r\nimport { prepareForParser } from \"../../misc-functions\";\r\nimport { Parser } from \"../../types\";\r\n\r\nexport const boolParser: Parser = {\r\n    kind: CompletionItemKind.Keyword,\r\n    parse: (reader, props) => prepareForParser(reader.readBoolean(), props)\r\n};\r\n","import { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { ReturnHelper } from \"../../misc-functions\";\r\nimport { Parser } from \"../../types\";\r\n\r\n// tslint:disable:binary-expression-operand-order\r\n// Approx\r\nconst JAVAMINDOUBLE = -1.8 * 10 ** 308;\r\nconst JAVAMAXDOUBLE = 1.8 * 10 ** 308;\r\n// tslint:enable:binary-expression-operand-order\r\n\r\nconst DOUBLEEXCEPTIONS = {\r\n    TOOBIG: new CommandErrorBuilder(\r\n        \"argument.double.big\",\r\n        \"Float must not be more than %s, found %s\"\r\n    ),\r\n    TOOSMALL: new CommandErrorBuilder(\r\n        \"argument.double.low\",\r\n        \"Float must not be less than %s, found %s\"\r\n    )\r\n};\r\n\r\nexport const doubleParser: Parser = {\r\n    parse: (reader, properties) => {\r\n        const helper = new ReturnHelper(properties);\r\n        const start = reader.cursor;\r\n        const result = reader.readFloat();\r\n        if (!helper.merge(result)) {\r\n            return helper.fail();\r\n        }\r\n        const maxVal = properties.node_properties.max;\r\n        const minVal = properties.node_properties.min;\r\n        // See https://stackoverflow.com/a/12957445\r\n        const max = Math.min(\r\n            typeof maxVal === \"number\" ? maxVal : JAVAMAXDOUBLE,\r\n            JAVAMAXDOUBLE\r\n        );\r\n        const min = Math.max(\r\n            typeof minVal === \"number\" ? minVal : JAVAMINDOUBLE,\r\n            JAVAMINDOUBLE\r\n        );\r\n        if (result.data > max) {\r\n            helper.addErrors(\r\n                DOUBLEEXCEPTIONS.TOOBIG.create(\r\n                    start,\r\n                    reader.cursor,\r\n                    max.toString(),\r\n                    result.data.toString()\r\n                )\r\n            );\r\n        }\r\n        if (result.data < min) {\r\n            helper.addErrors(\r\n                DOUBLEEXCEPTIONS.TOOSMALL.create(\r\n                    start,\r\n                    reader.cursor,\r\n                    min.toString(),\r\n                    result.data.toString()\r\n                )\r\n            );\r\n        }\r\n        return helper.succeed();\r\n    }\r\n};\r\n","import { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { ReturnHelper } from \"../../misc-functions\";\r\nimport { Parser } from \"../../types\";\r\n\r\n// tslint:disable:binary-expression-operand-order\r\n// Approx\r\nconst JAVAMINFLOAT = -3.4 * 10 ** 38;\r\nconst JAVAMAXFLOAT = 3.4 * 10 ** 38;\r\n// tslint:enable:binary-expression-operand-order\r\n\r\nconst FLOATEXCEPTIONS = {\r\n    TOOBIG: new CommandErrorBuilder(\r\n        \"argument.float.big\",\r\n        \"Float must not be more than %s, found %s\"\r\n    ),\r\n    TOOSMALL: new CommandErrorBuilder(\r\n        \"argument.float.low\",\r\n        \"Float must not be less than %s, found %s\"\r\n    )\r\n};\r\n\r\nexport const floatParser: Parser = {\r\n    parse: (reader, properties) => {\r\n        const helper = new ReturnHelper(properties);\r\n        const start = reader.cursor;\r\n        const result = reader.readFloat();\r\n        if (!helper.merge(result)) {\r\n            return helper.fail();\r\n        }\r\n        const maxVal = properties.node_properties.max;\r\n        const minVal = properties.node_properties.min;\r\n        // See https://stackoverflow.com/a/12957445\r\n        const max = Math.min(\r\n            typeof maxVal === \"number\" ? maxVal : JAVAMAXFLOAT,\r\n            JAVAMAXFLOAT\r\n        );\r\n        const min = Math.max(\r\n            typeof minVal === \"number\" ? minVal : JAVAMINFLOAT,\r\n            JAVAMINFLOAT\r\n        );\r\n        if (result.data > max) {\r\n            helper.addErrors(\r\n                FLOATEXCEPTIONS.TOOBIG.create(\r\n                    start,\r\n                    reader.cursor,\r\n                    max.toString(),\r\n                    result.data.toString()\r\n                )\r\n            );\r\n        }\r\n        if (result.data < min) {\r\n            helper.addErrors(\r\n                FLOATEXCEPTIONS.TOOSMALL.create(\r\n                    start,\r\n                    reader.cursor,\r\n                    min.toString(),\r\n                    result.data.toString()\r\n                )\r\n            );\r\n        }\r\n        return helper.succeed();\r\n    }\r\n};\r\n","import { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { JAVAMAXINT, JAVAMININT } from \"../../consts\";\r\nimport { ReturnHelper } from \"../../misc-functions\";\r\nimport { Parser } from \"../../types\";\r\n\r\nconst INTEGEREXCEPTIONS = {\r\n    TOOBIG: new CommandErrorBuilder(\r\n        \"argument.integer.big\",\r\n        \"Integer must not be more than %s, found %s\"\r\n    ),\r\n    TOOSMALL: new CommandErrorBuilder(\r\n        \"argument.integer.low\",\r\n        \"Integer must not be less than %s, found %s\"\r\n    )\r\n};\r\n\r\nexport const intParser: Parser = {\r\n    parse: (reader, properties) => {\r\n        const helper = new ReturnHelper(properties);\r\n        const start = reader.cursor;\r\n        const result = reader.readInt();\r\n        if (!helper.merge(result)) {\r\n            return helper.fail();\r\n        }\r\n        const maxVal = properties.node_properties.max;\r\n        const minVal = properties.node_properties.min;\r\n        // See https://stackoverflow.com/a/12957445\r\n        const max = Math.min(\r\n            typeof maxVal === \"number\" ? maxVal : JAVAMAXINT,\r\n            JAVAMAXINT\r\n        );\r\n        const min = Math.max(\r\n            typeof minVal === \"number\" ? minVal : JAVAMININT,\r\n            JAVAMININT\r\n        );\r\n        if (result.data > max) {\r\n            helper.addErrors(\r\n                INTEGEREXCEPTIONS.TOOBIG.create(\r\n                    start,\r\n                    reader.cursor,\r\n                    max.toString(),\r\n                    result.data.toString()\r\n                )\r\n            );\r\n        }\r\n        if (result.data < min) {\r\n            helper.addErrors(\r\n                INTEGEREXCEPTIONS.TOOSMALL.create(\r\n                    start,\r\n                    reader.cursor,\r\n                    min.toString(),\r\n                    result.data.toString()\r\n                )\r\n            );\r\n        }\r\n        return helper.succeed();\r\n    }\r\n};\r\n","import { ReturnHelper } from \"../../misc-functions\";\r\nimport { Parser } from \"../../types\";\r\n\r\nexport const stringParser: Parser = {\r\n    parse: (reader, properties) => {\r\n        const helper = new ReturnHelper(properties);\r\n        switch (properties.node_properties.type) {\r\n            case \"greedy\":\r\n                reader.cursor = reader.string.length;\r\n                return helper.succeed();\r\n            case \"word\":\r\n                reader.readUnquotedString();\r\n                return helper.succeed();\r\n            default:\r\n                if (helper.merge(reader.readString())) {\r\n                    return helper.succeed();\r\n                } else {\r\n                    return helper.fail();\r\n                }\r\n        }\r\n    }\r\n};\r\n","export * from \"./bool\";\r\nexport * from \"./double\";\r\nexport * from \"./float\";\r\nexport * from \"./integer\";\r\nexport * from \"./string\";\r\n","import { CompletionItemKind } from \"vscode-languageserver/lib/main\";\r\nimport { ReturnHelper } from \"../misc-functions\";\r\nimport { Parser } from \"../types\";\r\n\r\nexport const literalParser: Parser = {\r\n    kind: CompletionItemKind.Method,\r\n    parse: (reader, properties) => {\r\n        const helper = new ReturnHelper(properties);\r\n        const begin = reader.cursor;\r\n        const literal = properties.path[properties.path.length - 1];\r\n        if (\r\n            properties.suggesting &&\r\n            literal.startsWith(reader.getRemaining())\r\n        ) {\r\n            helper.addSuggestions(literal);\r\n        }\r\n        if (reader.canRead(literal.length)) {\r\n            const end = begin + literal.length;\r\n            if (reader.string.substring(begin, end) === literal) {\r\n                reader.cursor = end;\r\n                if (reader.peek() === \" \" || !reader.canRead()) {\r\n                    return helper.succeed();\r\n                }\r\n            }\r\n        }\r\n        return helper.fail();\r\n    }\r\n};\r\n","import { Range } from \"vscode-languageserver\";\r\n\r\nimport { GlobalData } from \"../data/types\";\r\nimport { PackLocationSegments } from \"../misc-functions\";\r\nimport { CommandData, LineRange } from \"../types\";\r\nimport { ReturnAssertionInfo, TestParserInfo } from \"./assertions\";\r\n\r\n/**\r\n * Blank items for testing\r\n */\r\n\r\n// tslint:disable-next-line:variable-name This allows for the property declaration shorthand\r\nexport const pack_segments: PackLocationSegments = {\r\n    pack: \"\",\r\n    packsFolder: \"\",\r\n    rest: \"\"\r\n};\r\n\r\nexport const succeeds: ReturnAssertionInfo = { succeeds: true };\r\n\r\nexport const emptyRange = (): LineRange => ({ start: 0, end: 0 });\r\nexport const blankproperties: TestParserInfo = {\r\n    context: {},\r\n    data: {} as CommandData,\r\n    node_properties: {},\r\n    path: [\"test\"]\r\n};\r\n\r\nexport const emptyGlobal: GlobalData = {\r\n    blocks: {},\r\n    commands: { type: \"root\" },\r\n    items: [],\r\n    jsonService: undefined as any,\r\n    meta_info: { version: \"\" },\r\n    nbt_docs: new Map(),\r\n    resources: {}\r\n};\r\n\r\nexport const blankRange: Range = {\r\n    end: { line: 0, character: 0 },\r\n    start: { line: 0, character: 0 }\r\n};\r\n","import { CommandErrorBuilder } from \"../../../../brigadier/errors\";\r\nimport { StringReader } from \"../../../../brigadier/string-reader\";\r\nimport { ReturnHelper } from \"../../../../misc-functions\";\r\nimport { LineRange, ReturnedInfo, ReturnSuccess } from \"../../../../types\";\r\nimport { parseAnyNBTTag } from \"../tag-parser\";\r\nimport { NodeInfo } from \"../util/doc-walker-util\";\r\nimport {\r\n    getHoverText,\r\n    getNBTSuggestions,\r\n    LIST_END,\r\n    LIST_VALUE_SEP\r\n} from \"../util/nbt-util\";\r\nimport { NBTWalker } from \"../walker\";\r\nimport { NBTTag } from \"./nbt-tag\";\r\n\r\nconst NOVAL = new CommandErrorBuilder(\r\n    \"argument.nbt.list.noval\",\r\n    \"Expected ']'\"\r\n);\r\n\r\nexport abstract class BaseList extends NBTTag {\r\n    protected end: LineRange | undefined;\r\n    protected abstract start: LineRange;\r\n    protected unclosed: number | undefined;\r\n    protected values: NBTTag[] = [];\r\n\r\n    public getValue(): NBTTag[] {\r\n        return this.values;\r\n    }\r\n\r\n    public parseInner(reader: StringReader): ReturnedInfo<undefined> {\r\n        const helper = new ReturnHelper();\r\n        if (helper.merge(reader.expect(LIST_END), { errors: false })) {\r\n            return helper.succeed();\r\n        }\r\n        let index = 0;\r\n        while (true) {\r\n            this.unclosed = reader.cursor;\r\n            const start = reader.cursor;\r\n            reader.skipWhitespace();\r\n            if (!reader.canRead()) {\r\n                helper.addErrors(NOVAL.create(start, reader.cursor));\r\n                return helper.fail();\r\n            }\r\n            const value = parseAnyNBTTag(reader, [\r\n                ...this.path,\r\n                `[${index++}]`\r\n            ]);\r\n            if (helper.merge(value)) {\r\n                this.values.push(value.data.tag);\r\n            } else {\r\n                if (value.data) {\r\n                    this.values.push(value.data.tag);\r\n                    this.unclosed = undefined;\r\n                }\r\n                return helper.fail();\r\n            }\r\n            this.unclosed = undefined;\r\n            const preEnd = reader.cursor;\r\n            reader.skipWhitespace();\r\n            if (\r\n                helper.merge(reader.expect(LIST_VALUE_SEP), { errors: false })\r\n            ) {\r\n                continue;\r\n            }\r\n            if (helper.merge(reader.expect(LIST_END), { errors: false })) {\r\n                this.end = { start: preEnd, end: reader.cursor };\r\n                return helper.succeed();\r\n            }\r\n            return helper.fail(NOVAL.create(preEnd, reader.cursor));\r\n        }\r\n    }\r\n\r\n    public setValue(val: NBTTag[]): this {\r\n        this.values = val;\r\n        return this;\r\n    }\r\n\r\n    public validateWith(\r\n        node: NodeInfo,\r\n        children: NodeInfo,\r\n        walker: NBTWalker\r\n    ): ReturnSuccess<undefined> {\r\n        const helper = new ReturnHelper();\r\n        helper.addActions({\r\n            data: getHoverText(node.node),\r\n            high: this.start.end,\r\n            low: this.start.start,\r\n            type: \"hover\"\r\n        });\r\n        for (const value of this.values) {\r\n            helper.merge(value.validate(children, walker));\r\n        }\r\n        if (typeof this.unclosed === \"number\") {\r\n            helper.merge(getNBTSuggestions(children.node, this.unclosed));\r\n        }\r\n        if (this.end) {\r\n            helper.addActions({\r\n                data: getHoverText(node.node),\r\n                high: this.start.end,\r\n                low: this.start.start,\r\n                type: \"hover\"\r\n            });\r\n        }\r\n        return helper.succeed();\r\n    }\r\n}\r\n","import {\r\n    CompoundNode,\r\n    FunctionNode,\r\n    ListNode,\r\n    NBTNode,\r\n    NoPropertyNode,\r\n    RefNode,\r\n    RootNode\r\n} from \"mc-nbt-paths\";\r\nimport * as path from \"path\";\r\n\r\nimport * as url from \"url\";\r\nimport { DiagnosticSeverity } from \"vscode-languageserver/lib/main\";\r\nimport { CommandErrorBuilder } from \"../../../../brigadier/errors\";\r\nimport { NBTTagCompound } from \"../tag/compound-tag\";\r\nimport { BaseList } from \"../tag/lists\";\r\nimport { NBTTag } from \"../tag/nbt-tag\";\r\n\r\nexport const parseRefPath = (\r\n    ref: string,\r\n    currentPath: string\r\n): [string, string[]] => {\r\n    const cpd = path.dirname(currentPath);\r\n    const refurl = url.parse(ref);\r\n    const fragPath = (refurl.hash || \"#\")\r\n        .substring(1)\r\n        .split(\"/\")\r\n        .filter(v => v !== \"\");\r\n    const nextPath = path.posix.join(\r\n        cpd,\r\n        refurl.path || path.basename(currentPath)\r\n    );\r\n    return [nextPath, fragPath];\r\n};\r\n\r\nexport function getNBTTagFromTree(\r\n    tag: NBTTag,\r\n    nbtPath: string[]\r\n): NBTTag | undefined {\r\n    let lastTag: NBTTag | undefined = tag;\r\n    for (const s of nbtPath) {\r\n        // tslint:disable:no-require-imports This fixes a circular dependency issue\r\n        if (\r\n            lastTag instanceof require(\"../tag/lists\").BaseList &&\r\n            /\\d+/.test(s)\r\n        ) {\r\n            lastTag = (lastTag as BaseList).getValue()[parseInt(s, 10)];\r\n        } else if (lastTag instanceof require(\"../tag/compound-tag\").BaseList) {\r\n            lastTag = (lastTag as NBTTagCompound).getValue().get(s);\r\n        } else {\r\n            return undefined;\r\n        }\r\n        // tslint:enable:no-require-imports\r\n    }\r\n    return lastTag;\r\n}\r\n\r\n/**\r\n * type parameter N is used to allow passing nodes whose type have already been determined\r\n */\r\nexport interface NodeInfo<N extends NBTNode = NBTNode> {\r\n    readonly node: N;\r\n    readonly path: string;\r\n}\r\n\r\nexport function isRefNode(node: NBTNode): node is RefNode {\r\n    return node.hasOwnProperty(\"ref\");\r\n}\r\n\r\nexport function isFunctionNode(node: NBTNode): node is FunctionNode {\r\n    return node.hasOwnProperty(\"function\");\r\n}\r\n\r\nexport type TypedNode = NoPropertyNode | CompoundNode | ListNode | RootNode;\r\nexport function isTypedNode(node: NBTNode): node is TypedNode {\r\n    return node.hasOwnProperty(\"type\");\r\n}\r\n\r\nexport function isCompoundNode(node: NBTNode): node is CompoundNode {\r\n    return isTypedNode(node) && node.type === \"compound\";\r\n}\r\n\r\nexport function isRootNode(node: NBTNode): node is RootNode {\r\n    return isTypedNode(node) && node.type === \"root\";\r\n}\r\n\r\nexport function isListNode(node: NBTNode): node is ListNode {\r\n    return isTypedNode(node) && node.type === \"list\";\r\n}\r\n\r\n// Return type is a lie to allow using the convert function below\r\nexport function isNoNBTNode(node: NBTNode): node is NoPropertyNode {\r\n    return isTypedNode(node) && node.type === \"no-nbt\";\r\n}\r\n\r\nexport const isRefInfo = convert(isRefNode);\r\nexport const isFunctionInfo = convert(isFunctionNode);\r\nexport const isTypedInfo = convert(isTypedNode);\r\nexport const isCompoundInfo = convert(isCompoundNode);\r\nexport const isRootInfo = convert(isRootNode);\r\nexport const isListInfo = convert(isListNode);\r\nexport const isNoNBTInfo = convert(isNoNBTNode);\r\n\r\nfunction convert<T extends NBTNode>(\r\n    f: (node: NBTNode) => node is T\r\n): (info: NodeInfo<any>) => info is NodeInfo<T> {\r\n    return (info): info is NodeInfo<T> => f(info.node);\r\n}\r\n\r\nexport interface NBTValidationInfo {\r\n    endPos: number;\r\n    extraChildren: boolean;\r\n    compoundMerge(): CompoundNode; // This is so the compound parser can merge child ref on call\r\n}\r\n\r\nexport const VALIDATION_ERRORS = {\r\n    badIndex: new CommandErrorBuilder(\r\n        \"argument.nbt.validation.list.badpath\",\r\n        \"The index '%s' is not a valid index\"\r\n    ),\r\n    noSuchChild: new CommandErrorBuilder(\r\n        \"argument.nbt.validation.compound.nochild\",\r\n        \"The tag does not have a child named '%s'\",\r\n        DiagnosticSeverity.Warning\r\n    ),\r\n    wrongType: new CommandErrorBuilder(\r\n        \"argument.nbt.validation.wrongtype\",\r\n        \"Expected nbt value to be %s, got %s\"\r\n    )\r\n};\r\n","import { NBTNode, NoPropertyNode } from \"mc-nbt-paths\";\r\nimport { StringReader } from \"../../../../brigadier/string-reader\";\r\nimport { ReturnHelper } from \"../../../../misc-functions\";\r\nimport { emptyRange } from \"../../../../test/blanks\";\r\nimport {\r\n    CE,\r\n    LineRange,\r\n    ReturnedInfo,\r\n    ReturnSuccess,\r\n    SubAction\r\n} from \"../../../../types\";\r\nimport {\r\n    isTypedInfo,\r\n    NodeInfo,\r\n    VALIDATION_ERRORS\r\n} from \"../util/doc-walker-util\";\r\nimport { Correctness, getHoverText } from \"../util/nbt-util\";\r\nimport { NBTWalker } from \"../walker\";\r\n\r\nexport type ParseReturn = ReturnedInfo<Correctness, CE, Correctness>;\r\nexport type TagType =\r\n    | \"byte\"\r\n    | \"short\"\r\n    | \"int\"\r\n    | \"long\"\r\n    | \"float\"\r\n    | \"double\"\r\n    | \"byte_array\"\r\n    | \"int_array\"\r\n    | \"long_array\"\r\n    | \"string\"\r\n    | \"list\"\r\n    | \"compound\";\r\n\r\nexport abstract class NBTTag {\r\n    protected path: string[];\r\n    protected range: LineRange = emptyRange();\r\n    protected abstract tagType?: TagType;\r\n\r\n    public constructor(path: string[]) {\r\n        this.path = path;\r\n    }\r\n    public getRange(): LineRange {\r\n        return this.range;\r\n    }\r\n\r\n    public abstract getValue(): any;\r\n\r\n    public parse(reader: StringReader): ParseReturn {\r\n        this.range.start = reader.cursor;\r\n        const out = this.readTag(reader);\r\n        this.range.end = reader.cursor;\r\n        // tslint:disable:helper-return\r\n        return out;\r\n    }\r\n\r\n    public abstract setValue(val: any): this;\r\n\r\n    public validate(\r\n        node: NodeInfo,\r\n        // tslint:disable-next-line:variable-name\r\n        _walker: NBTWalker\r\n    ): ReturnSuccess<undefined> {\r\n        const helper = new ReturnHelper();\r\n        const result = this.sameType(node);\r\n        if (!helper.merge(result)) {\r\n            return helper.succeed();\r\n        }\r\n        helper.addActions(this.rangeHover(node.node));\r\n        return helper.succeed();\r\n    }\r\n\r\n    protected rangeHover(\r\n        node: NBTNode,\r\n        range: LineRange = this.range\r\n    ): SubAction {\r\n        return {\r\n            data: getHoverText(node),\r\n            high: range.end,\r\n            low: range.start,\r\n            type: \"hover\"\r\n        };\r\n    }\r\n\r\n    protected abstract readTag(reader: StringReader): ParseReturn;\r\n\r\n    protected sameType(\r\n        node: NodeInfo,\r\n        type: string = this.tagType || \"\"\r\n    ): ReturnedInfo<undefined> {\r\n        const helper = new ReturnHelper();\r\n        if (!isTypedInfo(node) || (node.node as NoPropertyNode).type !== type) {\r\n            return helper.fail(\r\n                VALIDATION_ERRORS.wrongType.create(\r\n                    this.range.start,\r\n                    this.range.end,\r\n                    (node.node as NoPropertyNode).type || \"\",\r\n                    type\r\n                )\r\n            );\r\n        }\r\n        return helper.succeed();\r\n    }\r\n}\r\n","import { QUOTE, StringReader } from \"../../../../brigadier/string-reader\";\r\nimport { ReturnHelper } from \"../../../../misc-functions\";\r\nimport { Correctness } from \"../util/nbt-util\";\r\nimport { NBTTag, ParseReturn } from \"./nbt-tag\";\r\n\r\nexport class NBTTagString extends NBTTag {\r\n    protected tagType: \"string\" = \"string\";\r\n    protected value = \"\";\r\n\r\n    public getValue(): string {\r\n        return this.value;\r\n    }\r\n\r\n    public setValue(val: string): this {\r\n        this.value = val;\r\n        return this;\r\n    }\r\n\r\n    protected readTag(reader: StringReader): ParseReturn {\r\n        const helper = new ReturnHelper();\r\n        const quoted = reader.peek() === QUOTE;\r\n        const str = reader.readString();\r\n        if (helper.merge(str)) {\r\n            this.value = str.data;\r\n            if (quoted) {\r\n                return helper.succeed(Correctness.CERTAIN);\r\n            }\r\n            if (str.data.length === 0) {\r\n                // E.g. `{`, clearly it is not an unquoted string\r\n                return helper.failWithData(Correctness.NO);\r\n            }\r\n            return helper.succeed(Correctness.MAYBE);\r\n        } else {\r\n            if (quoted) {\r\n                return helper.failWithData(Correctness.CERTAIN);\r\n            }\r\n            return helper.failWithData(Correctness.NO);\r\n        }\r\n    }\r\n}\r\n","import { FunctionNode } from \"mc-nbt-paths\";\r\nimport * as path from \"path\";\r\nimport { sprintf } from \"sprintf-js\";\r\nimport { NBTTag } from \"./tag/nbt-tag\";\r\nimport { NBTTagString } from \"./tag/string-tag\";\r\nimport { getNBTTagFromTree } from \"./util/doc-walker-util\";\r\n\r\ninterface PathFunctions {\r\n    [key: string]: PathFunc;\r\n}\r\n\r\ninterface SuggestFuncs {\r\n    [key: string]: SuggestFunc;\r\n}\r\n\r\ntype PathFunc = (\r\n    parsed: NBTTag | undefined,\r\n    nbtPath: string[],\r\n    node: FunctionNode,\r\n    args: any\r\n) => string;\r\ntype SuggestFunc = (func: string, args: any) => string[];\r\n\r\nconst pathsFuncs: PathFunctions = {\r\n    insertStringNBT\r\n};\r\n\r\nexport function runNodeFunction(\r\n    nbtPath: string[],\r\n    node: FunctionNode,\r\n    parsed: NBTTag | undefined\r\n): string {\r\n    return pathsFuncs[node.function.id](\r\n        parsed,\r\n        nbtPath,\r\n        node,\r\n        node.function.params\r\n    );\r\n}\r\n\r\nconst suggestFuncs: SuggestFuncs = {};\r\n\r\ninterface InsertStringNBTArgs {\r\n    default: string;\r\n    ref: string;\r\n    tag_path: string;\r\n}\r\n\r\nfunction insertStringNBT(\r\n    parsed: NBTTag | undefined,\r\n    nbtPath: string[],\r\n    _: FunctionNode,\r\n    args: InsertStringNBTArgs\r\n): string {\r\n    if (!parsed) {\r\n        return args.default;\r\n    }\r\n    const newRef = path.posix\r\n        .join(path.dirname(nbtPath.join(\"/\")), args.tag_path)\r\n        .split(\"/\");\r\n    const out = getNBTTagFromTree(parsed, newRef);\r\n    return !out || !(out instanceof NBTTagString)\r\n        ? args.default\r\n        : sprintf(args.ref, out.getValue());\r\n}\r\n\r\n// Suggest function\r\n\r\nexport function runSuggestFunction(func: string, args: any): string[] {\r\n    return suggestFuncs[func](func, args);\r\n}\r\n","import { NBTNode } from \"mc-nbt-paths\";\r\nimport { StringReader } from \"../../../../brigadier/string-reader\";\r\nimport { ReturnHelper } from \"../../../../misc-functions\";\r\nimport { ReturnedInfo, ReturnSuccess } from \"../../../../types\";\r\nimport { runSuggestFunction } from \"../doc-walker-func\";\r\nimport { TagType } from \"../tag/nbt-tag\";\r\nimport {\r\n    isNoNBTNode,\r\n    isRootNode,\r\n    isTypedNode,\r\n    TypedNode\r\n} from \"./doc-walker-util\";\r\n\r\nexport const ARRAY_START = \"[\";\r\nexport const ARRAY_END = \"]\";\r\nexport const ARRAY_PREFIX_SEP = \";\";\r\nexport const ARRAY_VALUE_SEP = \",\";\r\n\r\nexport const LIST_START = \"[\";\r\nexport const LIST_END = \"]\";\r\nexport const LIST_VALUE_SEP = \",\";\r\n\r\nexport const COMPOUND_START = \"{\";\r\nexport const COMPOUND_END = \"}\";\r\nexport const COMPOUND_KEY_VALUE_SEP = \":\";\r\nexport const COMPOUND_PAIR_SEP = \",\";\r\n\r\nexport interface NBTErrorData {\r\n    correct: Correctness;\r\n}\r\n\r\nexport enum Correctness {\r\n    NO = 0,\r\n    MAYBE = 1,\r\n    CERTAIN = 2\r\n}\r\n\r\nexport function tryExponential(reader: StringReader): ReturnedInfo<number> {\r\n    const helper = new ReturnHelper();\r\n    const f = reader.readFloat();\r\n    if (!helper.merge(f, { errors: false })) {\r\n        return helper.fail();\r\n    }\r\n    const cur = reader.peek();\r\n    if (!(cur === \"e\" || cur === \"E\")) {\r\n        return helper.fail();\r\n    }\r\n    reader.skip();\r\n    // Returns beyond here because it must be scientific notation\r\n    const exp = reader.readInt();\r\n    if (helper.merge(exp)) {\r\n        return helper.succeed(f.data * Math.pow(10, exp.data));\r\n    } else {\r\n        return helper.fail();\r\n    }\r\n}\r\n\r\nconst suggestTypes: { [k in TypedNode[\"type\"]]?: string } = {\r\n    byte_array: \"[B;\",\r\n    compound: \"{\",\r\n    int_array: \"[I;\",\r\n    list: \"[\",\r\n    long_array: \"[L;\"\r\n};\r\n\r\nexport function getStartSuggestion(node: NBTNode): string | undefined {\r\n    if (isTypedNode(node) && suggestTypes.hasOwnProperty(node.type)) {\r\n        return suggestTypes[node.type];\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function getNBTSuggestions(\r\n    node: NBTNode,\r\n    cursor: number\r\n): ReturnSuccess<undefined> {\r\n    const helper = new ReturnHelper();\r\n    if (node.suggestions) {\r\n        const sugg = node.suggestions;\r\n        if (sugg) {\r\n            sugg.forEach(v => {\r\n                if (typeof v === \"string\") {\r\n                    helper.addSuggestions({ start: cursor, text: v });\r\n                } else if (\"function\" in v) {\r\n                    runSuggestFunction(\r\n                        v.function.id,\r\n                        v.function.params\r\n                    ).forEach(v2 =>\r\n                        helper.addSuggestions({ start: cursor, text: v2 })\r\n                    );\r\n                } else {\r\n                    helper.addSuggestions({\r\n                        description: v.description,\r\n                        start: cursor,\r\n                        text: v.value\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    } else {\r\n        const start = getStartSuggestion(node);\r\n        if (start) {\r\n            helper.addSuggestion(cursor, start);\r\n        }\r\n    }\r\n    /* if (isCompoundNode(node) && node.children) {\r\n        helper.addSuggestions(\r\n            ...Object.keys(node.children).map<SuggestResult>(v => ({\r\n                // @ts-ignore\r\n                description: node.children[v].description,\r\n                start: cursor,\r\n                text: v\r\n            }))\r\n        );\r\n    } else if (isListNode(node) && node.item) {\r\n        helper.mergeChain(getNBTSuggestions(node.item, cursor));\r\n    } */\r\n    return helper.succeed();\r\n}\r\n\r\nexport function createSuggestions(\r\n    node: NBTNode,\r\n    cursor: number\r\n): ReturnSuccess<undefined> {\r\n    const helper = new ReturnHelper();\r\n    const sugg = node.suggestions;\r\n    if (sugg) {\r\n        sugg.forEach(v => {\r\n            if (typeof v === \"string\") {\r\n                helper.addSuggestion(cursor, v);\r\n            } else if (\"function\" in v) {\r\n                runSuggestFunction(v.function.id, v.function.params).forEach(\r\n                    v2 => helper.addSuggestion(cursor, v2)\r\n                );\r\n            } else {\r\n                helper.addSuggestion(cursor, v.value, undefined, v.description);\r\n            }\r\n        });\r\n    }\r\n    return helper.succeed();\r\n}\r\n\r\nexport const tagid2Name: { [Type in TagType]: string } = {\r\n    byte: \"byte\",\r\n    byte_array: \"byte[]\",\r\n    compound: \"compound\",\r\n    double: \"double\",\r\n    float: \"float\",\r\n    int: \"int\",\r\n    int_array: \"int[]\",\r\n    list: \"list\",\r\n    long: \"long\",\r\n    long_array: \"long[]\",\r\n    short: \"short\",\r\n    string: \"string\"\r\n};\r\n\r\nexport const getHoverText = (node: NBTNode) => {\r\n    const desc = node.description || \"\";\r\n    if (!isTypedNode(node)) {\r\n        return desc;\r\n    }\r\n    if (isRootNode(node)) {\r\n        return desc;\r\n    }\r\n    if (isNoNBTNode(node)) {\r\n        return desc;\r\n    }\r\n    return `(${tagid2Name[node.type]}) ${desc}`;\r\n};\r\n","import { CompoundNode, NBTNode } from \"mc-nbt-paths\";\r\nimport { __values } from \"tslib\";\r\nimport { CompletionItemKind } from \"vscode-languageserver\";\r\nimport {\r\n    CommandError,\r\n    CommandErrorBuilder\r\n} from \"../../../../brigadier/errors\";\r\nimport {\r\n    quoteIfNeeded,\r\n    StringReader\r\n} from \"../../../../brigadier/string-reader\";\r\nimport { ReturnHelper } from \"../../../../misc-functions\";\r\nimport { LineRange, ReturnSuccess, SubAction } from \"../../../../types\";\r\nimport { parseAnyNBTTag } from \"../tag-parser\";\r\nimport { NodeInfo } from \"../util/doc-walker-util\";\r\nimport {\r\n    COMPOUND_END,\r\n    COMPOUND_KEY_VALUE_SEP,\r\n    COMPOUND_PAIR_SEP,\r\n    COMPOUND_START,\r\n    Correctness,\r\n    createSuggestions,\r\n    getHoverText,\r\n    getStartSuggestion\r\n} from \"../util/nbt-util\";\r\nimport { NBTWalker } from \"../walker\";\r\nimport { NBTTag, ParseReturn } from \"./nbt-tag\";\r\n\r\nconst NO_KEY = new CommandErrorBuilder(\r\n    \"argument.nbt.compound.nokey\",\r\n    \"Expected key\"\r\n);\r\nconst NO_VAL = new CommandErrorBuilder(\r\n    \"argument.nbt.compound.noval\",\r\n    \"Expected value\"\r\n);\r\n\r\nexport interface KVPair {\r\n    /** The position the last part was closed at */\r\n    closeIdx?: number;\r\n    key?: string;\r\n    keyRange: LineRange;\r\n    value?: NBTTag;\r\n}\r\n\r\nconst UNKNOWN = new CommandErrorBuilder(\r\n    \"argument.nbt.compound.unknown\",\r\n    \"Unknown child '%s'\"\r\n);\r\nconst DUPLICATE = new CommandErrorBuilder(\r\n    \"argument.nbt.compound.duplicate\",\r\n    \"'%s' is already defined\"\r\n);\r\nconst UNCLOSED = new CommandErrorBuilder(\r\n    \"argument.nbt.compound.unclosed\",\r\n    \"Compound is not closed, expected `}`\"\r\n);\r\n\r\nexport interface UnknownsError extends CommandError {\r\n    path: string[];\r\n}\r\n\r\n/**\r\n * TODO: refactor (again)!\r\n * Help welcome\r\n */\r\nexport class NBTTagCompound extends NBTTag {\r\n    protected tagType: \"compound\" = \"compound\";\r\n    protected value: Map<string, NBTTag> = new Map();\r\n    private openIndex = -1;\r\n    /**\r\n     * If empty => no values, closed instantly (e.g. `{}`, `{ }`)\r\n     * If last has no key => no key straight after the `{` or `,`\r\n     * (with spaces) or key could not be parsed (e.g. `{\"no-close-quote`)\r\n     * If last has key but no closed, then it is the last item (e.g. `{\"key\"`,{key)\r\n     * If last has key but closed, it has been unparseable either due to an invalid\r\n     * character after or within the strin\r\n     */\r\n    private readonly parts: KVPair[] = [];\r\n\r\n    public getValue(): Map<string, NBTTag> {\r\n        return this.value;\r\n    }\r\n\r\n    public setValue(val: Map<string, NBTTag>): this {\r\n        this.value = val;\r\n        return this;\r\n    }\r\n\r\n    public validate(\r\n        anyInfo: NodeInfo,\r\n        walker: NBTWalker\r\n    ): ReturnSuccess<undefined> {\r\n        const helper = new ReturnHelper();\r\n        if (this.openIndex === -1) {\r\n            // This should never happen\r\n            createSuggestions(anyInfo.node, this.range.end);\r\n            return helper.succeed();\r\n        }\r\n        const result = this.sameType(anyInfo);\r\n        if (!helper.merge(result)) {\r\n            return helper.succeed();\r\n        }\r\n        const info = anyInfo as NodeInfo<CompoundNode>;\r\n        const hoverText = getHoverText(anyInfo.node);\r\n        if (this.parts.length === 0) {\r\n            helper.addActions({\r\n                // Add the hover over the entire object\r\n                data: hoverText,\r\n                high: this.range.end,\r\n                low: this.openIndex,\r\n                type: \"hover\"\r\n            });\r\n            return helper.succeed();\r\n        }\r\n        helper.addActions({\r\n            // Add hover to the open `{`\r\n            data: hoverText,\r\n            high: this.openIndex + 1,\r\n            low: this.openIndex,\r\n            type: \"hover\"\r\n        });\r\n        const children = walker.getChildren(info);\r\n        for (let index = 0; index < this.parts.length; index++) {\r\n            const part = this.parts[index];\r\n            const final = index === this.parts.length - 1;\r\n            if (part.key) {\r\n                if (part.value) {\r\n                    const child = children[part.key];\r\n                    if (child) {\r\n                        helper.merge(part.value.validate(child, walker));\r\n                        helper.addActions(\r\n                            getKeyHover(part.keyRange, child.node)\r\n                        );\r\n                    } else if (!walker.allowsUnknowns(info)) {\r\n                        const error: UnknownsError = {\r\n                            ...UNKNOWN.create(\r\n                                part.keyRange.start,\r\n                                part.keyRange.end,\r\n                                part.key\r\n                            ),\r\n                            path: [...this.path, part.key]\r\n                        };\r\n                        helper.addErrors(error);\r\n                    }\r\n                } else {\r\n                    helper.merge(handleNoValue(part));\r\n                }\r\n            } else {\r\n                helper.merge(handleNoValue(part));\r\n            }\r\n            if (final && part.value && typeof part.closeIdx === \"number\") {\r\n                helper.addActions({\r\n                    // Add hover to the close `}`\r\n                    data: hoverText,\r\n                    high: part.closeIdx,\r\n                    low: part.closeIdx - 1,\r\n                    type: \"hover\"\r\n                });\r\n            }\r\n        }\r\n        return helper.succeed();\r\n        function handleNoValue(part: KVPair): ReturnSuccess<undefined> {\r\n            const keyHelper = new ReturnHelper();\r\n            const key = part.key || \"\";\r\n            if (part.closeIdx === undefined) {\r\n                for (const childName of Object.keys(children)) {\r\n                    if (childName.startsWith(key)) {\r\n                        const thisChild = children[childName];\r\n                        const text =\r\n                            thisChild && getStartSuggestion(thisChild.node);\r\n                        keyHelper.addSuggestions({\r\n                            description: getHoverText(children[childName].node),\r\n                            kind: CompletionItemKind.Field,\r\n                            label: childName,\r\n                            start: part.keyRange.start,\r\n                            text:\r\n                                quoteIfNeeded(childName) +\r\n                                (text ? `: ${text}` : \"\")\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            const child = children[key];\r\n            if (child) {\r\n                // Not sure what this would have ever done, feels like a bug\r\n                /* if (part.closeIdx && part.closeIdx >= 0) {\r\n                    keyHelper.merge(\r\n                        getNBTSuggestions(child.node, part.closeIdx)\r\n                    ); \r\n                }*/\r\n                keyHelper.addActions(getKeyHover(part.keyRange, child.node));\r\n            }\r\n            // tslint:disable-next-line:helper-return\r\n            return keyHelper.succeed();\r\n        }\r\n        function getKeyHover(range: LineRange, child: NBTNode): SubAction {\r\n            return {\r\n                data: getHoverText(child),\r\n                high: range.end,\r\n                low: range.start,\r\n                type: \"hover\"\r\n            };\r\n        }\r\n    }\r\n\r\n    protected readTag(reader: StringReader): ParseReturn {\r\n        const helper = new ReturnHelper();\r\n        const start = reader.cursor;\r\n        if (!helper.merge(reader.expect(COMPOUND_START))) {\r\n            return helper.failWithData(Correctness.NO);\r\n        }\r\n        this.openIndex = start;\r\n        reader.skipWhitespace();\r\n        if (helper.merge(reader.expect(COMPOUND_END), { errors: false })) {\r\n            return helper.succeed(Correctness.CERTAIN);\r\n        }\r\n        while (true) {\r\n            reader.skipWhitespace();\r\n            const kvstart = reader.cursor;\r\n            const keyStart = reader.cursor;\r\n            if (!reader.canRead()) {\r\n                helper.addErrors(NO_KEY.create(kvstart, reader.cursor));\r\n                this.parts.push({\r\n                    keyRange: {\r\n                        end: reader.cursor,\r\n                        start: reader.cursor\r\n                    }\r\n                });\r\n                return helper.failWithData(Correctness.CERTAIN);\r\n            }\r\n            const key = reader.readString();\r\n            const keyEnd = reader.cursor;\r\n            if (!helper.merge(key)) {\r\n                const keypart: KVPair = {\r\n                    key: key.data,\r\n                    keyRange: { end: keyEnd, start: keyStart }\r\n                };\r\n                if (reader.canRead()) {\r\n                    // Support suggesting for an unclosed quoted string otherwise\r\n                    keypart.closeIdx = reader.cursor;\r\n                    // I'm not sure that this does anything :P\r\n                }\r\n                this.parts.push(keypart);\r\n                return helper.failWithData(Correctness.CERTAIN);\r\n            }\r\n            reader.skipWhitespace();\r\n            if (this.value.has(key.data)) {\r\n                helper.addErrors(DUPLICATE.create(keyStart, keyEnd, key.data));\r\n            }\r\n            if (!reader.canRead()) {\r\n                this.parts.push({\r\n                    key: key.data,\r\n                    keyRange: {\r\n                        end: keyEnd,\r\n                        start: keyStart\r\n                    }\r\n                });\r\n                helper.addErrors(NO_VAL.create(keyStart, reader.cursor));\r\n                return helper\r\n                    .addSuggestion(reader.cursor, COMPOUND_KEY_VALUE_SEP)\r\n                    .failWithData(Correctness.CERTAIN);\r\n            }\r\n\r\n            if (!helper.merge(reader.expect(COMPOUND_KEY_VALUE_SEP))) {\r\n                // E.g. '{\"hello\",' etc.\r\n                this.parts.push({\r\n                    closeIdx: -1,\r\n                    key: key.data,\r\n                    keyRange: {\r\n                        end: keyEnd,\r\n                        start: keyStart\r\n                    }\r\n                });\r\n                return helper.failWithData(Correctness.CERTAIN);\r\n            }\r\n            const afterSep = reader.cursor;\r\n            reader.skipWhitespace();\r\n            if (!reader.canRead()) {\r\n                this.parts.push({\r\n                    closeIdx: afterSep,\r\n                    key: key.data,\r\n                    keyRange: { start: keyStart, end: keyEnd }\r\n                });\r\n                helper.addErrors(NO_VAL.create(keyStart, reader.cursor));\r\n                return helper.failWithData(Correctness.CERTAIN);\r\n            }\r\n            const valResult = parseAnyNBTTag(reader, [...this.path, key.data]);\r\n            const part: KVPair = {\r\n                key: key.data,\r\n                keyRange: { start: keyStart, end: keyEnd },\r\n                value: valResult.data && valResult.data.tag\r\n            };\r\n            if (!helper.merge(valResult)) {\r\n                this.parts.push(part);\r\n                return helper.failWithData(Correctness.CERTAIN);\r\n            }\r\n            const preEnd = reader.cursor;\r\n            reader.skipWhitespace();\r\n            this.value.set(key.data, valResult.data.tag);\r\n            if (\r\n                helper.merge(reader.expect(COMPOUND_PAIR_SEP), {\r\n                    errors: false\r\n                })\r\n            ) {\r\n                part.closeIdx = reader.cursor;\r\n                this.parts.push(part);\r\n                continue;\r\n            } else if (\r\n                helper.merge(reader.expect(COMPOUND_END), {\r\n                    errors: false\r\n                })\r\n            ) {\r\n                part.closeIdx = reader.cursor;\r\n                this.parts.push(part);\r\n                return helper.succeed(Correctness.CERTAIN);\r\n            }\r\n            this.parts.push(part);\r\n            helper.addErrors(UNCLOSED.create(preEnd, reader.cursor));\r\n            return helper.failWithData(Correctness.CERTAIN);\r\n        }\r\n    }\r\n}\r\n","import { ListNode } from \"mc-nbt-paths\";\r\nimport { StringReader } from \"../../../../brigadier/string-reader\";\r\nimport { ReturnHelper } from \"../../../../misc-functions\";\r\nimport { emptyRange } from \"../../../../test/blanks\";\r\nimport { LineRange, ReturnSuccess } from \"../../../../types\";\r\nimport { NodeInfo } from \"../util/doc-walker-util\";\r\nimport { Correctness, LIST_START } from \"../util/nbt-util\";\r\nimport { NBTWalker } from \"../walker\";\r\nimport { BaseList } from \"./lists\";\r\nimport { ParseReturn } from \"./nbt-tag\";\r\n\r\nexport class NBTTagList extends BaseList {\r\n    public tagType: \"list\" = \"list\";\r\n    // The open square bracket\r\n    protected start: LineRange = emptyRange();\r\n\r\n    public validate(\r\n        anyInfo: NodeInfo,\r\n        walker: NBTWalker\r\n    ): ReturnSuccess<undefined> {\r\n        const helper = new ReturnHelper();\r\n        const result = this.sameType(anyInfo);\r\n        if (!helper.merge(result)) {\r\n            return helper.succeed();\r\n        }\r\n        const info = anyInfo as NodeInfo<ListNode>;\r\n        helper.merge(this.validateWith(info, walker.getItem(info), walker));\r\n        return helper.succeed();\r\n    }\r\n\r\n    protected readTag(reader: StringReader): ParseReturn {\r\n        const helper = new ReturnHelper();\r\n        const start = reader.cursor;\r\n        if (!helper.merge(reader.expect(LIST_START))) {\r\n            return helper.failWithData(Correctness.NO);\r\n        }\r\n        reader.skipWhitespace();\r\n        this.start = { start, end: reader.cursor };\r\n        const result = this.parseInner(reader);\r\n        if (helper.merge(result)) {\r\n            return helper.succeed(Correctness.CERTAIN);\r\n        } else {\r\n            return helper.failWithData(Correctness.CERTAIN);\r\n        }\r\n    }\r\n}\r\n","import { CommandErrorBuilder } from \"../../../../brigadier/errors\";\r\nimport { StringReader } from \"../../../../brigadier/string-reader\";\r\nimport { isSuccessful, ReturnHelper } from \"../../../../misc-functions\";\r\nimport { typed_keys } from \"../../../../misc-functions/third_party/typed-keys\";\r\nimport { ReturnSuccess } from \"../../../../types\";\r\nimport { isTypedInfo, NodeInfo } from \"../util/doc-walker-util\";\r\nimport { Correctness, tryExponential } from \"../util/nbt-util\";\r\nimport { NBTTag, ParseReturn } from \"./nbt-tag\";\r\n\r\nconst exceptions = {\r\n    BOOL_SHORTHAND: new CommandErrorBuilder(\r\n        \"argument.nbt.number.shorthand\",\r\n        \"The boolean shorthand was used for value %s, which is not supported by %s\"\r\n    ),\r\n    FLOAT: new CommandErrorBuilder(\r\n        \"argument.nbt.number.float\",\r\n        \"%s is not a float type, but the given text is a float\"\r\n    ),\r\n    SUFFIX: new CommandErrorBuilder(\r\n        \"argument.nbt.number.suffix\",\r\n        \"Expected suffix '%s' for %s, got %s\"\r\n    ),\r\n    TOO_BIG: new CommandErrorBuilder(\r\n        \"argument.nbt.number.big\",\r\n        \"%s must not be more than %s, found %s\"\r\n    ),\r\n    TOO_LOW: new CommandErrorBuilder(\r\n        \"argument.nbt.number.low\",\r\n        \"%s must not be less than %s, found '%s'\"\r\n    )\r\n};\r\n\r\nexport type NumberType = \"float\" | \"double\" | \"short\" | \"int\" | \"byte\" | \"long\";\r\ninterface NumberInfo {\r\n    bool?: boolean;\r\n    float: boolean;\r\n    max: number;\r\n    min: number;\r\n    suffix: string;\r\n}\r\n\r\nconst intnumberInfo = (pow: number, suffix: string): NumberInfo => ({\r\n    float: false,\r\n    max: 2 ** pow - 1,\r\n    min: -(2 ** pow),\r\n    suffix\r\n});\r\n\r\nconst ranges: { [type in NumberType]: NumberInfo } = {\r\n    byte: { ...intnumberInfo(7, \"b\"), bool: true },\r\n    // tslint:disable:binary-expression-operand-order\r\n    double: {\r\n        float: true,\r\n        max: 1.8 * 10 ** 308, // Approx\r\n        min: -1.8 * 10 ** 308,\r\n        suffix: \"d\"\r\n    },\r\n    float: {\r\n        float: true,\r\n        max: 3.4 * 10 ** 38, // Approx\r\n        min: -3.4 * 10 ** 38,\r\n        suffix: \"f\"\r\n    },\r\n    // tslint:enable:binary-expression-operand-order\r\n    int: intnumberInfo(31, \"\"),\r\n    long: intnumberInfo(63, \"l\"),\r\n    short: intnumberInfo(15, \"s\")\r\n};\r\n\r\nfunction typeForSuffix(rawsuffix: string): NumberInfo | undefined {\r\n    const suffix = rawsuffix.toLowerCase();\r\n    for (const type of typed_keys(ranges)) {\r\n        if (ranges[type].suffix === suffix) {\r\n            return ranges[type];\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport class NBTTagNumber extends NBTTag {\r\n    protected tagType = undefined;\r\n    protected value: number | boolean = 0;\r\n    private endsString = true;\r\n    private float = false;\r\n    private suffix: string | undefined;\r\n\r\n    public getValue(): number | boolean {\r\n        return this.value;\r\n    }\r\n\r\n    public readTag(reader: StringReader): ParseReturn {\r\n        const helper = new ReturnHelper();\r\n        const start = reader.cursor;\r\n        const exp = tryExponential(reader);\r\n        if (helper.merge(exp)) {\r\n            this.float = true;\r\n            this.value = exp.data;\r\n            this.checkSuffix(reader);\r\n            return helper.succeed(Correctness.CERTAIN);\r\n        }\r\n        reader.cursor = start;\r\n        const int = reader.readInt();\r\n        if (isSuccessful(int)) {\r\n            helper.merge(int);\r\n            this.value = int.data;\r\n            this.checkSuffix(reader);\r\n            return helper.succeed(Correctness.CERTAIN);\r\n        }\r\n        reader.cursor = start;\r\n        const float = reader.readFloat();\r\n        if (isSuccessful(float)) {\r\n            helper.merge(float);\r\n            this.float = true;\r\n            this.value = float.data;\r\n            this.checkSuffix(reader);\r\n            return helper.succeed(Correctness.CERTAIN);\r\n        } else {\r\n            reader.cursor = start;\r\n            const bool = reader.readBoolean({\r\n                quote: false,\r\n                unquoted: StringReader.charAllowedInUnquotedString\r\n            });\r\n            if (isSuccessful(bool)) {\r\n                // We do not merge as this does not do anything\r\n                this.value = bool.data;\r\n                return helper.succeed(Correctness.CERTAIN);\r\n            }\r\n            helper.merge(float);\r\n            return helper.failWithData(Correctness.NO);\r\n        }\r\n    }\r\n\r\n    public setValue(val: number): this {\r\n        this.value = val;\r\n        return this;\r\n    }\r\n\r\n    // HERE BE DRAGONS:\r\n    // Unhandled special cases abound!\r\n    // Contributions welcome, at yer own risk\r\n    public validate(node: NodeInfo): ReturnSuccess<undefined> {\r\n        const helper = new ReturnHelper();\r\n        if (isTypedInfo(node)) {\r\n            const actualType = node.node.type;\r\n            if (!ranges.hasOwnProperty(actualType)) {\r\n                return helper\r\n                    .mergeChain(this.sameType(node, \"number\"))\r\n                    .succeed();\r\n            }\r\n            const typeInfo = ranges[actualType as NumberType];\r\n            if (typeof this.value === \"boolean\") {\r\n                if (!typeInfo.bool) {\r\n                    helper.addErrors(\r\n                        exceptions.BOOL_SHORTHAND.create(\r\n                            this.range.start,\r\n                            this.range.end,\r\n                            this.value.toString(),\r\n                            actualType\r\n                        )\r\n                    );\r\n                }\r\n                return helper.succeed();\r\n            } else {\r\n                if (typeInfo.min > this.value) {\r\n                    helper.addErrors(\r\n                        exceptions.TOO_LOW.create(\r\n                            this.range.start,\r\n                            this.range.end,\r\n                            actualType,\r\n                            typeInfo.min.toString(),\r\n                            this.value.toString()\r\n                        )\r\n                    );\r\n                } else if (typeInfo.max < this.value) {\r\n                    helper.addErrors(\r\n                        exceptions.TOO_BIG.create(\r\n                            this.range.start,\r\n                            this.range.end,\r\n                            actualType,\r\n                            typeInfo.min.toString(),\r\n                            this.value.toString()\r\n                        )\r\n                    );\r\n                }\r\n                if (this.float && !typeInfo.float) {\r\n                    helper.addErrors(\r\n                        exceptions.FLOAT.create(\r\n                            this.range.start,\r\n                            this.range.end,\r\n                            actualType\r\n                        )\r\n                    );\r\n                }\r\n                if (this.suffix) {\r\n                    if (this.suffix !== typeInfo.suffix) {\r\n                        helper.addErrors(\r\n                            exceptions.SUFFIX.create(\r\n                                this.range.end - 1,\r\n                                this.range.end,\r\n                                typeInfo.suffix,\r\n                                actualType,\r\n                                this.suffix\r\n                            )\r\n                        );\r\n                    }\r\n                } else if (this.endsString) {\r\n                    helper.addSuggestion(this.range.end, typeInfo.suffix);\r\n                }\r\n                return helper.succeed();\r\n            }\r\n        } else {\r\n            // Will always add the error in this case\r\n            return helper.mergeChain(this.sameType(node)).succeed();\r\n        }\r\n    }\r\n\r\n    private checkSuffix(reader: StringReader): void {\r\n        // Not convinced that this is correct\r\n        if (reader.canRead()) {\r\n            const suffix = reader.peek();\r\n            const type = typeForSuffix(suffix);\r\n            if (type) {\r\n                this.suffix = suffix;\r\n                reader.skip();\r\n            }\r\n        } else {\r\n            this.endsString = true;\r\n        }\r\n    }\r\n}\r\n","import { NoPropertyNode } from \"mc-nbt-paths\";\r\nimport { StringReader } from \"../../../../brigadier/string-reader\";\r\nimport { ReturnHelper } from \"../../../../misc-functions\";\r\nimport { emptyRange } from \"../../../../test/blanks\";\r\nimport { LineRange, ReturnSuccess } from \"../../../../types\";\r\nimport { NodeInfo } from \"../util/doc-walker-util\";\r\nimport { Correctness } from \"../util/nbt-util\";\r\nimport { NBTWalker } from \"../walker\";\r\nimport { BaseList } from \"./lists\";\r\nimport { ParseReturn } from \"./nbt-tag\";\r\n\r\ntype ArrayType = \"byte_array\" | \"int_array\" | \"long_array\";\r\nconst types: Array<[\"B\" | \"I\" | \"L\", \"byte\" | \"int\" | \"long\", ArrayType]> = [\r\n    [\"B\", \"byte\", \"byte_array\"],\r\n    [\"I\", \"int\", \"int_array\"],\r\n    [\"L\", \"long\", \"long_array\"]\r\n];\r\n\r\nexport class NBTTagTypedList extends BaseList {\r\n    protected start: LineRange = emptyRange();\r\n    protected tagType: ArrayType | undefined = undefined;\r\n    /** Only used for when we start incorrectly */\r\n    private remaining: string | undefined;\r\n    private startIndex = -1;\r\n\r\n    public validate(\r\n        anyInfo: NodeInfo,\r\n        walker: NBTWalker\r\n    ): ReturnSuccess<undefined> {\r\n        const helper = new ReturnHelper();\r\n        const result = this.sameType(anyInfo);\r\n        if (!helper.merge(result)) {\r\n            return helper.succeed();\r\n        }\r\n        const info = anyInfo as NodeInfo<NoPropertyNode>;\r\n        const type = types.find(\r\n            v => v[\"2\"] === this.tagType /* === info.type */\r\n        );\r\n        if (type) {\r\n            helper.merge(\r\n                this.validateWith(\r\n                    info,\r\n                    { node: { type: type[\"1\"] }, path: info.path },\r\n                    walker\r\n                )\r\n            );\r\n            const toCheck = `[${type[\"0\"]};`;\r\n            if (this.remaining) {\r\n                if (toCheck.startsWith(this.remaining)) {\r\n                    helper.addSuggestion(this.startIndex, toCheck);\r\n                }\r\n            }\r\n        }\r\n        return helper.succeed();\r\n    }\r\n\r\n    protected readTag(reader: StringReader): ParseReturn {\r\n        const start = reader.cursor;\r\n        this.startIndex = start;\r\n        const helper = new ReturnHelper();\r\n        const remaining = reader.getRemaining();\r\n        const result = remaining.match(/^\\[([BIL]);/);\r\n        if (result) {\r\n            reader.skipWhitespace();\r\n            this.start = { start, end: reader.cursor };\r\n            const type = types.find(v => v[0] === result[1]);\r\n            if (type) {\r\n                this.tagType = type[2];\r\n            } else {\r\n                // `unreachable!`\r\n            }\r\n            const innerResult = this.parseInner(reader);\r\n            if (helper.merge(innerResult)) {\r\n                return helper.succeed(Correctness.CERTAIN);\r\n            } else {\r\n                return helper.failWithData(Correctness.CERTAIN);\r\n            }\r\n        } else {\r\n            this.remaining = remaining;\r\n            return helper.failWithData(Correctness.NO);\r\n        }\r\n    }\r\n}\r\n","import { StringReader } from \"../../../brigadier/string-reader\";\r\nimport { ReturnHelper } from \"../../../misc-functions\";\r\nimport { CE, ReturnedInfo } from \"../../../types\";\r\nimport { NBTTagCompound } from \"./tag/compound-tag\";\r\nimport { NBTTagList } from \"./tag/list-tag\";\r\nimport { NBTTag, ParseReturn } from \"./tag/nbt-tag\";\r\nimport { NBTTagNumber } from \"./tag/number\";\r\nimport { NBTTagString } from \"./tag/string-tag\";\r\nimport { NBTTagTypedList } from \"./tag/typed-list-tag\";\r\nimport { Correctness } from \"./util/nbt-util\";\r\n\r\nconst parsers: Array<(path: string[]) => NBTTag> = [\r\n    path => new NBTTagNumber(path),\r\n    path => new NBTTagTypedList(path),\r\n    path => new NBTTagCompound(path),\r\n    path => new NBTTagList(path),\r\n    path => new NBTTagString(path)\r\n];\r\n\r\nexport type AnyTagReturn = ReturnedInfo<NBTTag>;\r\n\r\nexport interface CorrectInfo {\r\n    correctness: Correctness;\r\n    tag: NBTTag;\r\n}\r\nexport function parseAnyNBTTag(\r\n    reader: StringReader,\r\n    path: string[]\r\n): ReturnedInfo<CorrectInfo, CE, CorrectInfo | undefined> {\r\n    let info: CorrectInfo | undefined;\r\n    let last: ParseReturn | undefined;\r\n    const helper = new ReturnHelper();\r\n    const start = reader.cursor;\r\n    for (const parserFunc of parsers) {\r\n        reader.cursor = start;\r\n        const tag = parserFunc(path);\r\n        const out = tag.parse(reader);\r\n        if (\r\n            out.data === Correctness.CERTAIN ||\r\n            out.data > ((info && info.correctness) || Correctness.NO)\r\n        ) {\r\n            info = { correctness: out.data, tag };\r\n            last = out;\r\n        }\r\n        if (out.data === Correctness.CERTAIN) {\r\n            break;\r\n        }\r\n    }\r\n    // Maybe add could not parse nbt tag error\r\n    if (info === undefined || last === undefined) {\r\n        return helper.fail();\r\n    }\r\n    reader.cursor = info.tag.getRange().end;\r\n    if (helper.merge(last)) {\r\n        return helper.succeed(info);\r\n    } else {\r\n        return helper.failWithData(info);\r\n    }\r\n}\r\n","export class ArrayReader {\r\n    private index = 0;\r\n    private readonly inner: string[];\r\n\r\n    public constructor(arr: string[]) {\r\n        this.inner = arr;\r\n    }\r\n\r\n    public canRead(length: number = 1): boolean {\r\n        return this.index + length <= this.inner.length;\r\n    }\r\n\r\n    public getArray(): string[] {\r\n        return this.inner;\r\n    }\r\n\r\n    public getIndex(): number {\r\n        return this.index;\r\n    }\r\n\r\n    public getRead(): string[] {\r\n        return this.inner.slice(0, this.index);\r\n    }\r\n\r\n    public insert(vals: string[], index: number = 0): void {\r\n        this.inner.splice(index, 0, ...vals);\r\n    }\r\n\r\n    public peek(): string {\r\n        return this.inner[this.index];\r\n    }\r\n\r\n    public read(): string {\r\n        return this.inner[this.index++];\r\n    }\r\n\r\n    public setIndex(val: number): void {\r\n        this.index = val;\r\n    }\r\n\r\n    public skip(): void {\r\n        this.index++;\r\n    }\r\n}\r\n","import { ok } from \"assert\";\r\nimport {\r\n    CompoundNode,\r\n    ListNode,\r\n    NBTNode,\r\n    RootNode,\r\n    ValueList\r\n} from \"mc-nbt-paths\";\r\nimport { isString } from \"util\";\r\nimport { NBTDocs } from \"../../../data/types\";\r\nimport { runNodeFunction } from \"./doc-walker-func\";\r\nimport { NBTTag } from \"./tag/nbt-tag\";\r\nimport { ArrayReader } from \"./util/array-reader\";\r\nimport {\r\n    isCompoundInfo,\r\n    isFunctionInfo,\r\n    isListInfo,\r\n    isRefInfo,\r\n    isRootInfo,\r\n    NodeInfo,\r\n    parseRefPath\r\n} from \"./util/doc-walker-util\";\r\n\r\nfunction walkUnwrap(node: NBTNode | undefined): NBTNode;\r\nfunction walkUnwrap(node: ValueList | undefined): ValueList;\r\nfunction walkUnwrap<T extends NBTNode>(\r\n    node: NodeInfo<T> | undefined\r\n): NodeInfo<T>;\r\nfunction walkUnwrap<T extends NBTNode>(\r\n    node: ValueList | NBTNode | NodeInfo<T> | undefined\r\n): ValueList | NBTNode | NodeInfo<T> {\r\n    if (!node) {\r\n        throw new Error(\r\n            \"Expected node to be defined, got undefined node. This is an internal error.\"\r\n        );\r\n    }\r\n    return node;\r\n}\r\n\r\nexport class NBTWalker {\r\n    private static readonly root = \"root.json\";\r\n    private readonly docs: NBTDocs;\r\n\r\n    public constructor(docs: NBTDocs) {\r\n        this.docs = docs;\r\n    }\r\n\r\n    public allowsUnknowns(info: NodeInfo<CompoundNode>): boolean | undefined {\r\n        const { node } = info;\r\n        if (node.additionalChildren !== undefined) {\r\n            return node.additionalChildren;\r\n        }\r\n        if (node.child_ref) {\r\n            for (const ref of node.child_ref) {\r\n                const refInfo = walkUnwrap(this.resolveRef(ref, info.path));\r\n                if (isCompoundInfo(refInfo)) {\r\n                    const result = this.allowsUnknowns(refInfo);\r\n                    if (result !== undefined) {\r\n                        return result;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public followNodePath(\r\n        info: NodeInfo | undefined,\r\n        reader: ArrayReader,\r\n        parsed?: NBTTag,\r\n        useReferences?: boolean\r\n    ): NodeInfo {\r\n        if (!info) {\r\n            return { path: \"\", node: { type: \"no-nbt\" } };\r\n        }\r\n        if (\r\n            useReferences &&\r\n            info.node.references &&\r\n            reader.canRead() &&\r\n            info.node.references.hasOwnProperty(reader.peek())\r\n        ) {\r\n            return this.followNodePath(\r\n                {\r\n                    node: info.node.references[reader.read()],\r\n                    path: info.path\r\n                },\r\n                reader,\r\n                parsed,\r\n                useReferences\r\n            );\r\n        }\r\n        if (isRefInfo(info)) {\r\n            return this.followNodePath(\r\n                this.resolveRef(info.node.ref, info.path),\r\n                reader,\r\n                parsed,\r\n                useReferences\r\n            );\r\n        }\r\n        if (isFunctionInfo(info)) {\r\n            return this.followNodePath(\r\n                this.resolveRef(\r\n                    runNodeFunction(reader.getRead(), info.node, parsed),\r\n                    info.path\r\n                ),\r\n                reader,\r\n                parsed,\r\n                useReferences\r\n            );\r\n        }\r\n        if (!reader.canRead()) {\r\n            return info;\r\n        }\r\n        if (isCompoundInfo(info)) {\r\n            return this.followNodePath(\r\n                this.getChildWithName(info, reader.read()),\r\n                reader,\r\n                parsed,\r\n                useReferences\r\n            );\r\n        }\r\n        if (isRootInfo(info)) {\r\n            return this.followNodePath(\r\n                this.getChildOfRoot(info, reader.read()),\r\n                reader,\r\n                parsed,\r\n                useReferences\r\n            );\r\n        }\r\n        if (isListInfo(info)) {\r\n            ok(reader.peek().match(/\\d+/));\r\n            reader.read();\r\n            return this.followNodePath(\r\n                { node: info.node.item, path: info.path },\r\n                reader,\r\n                parsed,\r\n                useReferences\r\n            );\r\n        }\r\n        throw new Error(\r\n            `Could not get next path after ${reader.peek()} in ${reader.getArray()} with info: ${JSON.stringify(\r\n                info\r\n            )}`\r\n        );\r\n    }\r\n\r\n    public getChildOfRoot(\r\n        info: NodeInfo<RootNode>,\r\n        name: string\r\n    ): NodeInfo | undefined {\r\n        if (info.node.children.hasOwnProperty(name)) {\r\n            return { ...info, node: info.node.children[name] };\r\n        } else {\r\n            for (const key of Object.keys(info.node.children)) {\r\n                if (key.startsWith(\"$\")) {\r\n                    const ref = key.substring(1);\r\n                    const [nextPath] = parseRefPath(ref, info.path);\r\n                    const list = walkUnwrap(this.docs.get(\r\n                        nextPath\r\n                    ) as ValueList);\r\n                    if (\r\n                        list.find(v =>\r\n                            isString(v) ? v === name : v.value === name\r\n                        )\r\n                    ) {\r\n                        return { ...info, node: info.node.children[key] };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public getChildren(\r\n        info: NodeInfo<CompoundNode>\r\n    ): { [key: string]: NodeInfo } {\r\n        const { node } = info;\r\n        const result: { [key: string]: NodeInfo } = {};\r\n        if (node.child_ref) {\r\n            for (const ref of node.child_ref.reverse()) {\r\n                const refInfo = walkUnwrap(this.resolveRef(ref, info.path));\r\n                if (isCompoundInfo(refInfo)) {\r\n                    Object.assign(result, this.getChildren(refInfo));\r\n                }\r\n            }\r\n        }\r\n        if (node.children) {\r\n            for (const key of Object.keys(node.children)) {\r\n                result[key] = this.followNodePath(\r\n                    { ...info, node: node.children[key] },\r\n                    new ArrayReader([])\r\n                );\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public getChildWithName(\r\n        info: NodeInfo<CompoundNode>,\r\n        name: string\r\n    ): NodeInfo | undefined {\r\n        const { node } = info;\r\n        if (node.children && node.children.hasOwnProperty(name)) {\r\n            return { ...info, node: node.children[name] };\r\n        }\r\n        if (node.child_ref) {\r\n            for (const ref of node.child_ref) {\r\n                const refInfo = walkUnwrap(this.resolveRef(ref, info.path));\r\n                if (isCompoundInfo(refInfo)) {\r\n                    const result = this.getChildWithName(refInfo, name);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * @param startPath A path which is known to be valid\r\n     */\r\n    public getInitialNode(startPath: string[]): NodeInfo {\r\n        const path = NBTWalker.root;\r\n        const node = walkUnwrap(this.docs.get(path) as NBTNode);\r\n        const reader = new ArrayReader(startPath);\r\n        return this.followNodePath({ node, path }, reader, undefined);\r\n    }\r\n    public getItem(info: NodeInfo<ListNode>): NodeInfo {\r\n        return this.followNodePath(\r\n            { ...info, node: info.node.item },\r\n            new ArrayReader([])\r\n        );\r\n    }\r\n    public resolveRef(refText: string, curPath: string): NodeInfo | undefined {\r\n        const [path, fragPath] = parseRefPath(refText, curPath);\r\n        const reader = new ArrayReader(fragPath);\r\n        const node = this.docs.get(path);\r\n        if (node) {\r\n            return this.followNodePath(\r\n                { node: node as NBTNode, path },\r\n                reader,\r\n                undefined,\r\n                true\r\n            );\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n\r\n// Old version\r\n// #interface ContextData<\r\n// #    N extends NBTNode = NBTNode,\r\n// #    T extends NBTTag<any> = NBTTag<any>\r\n// #> {\r\n// #    readonly finalValidation: boolean;\r\n// #    readonly node: N;\r\n// #    readonly path: string;\r\n// #    readonly reader: ArrayReader;\r\n// #    readonly tag?: T;\r\n// #    readonly useReferences: boolean;\r\n// #}\r\n// #\r\n// #// tslint:disable:cyclomatic-complexity\r\n// #// tslint:disable-next-line:max-classes-per-file\r\n// #export class NBTValidator {\r\n// #    private readonly docs: NBTDocs;\r\n// #    private readonly extraChildren: boolean;\r\n// #    private readonly parsed: NBTTag<any>;\r\n// #    private readonly root: string;\r\n// #    private readonly validateNBT: boolean;\r\n// #\r\n// #    public constructor(\r\n// #        parsed: NBTTag<any>,\r\n// #        docs: NBTDocs,\r\n// #        extraChild: boolean,\r\n// #        nbtvalidation: boolean = true,\r\n// #        root: string = \"root.json\"\r\n// #    ) {\r\n// #        this.docs = docs;\r\n// #        this.parsed = parsed;\r\n// #        this.extraChildren = extraChild;\r\n// #        this.root = root;\r\n// #        this.validateNBT = nbtvalidation;\r\n// #    }\r\n// #\r\n// #    public walkThenValidate(nbtpath: string[]): ReturnedInfo<NBTNode> {\r\n// #        const node = this.docs.get(this.root) as RootNode;\r\n// #        const reader = new ArrayReader(nbtpath);\r\n// #        // tslint:disable-next-line:helper-return\r\n// #        return this.walkNextNode({\r\n// #            finalValidation: true,\r\n// #            node,\r\n// #            path: this.root,\r\n// #            reader,\r\n// #            tag: this.validateNBT ? this.parsed : undefined,\r\n// #            useReferences: false\r\n// #        });\r\n// #    }\r\n// #\r\n// #    private mergeChildRef(data: ContextData<CompoundNode>): CompoundNode {\r\n// #        const { node, path: currentPath } = data;\r\n// #        if (!node.child_ref) {\r\n// #            return node;\r\n// #        }\r\n// #        const helper = new ReturnHelper();\r\n// #        const newChildren = JSON.parse(\r\n// #            JSON.stringify(node.children || {})\r\n// #        ) as Exclude<CompoundNode[\"children\"], undefined>;\r\n// #        for (const ref of node.child_ref) {\r\n// #            const [nextPath] = parseRefPath(ref, currentPath);\r\n// #            const refNode = this.walkRef(ref, currentPath, data);\r\n// #            if (!helper.merge(refNode)) {\r\n// #                continue;\r\n// #            } else if (isCompoundNode(refNode.data)) {\r\n// #                const evalNode = this.mergeChildRef({\r\n// #                    ...data,\r\n// #                    node: refNode.data,\r\n// #                    path: nextPath\r\n// #                });\r\n// #                if (evalNode.children) {\r\n// #                    for (const child of Object.keys(evalNode.children)) {\r\n// #                        newChildren[child] = evalNode.children[child];\r\n// #                    }\r\n// #                }\r\n// #            }\r\n// #        }\r\n// #        return {\r\n// #            children: newChildren,\r\n// #            description: node.description,\r\n// #            suggestions: node.suggestions,\r\n// #            type: \"compound\"\r\n// #        };\r\n// #    }\r\n// #\r\n// #    private walkCompoundNode(\r\n// #        data: ContextData<CompoundNode, NBTTagCompound>\r\n// #    ): ReturnedInfo<NBTNode> {\r\n// #        const { node, reader, path, tag } = data;\r\n// #        const helper = new ReturnHelper();\r\n// #        const next = reader.read();\r\n// #        if (node.children && next in node.children) {\r\n// #            /*\r\n// #             * It is safe to assume that next is in the tag\r\n// #             * val because the path is based off of the tag\r\n// #             */\r\n// #            return helper.return(\r\n// #                this.walkNextNode({\r\n// #                    ...data,\r\n// #                    node: node.children[next],\r\n// #                    tag: tag ? tag.getVal()[next] : undefined\r\n// #                })\r\n// #            );\r\n// #        } else if (node.child_ref) {\r\n// #            for (const c of node.child_ref) {\r\n// #                const [nextPath] = parseRefPath(c, path);\r\n// #                const cnode = this.walkRef(c, path, data);\r\n// #                if (\r\n// #                    helper.merge(cnode) &&\r\n// #                    isCompoundNode(cnode.data) &&\r\n// #                    cnode.data.children &&\r\n// #                    next in cnode.data.children\r\n// #                ) {\r\n// #                    return helper.return(\r\n// #                        this.walkNextNode({\r\n// #                            ...data,\r\n// #                            node: cnode.data.children[next],\r\n// #                            path: nextPath,\r\n// #                            tag: tag ? tag.getVal()[next] : undefined\r\n// #                        })\r\n// #                    );\r\n// #                }\r\n// #            }\r\n// #        }\r\n// #        return helper.fail();\r\n// #    }\r\n// #\r\n// #    private walkFunctionNode(\r\n// #        data: ContextData<FunctionNode>\r\n// #    ): ReturnedInfo<NBTNode> {\r\n// #        const { node, reader, path } = data;\r\n// #        const helper = new ReturnHelper();\r\n// #        const ref = runNodeFunction(this.parsed, reader.getRead(), node);\r\n// #        const [nextPath] = parseRefPath(ref, path);\r\n// #        const newNode = this.walkRef(ref, path, data);\r\n// #        if (!helper.merge(newNode)) {\r\n// #            return helper.fail();\r\n// #        }\r\n// #        return helper.return(\r\n// #            this.walkNextNode({\r\n// #                ...data,\r\n// #                node: newNode.data,\r\n// #                path: nextPath\r\n// #            })\r\n// #        );\r\n// #    }\r\n// #\r\n// #    private walkListNode(\r\n// #        data: ContextData<ListNode, NBTTagList>\r\n// #    ): ReturnedInfo<NBTNode> {\r\n// #        const { node, reader, tag } = data;\r\n// #        const next = reader.read();\r\n// #        const helper = new ReturnHelper();\r\n// #        if (!/\\d+/.test(next)) {\r\n// #            return helper.fail(\r\n// #                tag\r\n// #                    ? VALIDATION_ERRORS.badIndex.create(\r\n// #                          tag.getRange().start,\r\n// #                          tag.getRange().end\r\n// #                      )\r\n// #                    : undefined\r\n// #            );\r\n// #        }\r\n// #        const nextTag = tag\r\n// #            ? tag.getVal()[Number.parseInt(next, 10)]\r\n// #            : undefined;\r\n// #        return helper.return(\r\n// #            this.walkNextNode({\r\n// #                ...data,\r\n// #                node: node.item,\r\n// #                tag: nextTag\r\n// #            })\r\n// #        );\r\n// #    }\r\n// #\r\n// #    private walkNextNode(data: ContextData): ReturnedInfo<NBTNode> {\r\n// #        const { reader, node, tag, useReferences, finalValidation } = data;\r\n// #        const helper = new ReturnHelper();\r\n// #        if (reader.onLast()) {\r\n// #            if (isRefNode(node)) {\r\n// #                return helper.return(\r\n// #                    this.walkRefNode(data as ContextData<RefNode>)\r\n// #                );\r\n// #            } else if (isFunctionNode(node)) {\r\n// #                return helper.return(\r\n// #                    this.walkFunctionNode(data as ContextData<FunctionNode>)\r\n// #                );\r\n// #            } else if (isCompoundNode(node)) {\r\n// #                if (finalValidation && this.validateNBT && tag) {\r\n// #                    const valres = tag.valideAgainst(node, {\r\n// #                        compoundMerge: () =>\r\n// #                            this.mergeChildRef(data as ContextData<\r\n// #                                CompoundNode,\r\n// #                                NBTTagCompound\r\n// #                            >),\r\n// #                        extraChildren: this.extraChildren\r\n// #                    });\r\n// #                    if (!helper.merge(valres)) {\r\n// #                        return helper.fail();\r\n// #                    }\r\n// #                }\r\n// #                return helper.succeed(\r\n// #                    finalValidation\r\n// #                        ? this.mergeChildRef(data as ContextData<CompoundNode>)\r\n// #                        : node\r\n// #                );\r\n// #            } else {\r\n// #                if (finalValidation && this.validateNBT && tag) {\r\n// #                    const valres = tag.valideAgainst(node);\r\n// #                    if (!helper.merge(valres)) {\r\n// #                        return helper.fail();\r\n// #                    }\r\n// #                }\r\n// #                return helper.succeed(node);\r\n// #            }\r\n// #        } else if (\r\n// #            useReferences &&\r\n// #            node.references &&\r\n// #            reader.peek() in node.references\r\n// #        ) {\r\n// #            const next = reader.read();\r\n// #            return helper.return(\r\n// #                this.walkNextNode({\r\n// #                    ...data,\r\n// #                    node: node.references[next]\r\n// #                })\r\n// #            );\r\n// #        } else if (isTypedNode(node)) {\r\n// #            if (isCompoundNode(node)) {\r\n// #                if (this.validateNBT && tag) {\r\n// #                    const valres = tag.valideAgainst(node, {\r\n// #                        compoundMerge: () =>\r\n// #                            this.mergeChildRef(data as ContextData<\r\n// #                                CompoundNode\r\n// #                            >),\r\n// #                        extraChildren: this.extraChildren\r\n// #                    });\r\n// #                    if (!helper.merge(valres)) {\r\n// #                        return helper.fail();\r\n// #                    }\r\n// #                }\r\n// #                if (tag && !(tag instanceof NBTTagCompound)) {\r\n// #                    return helper.fail();\r\n// #                }\r\n// #                return helper.return(\r\n// #                    this.walkCompoundNode(data as ContextData<\r\n// #                        CompoundNode,\r\n// #                        NBTTagCompound\r\n// #                    >)\r\n// #                );\r\n// #            } else if (isListNode(node)) {\r\n// #                if (this.validateNBT && tag) {\r\n// #                    const valres = tag.valideAgainst(node);\r\n// #                    if (!helper.merge(valres)) {\r\n// #                        return helper.fail();\r\n// #                    }\r\n// #                }\r\n// #                if (tag && !(tag instanceof NBTTagList)) {\r\n// #                    return helper.fail();\r\n// #                }\r\n// #                return helper.return(\r\n// #                    this.walkListNode(data as ContextData<ListNode, NBTTagList>)\r\n// #                );\r\n// #            } else if (isRootNode(node)) {\r\n// #                return helper.return(\r\n// #                    this.walkRootNode(data as ContextData<RootNode>)\r\n// #                );\r\n// #            } else {\r\n// #                if (tag) {\r\n// #                    const valres = tag.valideAgainst(node);\r\n// #                    helper.merge(valres);\r\n// #                }\r\n// #                return helper.fail();\r\n// #            }\r\n// #        } else {\r\n// #            if (isRefNode(node)) {\r\n// #                return helper.return(\r\n// #                    this.walkRefNode(data as ContextData<RefNode>)\r\n// #                );\r\n// #            } else if (isFunctionNode(node)) {\r\n// #                return helper.return(\r\n// #                    this.walkFunctionNode(data as ContextData<FunctionNode>)\r\n// #                );\r\n// #            }\r\n// #        }\r\n// #        return helper.fail();\r\n// #    }\r\n// #\r\n// #    private walkRef(\r\n// #        ref: string,\r\n// #        path: string,\r\n// #        data: ContextData\r\n// #    ): ReturnedInfo<NBTNode> {\r\n// #        const [nextPath, fragPath] = parseRefPath(ref, path);\r\n// #        const reader = new ArrayReader(fragPath);\r\n// #        const node = this.docs.get(nextPath) as NBTNode;\r\n// #        // tslint:disable-next-line:helper-return\r\n// #        return this.walkNextNode({\r\n// #            useReferences: true,\r\n// #            finalValidation: false,\r\n// #            node,\r\n// #            path: nextPath,\r\n// #            reader,\r\n// #            tag: data.tag\r\n// #        });\r\n// #    }\r\n// #\r\n// #    private walkRefNode(data: ContextData<RefNode>): ReturnedInfo<NBTNode> {\r\n// #        const { node, path } = data;\r\n// #        const helper = new ReturnHelper();\r\n// #        const [nextPath] = parseRefPath(node.ref, path);\r\n// #        const nnode = this.walkRef(node.ref, path, data);\r\n// #        if (helper.merge(nnode)) {\r\n// #            const out = this.walkNextNode({\r\n// #                ...data,\r\n// #                node: nnode.data,\r\n// #                path: nextPath\r\n// #            });\r\n// #            if (helper.merge(out)) {\r\n// #                return helper.succeed(out.data);\r\n// #            } else {\r\n// #                return helper.fail();\r\n// #            }\r\n// #        } else {\r\n// #            return helper.fail();\r\n// #        }\r\n// #    }\r\n// #\r\n// #    private walkRootNode(data: ContextData<RootNode>): ReturnedInfo<NBTNode> {\r\n// #        const { node, reader, path } = data;\r\n// #        const next = reader.read();\r\n// #        const helper = new ReturnHelper();\r\n// #        if (next in node.children) {\r\n// #            return helper.return(\r\n// #                this.walkNextNode({\r\n// #                    ...data,\r\n// #                    node: node.children[next]\r\n// #                })\r\n// #            );\r\n// #        } else {\r\n// #            for (const key of Object.keys(node.children)) {\r\n// #                if (key.startsWith(\"$\")) {\r\n// #                    const ref = key.substring(1);\r\n// #                    const [nextPath] = parseRefPath(ref, path);\r\n// #                    const list = (this.docs.get(nextPath) as any) as ValueList;\r\n// #                    if (\r\n// #                        list.find(\r\n// #                            v => (isString(v) ? v === next : v.value === next)\r\n// #                        )\r\n// #                    ) {\r\n// #                        return helper.return(\r\n// #                            this.walkNextNode({\r\n// #                                ...data,\r\n// #                                node: node.children[key]\r\n// #                            })\r\n// #                        );\r\n// #                    }\r\n// #                }\r\n// #            }\r\n// #        }\r\n// #        return helper.fail();\r\n// #    }\r\n// #}\r\n// #\r\n","import { CommandError } from \"../../../brigadier/errors\";\r\nimport { StringReader } from \"../../../brigadier/string-reader\";\r\nimport { ReturnHelper } from \"../../../misc-functions\";\r\nimport { ContextPath, startPaths } from \"../../../misc-functions/context\";\r\nimport {\r\n    CommandContext,\r\n    Parser,\r\n    ParserInfo,\r\n    ReturnedInfo,\r\n    ReturnSuccess\r\n} from \"../../../types\";\r\nimport { parseAnyNBTTag } from \"./tag-parser\";\r\nimport { UnknownsError } from \"./tag/compound-tag\";\r\nimport { isNoNBTInfo, NodeInfo } from \"./util/doc-walker-util\";\r\nimport { Correctness, getStartSuggestion } from \"./util/nbt-util\";\r\nimport { NBTWalker } from \"./walker\";\r\n\r\ntype CtxPathFunc = (context: CommandContext) => NBTContextData;\r\n\r\nexport type NBTContextData = NBTIDInfo | NodeInfo;\r\n\r\nexport interface NBTIDInfo {\r\n    ids?: string | string[];\r\n    kind: \"entity\" | \"item\" | \"block\";\r\n}\r\n\r\nconst paths: Array<ContextPath<CtxPathFunc>> = [\r\n    {\r\n        data: () => ({\r\n            kind: \"entity\"\r\n        }),\r\n        path: [\"data\", \"merge\", \"entity\"]\r\n    },\r\n    {\r\n        data: () => ({\r\n            kind: \"block\"\r\n        }),\r\n        path: [\"data\", \"merge\", \"block\"]\r\n    },\r\n    {\r\n        data: args => ({\r\n            ids: (args.otherEntity && args.otherEntity.ids) || [],\r\n            kind: \"entity\"\r\n        }),\r\n        path: [\"summon\", \"entity\"]\r\n    }\r\n    // TODO - handle nbt_tag in /data modify\r\n];\r\n\r\nexport function validateParse(\r\n    reader: StringReader,\r\n    info: ParserInfo,\r\n    data?: NBTContextData\r\n): ReturnedInfo<undefined> {\r\n    const helper = new ReturnHelper();\r\n    const docs = info.data.globalData.nbt_docs;\r\n    const parseResult = parseAnyNBTTag(reader, []);\r\n    const datum = parseResult.data;\r\n    const walker = new NBTWalker(docs);\r\n    if (\r\n        datum && // This is to appease the type checker\r\n        (helper.merge(parseResult) || datum.correctness > Correctness.NO)\r\n    ) {\r\n        if (!!data) {\r\n            const asNBTIDInfo = data as NBTIDInfo;\r\n            const asNodeInfo = data as NodeInfo;\r\n            const unknowns = new Set<string>();\r\n            if (asNBTIDInfo.kind) {\r\n                if (Array.isArray(asNBTIDInfo.ids)) {\r\n                    for (const id of asNBTIDInfo.ids) {\r\n                        const root = walker.getInitialNode([\r\n                            asNBTIDInfo.kind,\r\n                            id\r\n                        ]);\r\n                        if (!isNoNBTInfo(root)) {\r\n                            const result = datum.tag.validate(root, walker);\r\n                            helper.merge(result, { errors: false });\r\n                            helper.merge(\r\n                                solveUnkownErrors(\r\n                                    result.errors,\r\n                                    unknowns,\r\n                                    `${asNBTIDInfo.kind} '${id}'`\r\n                                )\r\n                            );\r\n                        }\r\n                    }\r\n                } else {\r\n                    const root = walker.getInitialNode([\r\n                        asNBTIDInfo.kind,\r\n                        asNBTIDInfo.ids || \"none\"\r\n                    ]);\r\n                    if (!isNoNBTInfo(root)) {\r\n                        const result = datum.tag.validate(root, walker);\r\n                        helper.merge(result, { errors: false });\r\n                        helper.merge(\r\n                            solveUnkownErrors(\r\n                                result.errors,\r\n                                unknowns,\r\n                                `${asNBTIDInfo.kind} '${asNBTIDInfo.ids ||\r\n                                    \"unspecified\"}'`\r\n                            )\r\n                        );\r\n                    }\r\n                }\r\n            } else {\r\n                if (!isNoNBTInfo(asNodeInfo)) {\r\n                    const result = datum.tag.validate(asNodeInfo, walker);\r\n                    helper.merge(result, { errors: false });\r\n                    helper.merge(solveUnkownErrors(result.errors));\r\n                }\r\n            }\r\n        }\r\n        return helper.succeed();\r\n    } else {\r\n        if (!!data && !reader.canRead()) {\r\n            const asNodeInfo = data as NodeInfo;\r\n            const asNBTIDInfo = data as NBTIDInfo;\r\n            const root = asNBTIDInfo.kind\r\n                ? walker.getInitialNode(\r\n                      [asNBTIDInfo.kind as string].concat(\r\n                          asNBTIDInfo.ids || \"none\"\r\n                      )\r\n                  )\r\n                : asNodeInfo;\r\n            const suggestion = getStartSuggestion(root.node);\r\n            if (suggestion) {\r\n                helper.addSuggestion(reader.cursor, suggestion);\r\n            }\r\n        }\r\n        return helper.fail();\r\n    }\r\n}\r\n\r\nfunction solveUnkownErrors(\r\n    errors: Array<CommandError | UnknownsError>,\r\n    unknowns: Set<string> = new Set(),\r\n    name?: string\r\n): ReturnSuccess<undefined> {\r\n    const helper = new ReturnHelper();\r\n    for (const error of errors) {\r\n        if (Array.isArray((error as UnknownsError).path)) {\r\n            const unknownError = error as UnknownsError;\r\n            const pathKey = unknownError.path.join(\":\");\r\n            if (!unknowns.has(pathKey)) {\r\n                const { path, ...allowed } = unknownError;\r\n                helper.addErrors({\r\n                    ...allowed,\r\n                    // This will break when translations are added, not sure how best to do this\r\n                    text: name ? `${error.text} for ${name}` : error.text\r\n                });\r\n                unknowns.add(pathKey);\r\n            }\r\n        } else {\r\n            helper.addErrors(error);\r\n        }\r\n    }\r\n    return helper.succeed();\r\n}\r\n\r\nexport function parseThenValidate(\r\n    reader: StringReader,\r\n    walker: NBTWalker,\r\n    node?: NodeInfo\r\n): ReturnedInfo<undefined> {\r\n    const helper = new ReturnHelper();\r\n    const parseResult = parseAnyNBTTag(reader, []);\r\n    const parseData = parseResult.data;\r\n    if (\r\n        parseData &&\r\n        (helper.merge(parseResult) || parseData.correctness > Correctness.NO)\r\n    ) {\r\n        if (node) {\r\n            if (!isNoNBTInfo(node)) {\r\n                const result = parseData.tag.validate(node, walker);\r\n                helper.merge(result, { errors: false });\r\n                helper.merge(solveUnkownErrors(result.errors));\r\n            }\r\n        }\r\n        return helper.succeed();\r\n    } else {\r\n        if (node && !reader.canRead()) {\r\n            const suggestion = getStartSuggestion(node.node);\r\n            if (suggestion) {\r\n                helper.addSuggestion(reader.cursor, suggestion);\r\n            }\r\n        }\r\n        return helper.fail();\r\n    }\r\n}\r\n\r\nexport const nbtParser: Parser = {\r\n    parse: (reader, info) => {\r\n        const helper = new ReturnHelper(info);\r\n        const ctxdatafn = startPaths(paths, info.path || []);\r\n        const data = ctxdatafn && ctxdatafn(info.context);\r\n        return helper.return(validateParse(reader, info, data));\r\n    }\r\n};\r\n","import {\r\n    CompletionItemKind,\r\n    DiagnosticSeverity\r\n} from \"vscode-languageserver/lib/main\";\r\n\r\nimport { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { StringReader } from \"../../brigadier/string-reader\";\r\nimport {\r\n    BlocksPropertyInfo,\r\n    NamespacedName,\r\n    SingleBlockPropertyInfo\r\n} from \"../../data/types\";\r\nimport {\r\n    namespaceSuggestionString,\r\n    ReturnHelper,\r\n    stringifyNamespace\r\n} from \"../../misc-functions\";\r\nimport {\r\n    buildTagActions,\r\n    parseNamespaceOrTag\r\n} from \"../../misc-functions/parsing/nmsp-tag\";\r\nimport { Parser, ParserInfo, ReturnedInfo } from \"../../types\";\r\nimport { validateParse } from \"./nbt/nbt\";\r\n\r\nexport const predicateParser: Parser = {\r\n    parse: (reader, info) => parseBlockArgument(reader, info, true)\r\n};\r\n\r\nexport const stateParser: Parser = {\r\n    parse: (reader, info) => parseBlockArgument(reader, info, false)\r\n};\r\n\r\ninterface PropertyExceptions {\r\n    duplicate: CommandErrorBuilder;\r\n    invalid: CommandErrorBuilder;\r\n    novalue: CommandErrorBuilder;\r\n    unknown: CommandErrorBuilder;\r\n}\r\n\r\nconst exceptions = {\r\n    block_properties: {\r\n        duplicate: new CommandErrorBuilder(\r\n            \"argument.block.property.duplicate\",\r\n            \"Property '%s' can only be set once for block %s\"\r\n        ),\r\n        invalid: new CommandErrorBuilder(\r\n            \"argument.block.property.invalid\",\r\n            \"Block %s does not accept '%s' for %s property\"\r\n        ),\r\n        novalue: new CommandErrorBuilder(\r\n            \"argument.block.property.novalue\",\r\n            \"Expected value for property '%s' on block %s\"\r\n        ),\r\n        unknown: new CommandErrorBuilder(\r\n            \"argument.block.property.unknown\",\r\n            \"Block %s does not have property '%s'\"\r\n        )\r\n    },\r\n    invalid_block: new CommandErrorBuilder(\r\n        \"argument.block.id.invalid\",\r\n        \"Unknown block type '%s'\"\r\n    ),\r\n    no_tags: new CommandErrorBuilder(\r\n        \"argument.block.tag.disallowed\",\r\n        \"Tags aren't allowed here, only actual blocks\"\r\n    ),\r\n    tag_properties: {\r\n        duplicate: new CommandErrorBuilder(\r\n            \"argument.block_tag.property.duplicate\",\r\n            \"Property '%s' can only be set once for block tag %s\"\r\n        ),\r\n        invalid: new CommandErrorBuilder(\r\n            \"argument.block_tag.property.invalid\",\r\n            \"Block tag %s does not accept '%s' for %s property\"\r\n        ),\r\n        novalue: new CommandErrorBuilder(\r\n            \"argument.block_tag.property.novalue\",\r\n            \"Expected value for property '%s' on block tag %s\"\r\n        ),\r\n        unknown: new CommandErrorBuilder(\r\n            \"argument.block_tag.property.unknown\",\r\n            \"Block tag %s does not have property '%s'\"\r\n        )\r\n    },\r\n    unknown_properties: {\r\n        duplicate: new CommandErrorBuilder(\r\n            \"argument.unknown_block_tag.property.duplicate\",\r\n            \"Property '%s' can only be set once for unknown block tag %s\"\r\n        ),\r\n        invalid: new CommandErrorBuilder(\r\n            \"argument.unknown_block_tag.property.invalid\",\r\n            \"Unknown block tag %s might not accept '%s' for %s property\",\r\n            DiagnosticSeverity.Warning\r\n        ),\r\n        novalue: new CommandErrorBuilder(\r\n            \"argument.unknown_block_tag.property.novalue\",\r\n            \"Expected value for property '%s' on unknown block tag %s\"\r\n        ),\r\n        unknown: new CommandErrorBuilder(\r\n            \"argument.unknown_block_tag.property.unknown\",\r\n            \"Unknown block tag %s might not have property '%s'\",\r\n            DiagnosticSeverity.Warning\r\n        )\r\n    },\r\n\r\n    unclosed_props: new CommandErrorBuilder(\r\n        \"argument.block.property.unclosed\",\r\n        \"Expected closing ] for block state properties\"\r\n    ),\r\n\r\n    unknown_tag: new CommandErrorBuilder(\r\n        \"arguments.block.tag.unknown\", // Argument_s_ [sic]\r\n        \"Unknown block tag '%s'\"\r\n    )\r\n};\r\n\r\n// tslint:disable:cyclomatic-complexity\r\nexport function parseBlockArgument(\r\n    reader: StringReader,\r\n    info: ParserInfo,\r\n    tags: boolean\r\n): ReturnedInfo<undefined> {\r\n    const helper = new ReturnHelper(info);\r\n    const start = reader.cursor;\r\n    const tagHandling = tags ? \"block_tags\" : exceptions.no_tags;\r\n    const parsed = parseNamespaceOrTag(reader, info, tagHandling);\r\n    let stringifiedName: string | undefined;\r\n    if (helper.merge(parsed)) {\r\n        const parsedResult = parsed.data;\r\n        if (parsedResult.resolved && parsedResult.values) {\r\n            stringifiedName = `#${stringifyNamespace(parsedResult.parsed)}`;\r\n            helper.merge(\r\n                buildTagActions(\r\n                    parsedResult.values,\r\n                    start + 1,\r\n                    reader.cursor,\r\n                    \"block_tags\",\r\n                    info.data.localData\r\n                )\r\n            );\r\n            const props = constructProperties(\r\n                parsedResult.resolved,\r\n                info.data.globalData.blocks\r\n            );\r\n            const propsResult = parseProperties(\r\n                reader,\r\n                props || {},\r\n                exceptions.tag_properties,\r\n                stringifiedName\r\n            );\r\n            if (!helper.merge(propsResult)) {\r\n                return helper.fail();\r\n            }\r\n            if (reader.peek() === \"{\") {\r\n                const nbt = validateParse(reader, info, {\r\n                    ids: (parsedResult.resolved || []).map(stringifyNamespace),\r\n                    kind: \"block\"\r\n                });\r\n                if (!helper.merge(nbt)) {\r\n                    return helper.fail();\r\n                }\r\n            } else {\r\n                helper.addSuggestion(reader.cursor, \"{\");\r\n            }\r\n        } else {\r\n            stringifiedName = stringifyNamespace(parsed.data.parsed);\r\n            if (info.suggesting && !reader.canRead()) {\r\n                helper.addSuggestions(\r\n                    ...namespaceSuggestionString(\r\n                        Object.keys(info.data.globalData.blocks),\r\n                        parsed.data.parsed,\r\n                        start\r\n                    )\r\n                );\r\n            }\r\n            const props = info.data.globalData.blocks[stringifiedName];\r\n            if (!props) {\r\n                helper.addErrors(\r\n                    exceptions.invalid_block.create(start, reader.cursor)\r\n                );\r\n            }\r\n            const result = parseProperties(\r\n                reader,\r\n                props || {},\r\n                exceptions.block_properties,\r\n                stringifiedName\r\n            );\r\n            if (!helper.merge(result)) {\r\n                return helper.fail();\r\n            }\r\n            if (reader.peek() === \"{\") {\r\n                const nbt = validateParse(reader, info, {\r\n                    ids: props ? stringifiedName : \"none\",\r\n                    kind: \"block\"\r\n                });\r\n                if (!helper.merge(nbt)) {\r\n                    return helper.fail();\r\n                }\r\n            } else {\r\n                helper.addSuggestion(reader.cursor, \"{\");\r\n            }\r\n        }\r\n    } else {\r\n        if (parsed.data) {\r\n            helper.addErrors(\r\n                exceptions.unknown_tag.create(\r\n                    start,\r\n                    reader.cursor,\r\n                    stringifyNamespace(parsed.data)\r\n                )\r\n            );\r\n            stringifiedName = `#${stringifyNamespace(parsed.data)}`;\r\n            const propsResult = parseProperties(\r\n                reader,\r\n                {},\r\n                exceptions.unknown_properties,\r\n                stringifiedName\r\n            );\r\n            if (!helper.merge(propsResult)) {\r\n                return helper.fail();\r\n            }\r\n            if (reader.peek() === \"{\") {\r\n                const nbt = validateParse(reader, info, {\r\n                    ids: \"none\",\r\n                    kind: \"block\"\r\n                });\r\n                if (!helper.merge(nbt)) {\r\n                    return helper.fail();\r\n                }\r\n            } else {\r\n                helper.addSuggestion(reader.cursor, \"{\");\r\n            }\r\n        } else {\r\n            // Parsing of the namespace failed\r\n            return helper.fail();\r\n        }\r\n    }\r\n    return helper.succeed();\r\n}\r\n\r\n// Ugly call signature. Need to see how upstream handles tag properties.\r\n// At the moment, it is very broken\r\nfunction parseProperties(\r\n    reader: StringReader,\r\n    options: SingleBlockPropertyInfo,\r\n    errors: PropertyExceptions,\r\n    name: string\r\n): ReturnedInfo<Map<string, string>> {\r\n    const helper = new ReturnHelper();\r\n    const result = new Map<string, string>();\r\n    const start = reader.cursor;\r\n    if (helper.merge(reader.expect(\"[\"), { errors: false })) {\r\n        const props = Object.keys(options);\r\n        reader.skipWhitespace();\r\n        if (helper.merge(reader.expectOption(\"]\"), { errors: false })) {\r\n            return helper.succeed(result);\r\n        }\r\n        while (true) {\r\n            reader.skipWhitespace();\r\n            const propStart = reader.cursor;\r\n            const isUnclosed = !reader.canRead();\r\n            const propParse = reader.readOption(\r\n                props,\r\n                undefined,\r\n                CompletionItemKind.Property\r\n            );\r\n            const propKey = propParse.data;\r\n            const propSuccessful = helper.merge(propParse);\r\n            if (propKey === undefined) {\r\n                // Strange order allows better type checker reasoning\r\n                // Parsing failed\r\n                return helper.fail();\r\n            }\r\n            if (isUnclosed) {\r\n                return helper.fail(\r\n                    exceptions.unclosed_props.create(start, reader.cursor)\r\n                );\r\n            }\r\n            if (!propSuccessful) {\r\n                helper.addErrors(\r\n                    errors.unknown.create(\r\n                        propStart,\r\n                        reader.cursor,\r\n                        name,\r\n                        propKey\r\n                    )\r\n                );\r\n            }\r\n\r\n            if (result.has(propKey)) {\r\n                helper.addErrors(\r\n                    errors.duplicate.create(\r\n                        propStart,\r\n                        reader.cursor,\r\n                        propKey,\r\n                        name\r\n                    )\r\n                );\r\n            }\r\n            reader.skipWhitespace();\r\n            if (!helper.merge(reader.expect(\"=\"), { errors: false })) {\r\n                return helper.fail(\r\n                    errors.novalue.create(\r\n                        propStart,\r\n                        reader.cursor,\r\n                        propKey,\r\n                        name\r\n                    )\r\n                );\r\n            }\r\n            reader.skipWhitespace();\r\n            const valueStart = reader.cursor;\r\n            const valueParse = reader.readOption(\r\n                options[propKey] || [],\r\n                undefined,\r\n                CompletionItemKind.EnumMember\r\n            );\r\n            const valueSuccessful = helper.merge(valueParse);\r\n            const value = valueParse.data;\r\n            if (value === undefined) {\r\n                return helper.fail();\r\n            }\r\n            const error = errors.invalid.create(\r\n                valueStart,\r\n                reader.cursor,\r\n                name,\r\n                value,\r\n                propKey\r\n            );\r\n            const adderrorIf = (b: boolean) =>\r\n                b && propSuccessful && !valueSuccessful\r\n                    ? helper.addErrors(error)\r\n                    : undefined;\r\n            adderrorIf(value.length > 0);\r\n            result.set(propKey, value);\r\n            reader.skipWhitespace();\r\n            if (helper.merge(reader.expect(\",\"), { errors: false })) {\r\n                adderrorIf(value.length === 0);\r\n                continue;\r\n            }\r\n            if (helper.merge(reader.expect(\"]\"), { errors: false })) {\r\n                adderrorIf(value.length === 0);\r\n                return helper.succeed(result);\r\n            }\r\n            return helper.fail(\r\n                exceptions.unclosed_props.create(start, reader.cursor)\r\n            );\r\n        }\r\n    }\r\n    return helper.succeed(result);\r\n}\r\n\r\nfunction constructProperties(\r\n    options: NamespacedName[],\r\n    blocks: BlocksPropertyInfo\r\n): SingleBlockPropertyInfo {\r\n    const result: SingleBlockPropertyInfo = {};\r\n    for (const blockName of options) {\r\n        const stringified = stringifyNamespace(blockName);\r\n        const block = blocks[stringified];\r\n        if (block) {\r\n            for (const prop in block) {\r\n                if (block.hasOwnProperty(prop)) {\r\n                    result[prop] = Array.from(\r\n                        new Set((result[prop] || []).concat(block[prop]))\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","import { TextDocument } from \"vscode-json-languageservice\";\r\nimport { DiagnosticSeverity } from \"vscode-languageserver\";\r\nimport { CommandError } from \"../../brigadier/errors\";\r\nimport { ReturnHelper } from \"../../misc-functions\";\r\nimport { Parser } from \"../../types\";\r\n\r\nexport const jsonParser: Parser = {\r\n    parse: (reader, info) => {\r\n        const helper = new ReturnHelper();\r\n        const remaining = reader.getRemaining();\r\n        const start = reader.cursor;\r\n        reader.cursor = reader.string.length;\r\n        const text: TextDocument = {\r\n            getText: () => remaining,\r\n            languageId: \"json\",\r\n            lineCount: 1,\r\n            offsetAt: pos => pos.character,\r\n            positionAt: offset => ({ line: 0, character: offset }),\r\n            uri: \"file://text-component.json\",\r\n            version: 0\r\n        };\r\n        const service = info.data.globalData.jsonService;\r\n        // tslint:disable-next-line:no-inferred-empty-object-type\r\n        const json = service.parseJSONDocument(text);\r\n        service.doValidation(text, json).then(diagnostics => {\r\n            /* Because we use SynchronousPromise this is called before the next statement runs*/\r\n            helper.addErrors(\r\n                ...diagnostics.map<CommandError>(diag => ({\r\n                    code: typeof diag.code === \"string\" ? diag.code : \"json\",\r\n                    range: {\r\n                        end: start + diag.range.end.character,\r\n                        start: start + diag.range.start.character\r\n                    },\r\n                    severity: diag.severity || DiagnosticSeverity.Error,\r\n                    text: diag.message\r\n                }))\r\n            );\r\n        });\r\n        service\r\n            .doComplete(text, { line: 0, character: remaining.length }, json)\r\n            .then(completionList => {\r\n                if (completionList) {\r\n                    completionList.items.forEach(item => {\r\n                        if (item.textEdit) {\r\n                            helper.addSuggestions({\r\n                                description: item.documentation,\r\n                                insertTextFormat: item.insertTextFormat,\r\n                                kind: item.kind,\r\n                                label: item.label,\r\n                                start:\r\n                                    start + item.textEdit.range.start.character,\r\n                                text: item.textEdit.newText.replace(\r\n                                    /\\s*\\n\\s*/g,\r\n                                    \"\"\r\n                                )\r\n                            });\r\n                        } else {\r\n                            helper.addSuggestions({\r\n                                description: item.documentation,\r\n                                insertTextFormat: item.insertTextFormat,\r\n                                kind: item.kind,\r\n                                label: item.label,\r\n                                start: reader.cursor,\r\n                                text: item.label.replace(/\\s*\\n\\s*/g, \"\")\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        helper.addActions({\r\n            data: {\r\n                json,\r\n                text\r\n            },\r\n            high: reader.cursor,\r\n            low: start,\r\n            type: \"json\"\r\n        });\r\n        return helper.succeed();\r\n    }\r\n};\r\n","import { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { StringReader } from \"../../brigadier/string-reader\";\r\nimport { ReturnHelper } from \"../../misc-functions\";\r\nimport { Parser, ParserInfo, ReturnedInfo } from \"../../types\";\r\n\r\nconst MIXED = new CommandErrorBuilder(\r\n    \"argument.pos.mixed\",\r\n    \"Cannot mix world & local coordinates (everything must either use ^ or not)\"\r\n);\r\n\r\nconst INCOMPLETE = new CommandErrorBuilder(\r\n    \"argument.pos.incomplete\",\r\n    \"Incomplete position argument. Only %s coords are present, when %s should be\"\r\n);\r\n\r\nconst NO_LOCAL = new CommandErrorBuilder(\r\n    \"argument.pos.nolocal\",\r\n    \"Local coords are not allowed\"\r\n);\r\n\r\nconst LOCAL = \"^\";\r\nconst RELATIVE = \"~\";\r\n\r\nexport interface CoordRules {\r\n    count: 2 | 3;\r\n    float: boolean;\r\n    local: boolean;\r\n}\r\n\r\nconst fail = (\r\n    reader: StringReader,\r\n    count: number,\r\n    hasWorld: boolean,\r\n    hasLocal: boolean,\r\n    start: number,\r\n    i: number\r\n) => {\r\n    const helper = new ReturnHelper();\r\n    if (!hasWorld) {\r\n        helper.addSuggestions({\r\n            start: reader.cursor,\r\n            text: LOCAL\r\n        });\r\n    }\r\n    if (!hasLocal) {\r\n        helper.addSuggestions({\r\n            start: reader.cursor,\r\n            text: RELATIVE\r\n        });\r\n    }\r\n    return helper.fail(\r\n        INCOMPLETE.create(\r\n            start,\r\n            reader.cursor,\r\n            (i + 1).toString(),\r\n            count.toString()\r\n        )\r\n    );\r\n};\r\n\r\nexport class CoordParser implements Parser {\r\n    private readonly rules: CoordRules;\r\n\r\n    public constructor(rules: CoordRules) {\r\n        this.rules = rules;\r\n    }\r\n\r\n    public parse(\r\n        reader: StringReader,\r\n        info: ParserInfo\r\n    ): ReturnedInfo<undefined> {\r\n        const helper = new ReturnHelper(info);\r\n        let hasLocal = false;\r\n        let hasWorld = false;\r\n        const start = reader.cursor;\r\n        for (let i = 0; i < this.rules.count; i++) {\r\n            if (!reader.canRead()) {\r\n                return helper.return(\r\n                    fail(reader, this.rules.count, hasWorld, hasLocal, start, 0)\r\n                );\r\n            }\r\n\r\n            const cstart = reader.cursor;\r\n            switch (reader.peek()) {\r\n                case RELATIVE:\r\n                    hasWorld = true;\r\n                    reader.skip();\r\n                    if (!helper.merge(this.parseNumber(reader))) {\r\n                        return helper.fail();\r\n                    }\r\n                    if (hasLocal) {\r\n                        helper.addErrors(MIXED.create(cstart, reader.cursor));\r\n                    }\r\n                    break;\r\n                case LOCAL:\r\n                    if (!this.rules.local) {\r\n                        helper.addErrors(\r\n                            NO_LOCAL.create(reader.cursor, reader.cursor + 1)\r\n                        );\r\n                    }\r\n                    hasLocal = true;\r\n                    reader.skip();\r\n                    if (!helper.merge(this.parseNumber(reader))) {\r\n                        return helper.fail();\r\n                    }\r\n                    if (hasWorld) {\r\n                        helper.addErrors(MIXED.create(cstart, reader.cursor));\r\n                    }\r\n                    break;\r\n                default:\r\n                    hasWorld = true;\r\n                    if (!helper.merge(this.parseNumber(reader, false))) {\r\n                        return helper.fail();\r\n                    }\r\n                    if (hasLocal) {\r\n                        helper.addErrors(MIXED.create(cstart, reader.cursor));\r\n                    }\r\n            }\r\n\r\n            if (i < this.rules.count - 1) {\r\n                if (!reader.canRead()) {\r\n                    return helper.fail(\r\n                        INCOMPLETE.create(\r\n                            start,\r\n                            reader.cursor,\r\n                            (i + 1).toString(),\r\n                            this.rules.count.toString()\r\n                        )\r\n                    );\r\n                }\r\n                if (!helper.merge(reader.expect(\" \"), { suggestions: false })) {\r\n                    return helper.return(\r\n                        fail(\r\n                            reader,\r\n                            this.rules.count,\r\n                            hasWorld,\r\n                            hasLocal,\r\n                            start,\r\n                            i\r\n                        )\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        return helper.succeed();\r\n    }\r\n\r\n    private parseNumber(\r\n        reader: StringReader,\r\n        allowBlank: boolean = true\r\n    ): ReturnedInfo<number> {\r\n        if ((!reader.canRead() || reader.peek().match(/\\s/)) && allowBlank) {\r\n            // tslint:disable-next-line:helper-return\r\n            return new ReturnHelper().succeed(0);\r\n        }\r\n        // tslint:disable-next-line:helper-return\r\n        return this.rules.float ? reader.readFloat() : reader.readInt();\r\n    }\r\n}\r\n\r\nexport const rotation = new CoordParser({\r\n    count: 2,\r\n    float: true,\r\n    local: false\r\n});\r\n\r\nexport const vec2 = new CoordParser({\r\n    count: 2,\r\n    float: true,\r\n    local: true\r\n});\r\n\r\nexport const vec3 = new CoordParser({\r\n    count: 3,\r\n    float: true,\r\n    local: true\r\n});\r\n\r\nexport const blockPos = new CoordParser({\r\n    count: 3,\r\n    float: false,\r\n    local: true\r\n});\r\n\r\nexport const columnPos = new CoordParser({\r\n    count: 2,\r\n    float: false,\r\n    local: false\r\n});\r\n","import { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { StringReader } from \"../../brigadier/string-reader\";\r\nimport {\r\n    dimensions,\r\n    effects,\r\n    enchantments,\r\n    entities,\r\n    particles\r\n} from \"../../data/lists/statics\";\r\nimport { NamespacedName } from \"../../data/types\";\r\nimport {\r\n    parseNamespaceOption,\r\n    ReturnHelper,\r\n    stringArrayToNamespaces,\r\n    stringifyNamespace\r\n} from \"../../misc-functions\";\r\nimport { CommandContext, Parser, ParserInfo, ReturnedInfo } from \"../../types\";\r\n\r\nexport class NamespaceListParser implements Parser {\r\n    private readonly error: CommandErrorBuilder;\r\n    private readonly options: string[];\r\n    private readonly resultFunction?: (\r\n        context: CommandContext,\r\n        result: NamespacedName[]\r\n    ) => void;\r\n    public constructor(\r\n        options: string[],\r\n        errorBuilder: CommandErrorBuilder,\r\n        context?: NamespaceListParser[\"resultFunction\"]\r\n    ) {\r\n        this.options = options;\r\n        this.error = errorBuilder;\r\n        this.resultFunction = context;\r\n    }\r\n    public parse(\r\n        reader: StringReader,\r\n        info: ParserInfo\r\n    ): ReturnedInfo<undefined> {\r\n        const helper = new ReturnHelper(info);\r\n        const start = reader.cursor;\r\n        const result = parseNamespaceOption(\r\n            reader,\r\n            stringArrayToNamespaces(this.options)\r\n        );\r\n        if (helper.merge(result)) {\r\n            if (this.resultFunction) {\r\n                this.resultFunction(info.context, result.data.values);\r\n                return helper.succeed();\r\n            } else {\r\n                return helper.succeed();\r\n            }\r\n        } else {\r\n            if (result.data) {\r\n                return helper\r\n                    .addErrors(\r\n                        this.error.create(\r\n                            start,\r\n                            reader.cursor,\r\n                            stringifyNamespace(result.data)\r\n                        )\r\n                    )\r\n                    .succeed();\r\n            } else {\r\n                return helper.fail();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const summonError = new CommandErrorBuilder(\r\n    \"entity.notFound\",\r\n    \"Unknown entity: %s\"\r\n);\r\nexport const summonParser = new NamespaceListParser(\r\n    entities,\r\n    summonError,\r\n    (context, ids) =>\r\n        (context.otherEntity = { ids: ids.map(stringifyNamespace) })\r\n);\r\n\r\nconst enchantmentError = new CommandErrorBuilder(\r\n    \"enchantment.unknown\",\r\n    \"Unknown enchantment: %s\"\r\n);\r\nexport const enchantmentParser = new NamespaceListParser(\r\n    enchantments,\r\n    enchantmentError\r\n);\r\n\r\nconst mobEffectError = new CommandErrorBuilder(\r\n    \"effect.effectNotFound\",\r\n    \"Unknown effect: %s\"\r\n);\r\nexport const mobEffectParser = new NamespaceListParser(effects, mobEffectError);\r\n\r\nconst particleError = new CommandErrorBuilder(\r\n    \"particle.notFound\",\r\n    \"Unknown particle: %s\"\r\n);\r\nexport const particleParser = new NamespaceListParser(particles, particleError);\r\n\r\nconst dimensionError = new CommandErrorBuilder(\r\n    \"argument.dimension.invalid\",\r\n    \"Unknown dimension: '%s'\"\r\n);\r\n\r\nexport const dimensionParser = new NamespaceListParser(\r\n    dimensions,\r\n    dimensionError\r\n);\r\n","import { DiagnosticSeverity } from \"vscode-languageserver\";\r\nimport { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { READER_EXCEPTIONS, StringReader } from \"../../brigadier/string-reader\";\r\nimport { ReturnHelper } from \"../../misc-functions\";\r\nimport { Parser, ReturnedInfo } from \"../../types\";\r\n\r\nexport interface MCRange {\r\n    max?: number;\r\n    min?: number;\r\n}\r\n\r\nconst swapped = new CommandErrorBuilder(\r\n    \"argument.range.swapped\",\r\n    \"Min cannot be bigger than max\"\r\n);\r\nconst equalEnds = new CommandErrorBuilder(\r\n    \"argument.range.equal\",\r\n    \"Min and max are eqaul and can be replaced by '%s'\",\r\n    DiagnosticSeverity.Hint\r\n);\r\n\r\nconst digregex = /\\d/;\r\n\r\nfunction readIntLimited(reader: StringReader): ReturnedInfo<number> {\r\n    const helper = new ReturnHelper();\r\n    const start = reader.cursor;\r\n    const neg = reader.peek() === \"-\";\r\n    if (neg) {\r\n        reader.skip();\r\n    }\r\n    const num = reader.readWhileRegexp(digregex);\r\n    if (num.length === 0) {\r\n        if (neg) {\r\n            return helper.fail(\r\n                READER_EXCEPTIONS.INVALID_INT.create(start, reader.cursor)\r\n            );\r\n        } else {\r\n            return helper.fail(\r\n                READER_EXCEPTIONS.EXPECTED_INT.create(start, reader.cursor)\r\n            );\r\n        }\r\n    }\r\n    return helper.succeed(parseInt(`${neg ? \"-\" : \"\"}${num}`, 10));\r\n}\r\n\r\nfunction readFloatLimited(reader: StringReader): ReturnedInfo<number> {\r\n    const helper = new ReturnHelper();\r\n    const start = reader.cursor;\r\n    const neg = reader.peek() === \"-\";\r\n    if (neg) {\r\n        reader.skip();\r\n    }\r\n\r\n    let hasDecPoint = false;\r\n\r\n    const num = reader.readWhileFunction(v => {\r\n        if (v === \".\") {\r\n            if (hasDecPoint) {\r\n                return false;\r\n            } else {\r\n                hasDecPoint = true;\r\n                return true;\r\n            }\r\n        } else if (/\\d/.test(v)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n    if (num.length === 0) {\r\n        if (neg) {\r\n            return helper.fail(\r\n                READER_EXCEPTIONS.INVALID_FLOAT.create(start, reader.cursor)\r\n            );\r\n        } else {\r\n            return helper.fail(\r\n                READER_EXCEPTIONS.EXPECTED_FLOAT.create(start, reader.cursor)\r\n            );\r\n        }\r\n    }\r\n    return helper.succeed(parseFloat(`${neg ? \"-\" : \"\"}${num}`));\r\n}\r\n\r\nexport function parseRange(\r\n    reader: StringReader,\r\n    float: boolean = false\r\n): ReturnedInfo<MCRange> {\r\n    const helper = new ReturnHelper();\r\n    const start = reader.cursor;\r\n    if (\r\n        helper.merge(reader.expect(\"..\"), {\r\n            errors: false\r\n        })\r\n    ) {\r\n        const max = float ? readFloatLimited(reader) : readIntLimited(reader);\r\n        if (!helper.merge(max)) {\r\n            return helper.fail();\r\n        }\r\n        return helper.succeed({\r\n            max: max.data\r\n        });\r\n    } else {\r\n        const min = float ? readFloatLimited(reader) : readIntLimited(reader);\r\n        if (!helper.merge(min)) {\r\n            return helper.fail();\r\n        }\r\n        if (\r\n            !helper.merge(reader.expect(\"..\"), {\r\n                errors: false\r\n            })\r\n        ) {\r\n            return helper.succeed({\r\n                max: min.data,\r\n                min: min.data\r\n            });\r\n        } else if (StringReader.charAllowedNumber.test(reader.peek())) {\r\n            const max = float\r\n                ? readFloatLimited(reader)\r\n                : readIntLimited(reader);\r\n            if (!helper.merge(max)) {\r\n                return helper.fail();\r\n            }\r\n            if (max.data < min.data) {\r\n                helper.addErrors(swapped.create(start, reader.cursor));\r\n                helper.addActions({\r\n                    data: `${max.data}..${min.data}`,\r\n                    high: reader.cursor,\r\n                    low: start,\r\n                    type: \"format\"\r\n                });\r\n                return helper.succeed({\r\n                    max: min.data,\r\n                    min: max.data\r\n                });\r\n            }\r\n            if (max.data === min.data) {\r\n                helper.addErrors(\r\n                    equalEnds.create(start, reader.cursor, min.data.toString())\r\n                );\r\n                helper.addActions({\r\n                    data: `${min.data}`,\r\n                    high: reader.cursor,\r\n                    low: start,\r\n                    type: \"format\"\r\n                });\r\n            }\r\n            return helper.succeed({\r\n                max: max.data,\r\n                min: min.data\r\n            });\r\n        } else {\r\n            return helper.succeed({\r\n                min: min.data\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const floatRange: Parser = {\r\n    parse: (reader, info) => {\r\n        const helper = new ReturnHelper(info);\r\n        const res = parseRange(reader, true);\r\n        return helper.merge(res) ? helper.succeed() : helper.fail();\r\n    }\r\n};\r\n\r\nexport const intRange: Parser = {\r\n    parse: (reader, info) => {\r\n        const helper = new ReturnHelper(info);\r\n        const res = parseRange(reader, false);\r\n        return helper.merge(res) ? helper.succeed() : helper.fail();\r\n    }\r\n};\r\n","import { CompletionItemKind, DiagnosticSeverity } from \"vscode-languageserver\";\r\nimport { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { StringReader } from \"../../brigadier/string-reader\";\r\nimport { NONWHITESPACE } from \"../../consts\";\r\nimport { Scoreboard } from \"../../data/nbt/nbt-types\";\r\nimport { DataResource } from \"../../data/types\";\r\nimport {\r\n    getResourcesofType,\r\n    getReturned,\r\n    namespacedEntities,\r\n    parseNamespaceOption,\r\n    parseNamespaceOrTag,\r\n    processParsedNamespaceOption,\r\n    ReturnHelper,\r\n    stringArrayEqual,\r\n    stringifyNamespace\r\n} from \"../../misc-functions\";\r\nimport { typed_keys } from \"../../misc-functions/third_party/typed-keys\";\r\nimport { ContextChange, Parser, ParserInfo, ReturnedInfo } from \"../../types\";\r\nimport { summonError } from \"./namespace-list\";\r\nimport { validateParse } from \"./nbt/nbt\";\r\nimport { MCRange, parseRange } from \"./range\";\r\n// tslint:disable:cyclomatic-complexity\r\nconst uuidregex = /^[a-fA-F0-9]{1,8}-[a-fA-F0-9]{1,4}-[a-fA-F0-9]{1,4}-[a-fA-F0-9]{1,4}-[a-fA-F0-9]{1,12}$/;\r\n/* Should be disabled if not wanted\r\nhttps://github.com/Levertion/mcfunction-langserver/issues/89 */\r\nconst uuidwarn = new CommandErrorBuilder(\r\n    \"argument.entity.uuid\",\r\n    \"Selecting an entity based on its UUID may cause instability [This warning can be disabled in the settings (Although not at the moment)]\",\r\n    DiagnosticSeverity.Warning\r\n);\r\ninterface NodeProp {\r\n    amount: \"single\" | \"multiple\";\r\n    type: \"entity\" | \"player\";\r\n}\r\ntype EntityContextType = { [K in ArgumentType]: {} };\r\ninterface TagInfo {\r\n    /**\r\n     * Whether there is an empty tag.\r\n     *\r\n     * True=>Entity must have a tag (`tag=!`)\r\n     *\r\n     * False=>Entity must not have a tag (`tag=`)\r\n     */\r\n    all?: boolean;\r\n    set: Set<string>;\r\n    unset: Set<string>;\r\n}\r\ninterface TeamInfo {\r\n    /**\r\n     * Whether there is an empty team.\r\n     *\r\n     * True=>Entity must have a team (`team=!`)\r\n     *\r\n     * False=>Entity must not have a team (`team=`)\r\n     */\r\n    all?: boolean;\r\n    set?: string;\r\n    unset: Set<string>;\r\n}\r\ninterface TypeInfo {\r\n    set: Set<string>;\r\n    unset: Set<string>;\r\n}\r\ninterface EntityContextInner extends EntityContextType {\r\n    advancements: Dictionary<AdvancementOption>;\r\n    distance: MCRange;\r\n    dx: number;\r\n    dy: number;\r\n    dz: number;\r\n    gamemode: string[];\r\n    level: MCRange;\r\n    limit: number;\r\n    name: Set<string>;\r\n    nbt: {};\r\n    scores: Dictionary<MCRange>;\r\n    sort: string;\r\n    tag: TagInfo;\r\n    team: TeamInfo;\r\n    type: TypeInfo;\r\n    x: number;\r\n    x_rotation: MCRange;\r\n    y: number;\r\n    y_rotation: MCRange;\r\n    z: number;\r\n}\r\nexport type EntityContext = Partial<EntityContextInner>;\r\ntype AdvancementOption = boolean | Dictionary<boolean>;\r\nconst contexterr = {\r\n    oneEntity: new CommandErrorBuilder(\r\n        \"argument.entity.toomany\",\r\n        \"Only one entity is allowed, but the provided selector allows more than one\"\r\n    ),\r\n    onePlayer: new CommandErrorBuilder(\r\n        \"argument.player.toomany\",\r\n        \"Only one player is allowed, but the provided selector allows more than one\"\r\n    ),\r\n    onlyPlayer: new CommandErrorBuilder(\r\n        \"argument.player.entities\",\r\n        \"Only players may be affected by this command, but the provided selector includes entities\"\r\n    )\r\n};\r\nexport type ArgumentType =\r\n    | \"advancements\"\r\n    | \"distance\"\r\n    | \"dx\"\r\n    | \"dy\"\r\n    | \"dz\"\r\n    | \"gamemode\"\r\n    | \"level\"\r\n    | \"limit\"\r\n    | \"name\"\r\n    | \"nbt\"\r\n    | \"scores\"\r\n    | \"sort\"\r\n    | \"tag\"\r\n    | \"team\"\r\n    | \"type\"\r\n    | \"x\"\r\n    | \"x_rotation\"\r\n    | \"y\"\r\n    | \"y_rotation\"\r\n    | \"z\";\r\nconst errors = {\r\n    duplicate: new CommandErrorBuilder(\r\n        \"argument.entity.option.duplicate\",\r\n        \"Duplicate argument '%s'\"\r\n    ),\r\n    gamemode: {\r\n        expected: new CommandErrorBuilder(\r\n            \"argument.entity.option.gamemode.expected\",\r\n            \"Expected gamemode\"\r\n        ),\r\n        invalid: new CommandErrorBuilder(\r\n            \"argument.entity.option.gamemode.invalid\",\r\n            \"Invalid gamemode '%s'\"\r\n        )\r\n    },\r\n    impossible: new CommandErrorBuilder(\r\n        \"argument.entity.option.nointersect\",\r\n        \"Argument '%s' cannot match any entity\"\r\n    ),\r\n    intOpt: {\r\n        aboveMax: new CommandErrorBuilder(\r\n            \"argument.entity.option.number.abovemax\",\r\n            \"Argument '%s' is greater than %s\"\r\n        ),\r\n        belowMin: new CommandErrorBuilder(\r\n            \"argument.entity.option.number.belowmin\",\r\n            \"Argument '%s' is less than %s\"\r\n        )\r\n    },\r\n    invalidSort: new CommandErrorBuilder(\r\n        \"argument.entity.option.sort.invalid\",\r\n        \"Invalid sort type '%s'\"\r\n    ),\r\n    noInfo: new CommandErrorBuilder(\r\n        \"argument.entity.option.noinfo\",\r\n        \"Argument '%s' is redundant\"\r\n    ),\r\n    unknownArg: new CommandErrorBuilder(\r\n        \"argument.entity.argument.unknown\",\r\n        \"Unknown argument type '%s'\"\r\n    ),\r\n    unknown_tag: new CommandErrorBuilder(\r\n        \"arguments.entity.tag.unknown\",\r\n        \"Unknown entity tag '%s'\"\r\n    )\r\n};\r\nfunction getContextError(\r\n    context: EntityContext,\r\n    prop: NodeProp\r\n): CommandErrorBuilder | undefined {\r\n    if (\r\n        prop.type === \"player\" &&\r\n        context.type &&\r\n        context.type.set &&\r\n        context.type.set.size === 1 &&\r\n        context.type.set.has(\"minecraft:player\")\r\n    ) {\r\n        return contexterr.onlyPlayer;\r\n    }\r\n    if (prop.amount === \"single\" && context.limit !== 1) {\r\n        return prop.type === \"player\"\r\n            ? contexterr.onePlayer\r\n            : contexterr.oneEntity;\r\n    }\r\n    return undefined;\r\n}\r\nexport type OptionParser = (\r\n    reader: StringReader,\r\n    info: ParserInfo,\r\n    context: EntityContext,\r\n    argStart: number\r\n) => ReturnedInfo<undefined>;\r\n// tslint:disable-next-line:no-unnecessary-callback-wrapper it gives an error if it isn't wrapped\r\nconst gamemodes = [\"survival\", \"creative\", \"adventure\", \"spectator\"];\r\nfunction isNegated(reader: StringReader, helper: ReturnHelper): boolean {\r\n    return helper.merge(reader.expect(\"!\"), { errors: false });\r\n}\r\nexport const numOptParser = (\r\n    float: boolean,\r\n    min: number | undefined,\r\n    max: number | undefined,\r\n    key: ArgumentType\r\n) => (\r\n    reader: StringReader,\r\n    _: ParserInfo,\r\n    context: EntityContext,\r\n    argStart: number\r\n) => {\r\n    const helper = new ReturnHelper();\r\n    const start = reader.cursor;\r\n    const res = float ? reader.readFloat() : reader.readInt();\r\n    if (!helper.merge(res)) {\r\n        return helper.fail();\r\n    }\r\n    const num = res.data;\r\n    if (max && num > max) {\r\n        helper.addErrors(\r\n            errors.intOpt.aboveMax.create(\r\n                start,\r\n                reader.cursor,\r\n                key,\r\n                max.toString()\r\n            )\r\n        );\r\n        return helper.succeed();\r\n    }\r\n    if (min && num < min) {\r\n        helper.addErrors(\r\n            errors.intOpt.belowMin.create(\r\n                start,\r\n                reader.cursor,\r\n                key,\r\n                min.toString()\r\n            )\r\n        );\r\n        return helper.succeed();\r\n    }\r\n    // The entity context already has a value\r\n    if (!!context[key]) {\r\n        helper.addErrors(errors.duplicate.create(argStart, reader.cursor, key));\r\n        return helper.succeed();\r\n    }\r\n    context[key] = num;\r\n    return helper.succeed();\r\n};\r\nexport const rangeOptParser = (\r\n    float: boolean,\r\n    min: number | undefined,\r\n    max: number | undefined,\r\n    key: ArgumentType\r\n) => (\r\n    reader: StringReader,\r\n    _: ParserInfo,\r\n    context: EntityContext,\r\n    argStart: number\r\n) => {\r\n    const helper = new ReturnHelper();\r\n    const start = reader.cursor;\r\n    const res = parseRange(reader, float);\r\n    if (!helper.merge(res)) {\r\n        return helper.fail();\r\n    }\r\n    const range = res.data;\r\n    if (range.max) {\r\n        if (max && range.max > max) {\r\n            helper.addErrors(\r\n                errors.intOpt.aboveMax.create(\r\n                    start,\r\n                    reader.cursor,\r\n                    key,\r\n                    max.toString()\r\n                )\r\n            );\r\n            return helper.succeed();\r\n        }\r\n        if (min && range.max < min) {\r\n            helper.addErrors(\r\n                errors.intOpt.belowMin.create(\r\n                    start,\r\n                    reader.cursor,\r\n                    key,\r\n                    min.toString()\r\n                )\r\n            );\r\n            return helper.succeed();\r\n        }\r\n    }\r\n    if (range.min) {\r\n        if (max && range.min > max) {\r\n            helper.addErrors(\r\n                errors.intOpt.aboveMax.create(\r\n                    start,\r\n                    reader.cursor,\r\n                    key,\r\n                    max.toString()\r\n                )\r\n            );\r\n            return helper.succeed();\r\n        }\r\n        if (min && range.min < min) {\r\n            helper.addErrors(\r\n                errors.intOpt.belowMin.create(\r\n                    start,\r\n                    reader.cursor,\r\n                    key,\r\n                    min.toString()\r\n                )\r\n            );\r\n            return helper.succeed();\r\n        }\r\n    }\r\n    if (!!context[key]) {\r\n        helper.addErrors(errors.duplicate.create(argStart, reader.cursor, key));\r\n        return helper.succeed();\r\n    }\r\n    context[key] = range;\r\n    return helper.succeed();\r\n};\r\nexport function parseScores(\r\n    reader: StringReader,\r\n    scoreboard: Scoreboard | undefined\r\n): ReturnedInfo<Dictionary<MCRange>> {\r\n    const helper = new ReturnHelper();\r\n    if (!helper.merge(reader.expect(\"{\"))) {\r\n        return helper.fail();\r\n    }\r\n    const objnames = scoreboard\r\n        ? scoreboard.data.Objectives.map(v => v.Name)\r\n        : [];\r\n    const out: Dictionary<MCRange> = {};\r\n    if (!helper.merge(reader.expect(\"}\"), { errors: false })) {\r\n        while (true) {\r\n            const res = scoreboard\r\n                ? reader.readOption(objnames, {\r\n                      quote: false,\r\n                      unquoted: StringReader.charAllowedInUnquotedString\r\n                  })\r\n                : getReturned(reader.readUnquotedString());\r\n            const data = res.data;\r\n            if (!helper.merge(res) && data === undefined) {\r\n                return helper.fail();\r\n            }\r\n            if (!helper.merge(reader.expect(\"=\"))) {\r\n                return helper.fail();\r\n            }\r\n            const range = parseRange(reader);\r\n            if (!helper.merge(range)) {\r\n                return helper.fail();\r\n            }\r\n            out[data as string] = range.data;\r\n            if (helper.merge(reader.expect(\",\"), { errors: false })) {\r\n                continue;\r\n            } else if (helper.merge(reader.expect(\"}\"), { errors: false })) {\r\n                break;\r\n            } else {\r\n                const error = reader.expectOption(\",\", \"}\"); // Get the error for expected option\r\n                return helper.mergeChain(error, { suggestions: false }).fail();\r\n            }\r\n        }\r\n    }\r\n    return helper.succeed(out);\r\n}\r\nexport function parseAdvancements(\r\n    reader: StringReader,\r\n    info: ParserInfo\r\n): ReturnedInfo<Dictionary<AdvancementOption>> {\r\n    const advancements = getResourcesofType(info.data, \"advancements\");\r\n    const helper = new ReturnHelper();\r\n    if (!helper.merge(reader.expect(\"{\"))) {\r\n        return helper.fail();\r\n    }\r\n    const out: Dictionary<AdvancementOption> = {};\r\n    while (true) {\r\n        let advname: string;\r\n        const criteriaOptions: string[] = [];\r\n        const res = parseNamespaceOption<DataResource<string[]>>(\r\n            reader,\r\n            advancements\r\n        );\r\n        if (!helper.merge(res)) {\r\n            if (!res.data) {\r\n                return helper.fail();\r\n            } else {\r\n                advname = stringifyNamespace(res.data);\r\n            }\r\n        } else {\r\n            advname = stringifyNamespace(res.data.literal);\r\n            res.data.values\r\n                .map(v => v.data)\r\n                .filter(v => !!v)\r\n                .forEach(v => criteriaOptions.push(...(v as string[])));\r\n        }\r\n        if (!helper.merge(reader.expect(\"=\"))) {\r\n            return helper.fail();\r\n        }\r\n        if (helper.merge(reader.expect(\"{\"), { errors: false })) {\r\n            const criteria: Dictionary<boolean> = {};\r\n            while (true) {\r\n                const criterion = reader.readOption(criteriaOptions, {\r\n                    quote: false,\r\n                    unquoted: StringReader.charAllowedInUnquotedString\r\n                });\r\n                if (!helper.merge(criterion)) {\r\n                    if (!criterion.data) {\r\n                        return helper.fail();\r\n                    }\r\n                }\r\n                if (!helper.merge(reader.expect(\"=\"))) {\r\n                    return helper.fail();\r\n                }\r\n                const critval = reader.readBoolean();\r\n                if (!helper.merge(critval)) {\r\n                    return helper.fail();\r\n                }\r\n                criteria[criterion.data as string] = critval.data;\r\n                if (helper.merge(reader.expect(\",\"), { errors: false })) {\r\n                    continue;\r\n                } else if (\r\n                    helper.merge(reader.expect(\"}\"), { errors: false })\r\n                ) {\r\n                    break;\r\n                } else {\r\n                    const error = reader.expectOption(\",\", \"}\"); // Get the error for expected option\r\n                    return helper\r\n                        .mergeChain(error, { suggestions: false })\r\n                        .fail();\r\n                }\r\n            }\r\n            out[advname] = criteria;\r\n        } else {\r\n            const bool = reader.readBoolean();\r\n            if (!helper.merge(bool)) {\r\n                return helper.fail();\r\n            }\r\n            out[advname] = bool.data;\r\n        }\r\n        if (helper.merge(reader.expect(\",\"), { errors: false })) {\r\n            continue;\r\n        } else if (helper.merge(reader.expect(\"}\"), { errors: false })) {\r\n            break;\r\n        } else {\r\n            const error = reader.expectOption(\",\", \"}\"); // Get the error for expected option\r\n            return helper.mergeChain(error, { suggestions: false }).fail();\r\n        }\r\n    }\r\n    return helper.succeed(out);\r\n}\r\nexport const argParsers: { [K in ArgumentType]: OptionParser } = {\r\n    advancements: (reader, info, context, argStart) => {\r\n        const helper = new ReturnHelper();\r\n        const res = parseAdvancements(reader, info);\r\n        if (!helper.merge(res)) {\r\n            return helper.fail();\r\n        }\r\n        if (context.advancements) {\r\n            helper.addErrors(\r\n                errors.duplicate.create(argStart, reader.cursor, \"advancements\")\r\n            );\r\n            Object.assign(context.advancements, res.data);\r\n        } else {\r\n            context.advancements = res.data;\r\n        }\r\n        return helper.succeed();\r\n    },\r\n    distance: rangeOptParser(true, 0, 3e7, \"distance\"),\r\n    dx: numOptParser(true, undefined, undefined, \"dx\"),\r\n    dy: numOptParser(true, undefined, undefined, \"dy\"),\r\n    dz: numOptParser(true, undefined, undefined, \"dz\"),\r\n    gamemode: (reader, _, context) => {\r\n        const helper = new ReturnHelper();\r\n        const start = reader.cursor;\r\n        const negated = isNegated(reader, helper);\r\n        const res = reader.readOption(gamemodes, {\r\n            quote: false,\r\n            unquoted: StringReader.charAllowedInUnquotedString\r\n        });\r\n        if (!helper.merge(res)) {\r\n            if (res.data) {\r\n                helper.addErrors(\r\n                    errors.gamemode.invalid.create(\r\n                        start,\r\n                        reader.cursor,\r\n                        res.data\r\n                    )\r\n                );\r\n                return helper.succeed();\r\n            } else {\r\n                return helper.fail(\r\n                    errors.gamemode.expected.create(start, reader.cursor)\r\n                );\r\n            }\r\n        }\r\n        const neglist = negated\r\n            ? gamemodes.filter(v => v !== res.data)\r\n            : [res.data];\r\n        if (context.gamemode && stringArrayEqual(neglist, context.gamemode)) {\r\n            helper.addErrors(errors.noInfo.create(start, reader.cursor));\r\n            return helper.succeed();\r\n        }\r\n        const intTypes: string[] = context.gamemode\r\n            ? context.gamemode.filter(v => neglist.indexOf(v) !== -1)\r\n            : neglist;\r\n        if (intTypes.length === 0) {\r\n            helper.addErrors(\r\n                errors.impossible.create(start, reader.cursor, \"gamemode\")\r\n            );\r\n            context.gamemode = [];\r\n            return helper.succeed();\r\n        } else {\r\n            context.gamemode = intTypes;\r\n            return helper.succeed();\r\n        }\r\n    },\r\n    level: rangeOptParser(false, 0, undefined, \"level\"),\r\n    limit: numOptParser(false, 1, undefined, \"limit\"),\r\n    name: (reader, _, context) => {\r\n        const helper = new ReturnHelper();\r\n        const start = reader.cursor;\r\n        const negated = isNegated(reader, helper);\r\n        const restag = reader.readString();\r\n        if (!helper.merge(restag)) {\r\n            return helper.fail();\r\n        }\r\n        const name = restag.data;\r\n        const fullname = `${negated ? \"!\" : \"\"}${name}`;\r\n        if (context.name && context.name.has(fullname)) {\r\n            helper.addErrors(\r\n                errors.noInfo.create(start, reader.cursor, \"name\")\r\n            );\r\n            return helper.succeed();\r\n        }\r\n        const newNames = context.name || new Set();\r\n        newNames.add(fullname);\r\n        context.name = newNames;\r\n        return helper.succeed();\r\n    },\r\n    nbt: (reader, info, context) => {\r\n        const helper = new ReturnHelper();\r\n        isNegated(reader, helper);\r\n        const res = validateParse(reader, info, {\r\n            ids: context.type &&\r\n                context.type.set && [...context.type.set.values()],\r\n            kind: \"entity\"\r\n        });\r\n        if (!helper.merge(res)) {\r\n            return helper.fail();\r\n        } else {\r\n            return helper.succeed();\r\n        }\r\n    },\r\n    scores: (reader, info, context, argStart) => {\r\n        const helper = new ReturnHelper();\r\n        const obj = parseScores(\r\n            reader,\r\n            info.data.localData ? info.data.localData.nbt.scoreboard : undefined\r\n        );\r\n        if (!helper.merge(obj)) {\r\n            return helper.fail();\r\n        }\r\n        if (context.scores) {\r\n            helper.addErrors(\r\n                errors.duplicate.create(argStart, reader.cursor, \"scores\")\r\n            );\r\n            return helper.succeed();\r\n        } else {\r\n            context.scores = obj.data;\r\n            return helper.succeed();\r\n        }\r\n    },\r\n    sort: (reader, _, context, argStart) => {\r\n        const helper = new ReturnHelper();\r\n        const start = reader.cursor;\r\n        const res = reader.readOption(\r\n            [\"arbitrary\", \"furthest\", \"nearest\", \"random\"],\r\n            {\r\n                quote: false,\r\n                unquoted: StringReader.charAllowedInUnquotedString\r\n            }\r\n        );\r\n        if (!helper.merge(res)) {\r\n            if (!res.data) {\r\n                return helper.fail();\r\n            } else {\r\n                helper.addErrors(\r\n                    errors.invalidSort.create(start, reader.cursor, res.data)\r\n                );\r\n            }\r\n        }\r\n        if (context.sort) {\r\n            helper.addErrors(\r\n                errors.duplicate.create(argStart, reader.cursor, \"scores\")\r\n            );\r\n            return helper.succeed();\r\n        }\r\n        context.sort = res.data;\r\n        return helper.succeed();\r\n    },\r\n    tag: (reader, _, context) => {\r\n        const helper = new ReturnHelper();\r\n        const start = reader.cursor;\r\n        const negated = isNegated(reader, helper);\r\n        const tag = reader.readUnquotedString();\r\n        const result: TagInfo = context.tag || {\r\n            set: new Set(),\r\n            unset: new Set()\r\n        };\r\n        if (tag === \"\") {\r\n            if (result.all !== undefined) {\r\n                if (result.all === negated) {\r\n                    helper.addErrors(\r\n                        errors.noInfo.create(start, reader.cursor, \"tag\")\r\n                    );\r\n                } else {\r\n                    helper.addErrors(\r\n                        errors.impossible.create(start, reader.cursor, \"tag\")\r\n                    );\r\n                }\r\n            } else {\r\n                result.all = negated;\r\n            }\r\n            if (result.unset.size > 0) {\r\n                if (!negated) {\r\n                    helper.addErrors(\r\n                        errors.duplicate.create(start, reader.cursor, \"type\")\r\n                    );\r\n                }\r\n            }\r\n            if (result.set.size > 0) {\r\n                if (negated) {\r\n                    helper.addErrors(\r\n                        errors.duplicate.create(start, reader.cursor, \"type\")\r\n                    );\r\n                } else {\r\n                    helper.addErrors(\r\n                        errors.impossible.create(start, reader.cursor, \"type\")\r\n                    );\r\n                }\r\n            }\r\n        } else {\r\n            if (result.set.has(tag)) {\r\n                if (negated) {\r\n                    helper.addErrors(\r\n                        errors.impossible.create(start, reader.cursor, \"tag\")\r\n                    );\r\n                } else {\r\n                    helper.addErrors(\r\n                        errors.noInfo.create(start, reader.cursor, \"tag\")\r\n                    );\r\n                }\r\n            }\r\n            if (result.unset.has(tag)) {\r\n                if (negated) {\r\n                    helper.addErrors(\r\n                        errors.noInfo.create(start, reader.cursor, \"tag\")\r\n                    );\r\n                } else {\r\n                    helper.addErrors(\r\n                        errors.impossible.create(start, reader.cursor, \"tag\")\r\n                    );\r\n                }\r\n            }\r\n            if (result.all === false) {\r\n                if (negated) {\r\n                    helper.addErrors(\r\n                        errors.noInfo.create(start, reader.cursor, \"tag\")\r\n                    );\r\n                } else {\r\n                    helper.addErrors(\r\n                        errors.impossible.create(start, reader.cursor, \"tag\")\r\n                    );\r\n                }\r\n            }\r\n            if (negated) {\r\n                result.unset.add(tag);\r\n            } else {\r\n                result.set.add(tag);\r\n            }\r\n        }\r\n        context.tag = result;\r\n        return helper.succeed();\r\n    },\r\n    team: (reader, info, context) => {\r\n        const helper = new ReturnHelper();\r\n        const start = reader.cursor;\r\n        const negated = isNegated(reader, helper);\r\n        const teamnames =\r\n            (info.data.localData &&\r\n                info.data.localData.nbt.scoreboard &&\r\n                info.data.localData.nbt.scoreboard.data.Teams.map(\r\n                    v => v.Name\r\n                )) ||\r\n            [];\r\n        const res = reader.readOption(teamnames, {\r\n            quote: false,\r\n            unquoted: StringReader.charAllowedInUnquotedString\r\n        });\r\n        if (!helper.merge(res)) {\r\n            if (res.data === undefined) {\r\n                return helper.succeed();\r\n            } else {\r\n                return helper.fail();\r\n            }\r\n        }\r\n        const teamInfo = context.team || { unset: new Set() };\r\n        if (res.data === \"\") {\r\n            if (teamInfo.all !== undefined) {\r\n                if (teamInfo.all === !negated) {\r\n                    helper.addErrors(\r\n                        errors.noInfo.create(start, reader.cursor, \"team\")\r\n                    );\r\n                } else {\r\n                    helper.addErrors(\r\n                        errors.impossible.create(start, reader.cursor, \"team\")\r\n                    );\r\n                }\r\n            }\r\n            teamInfo.all = !negated;\r\n        } else {\r\n            if (negated) {\r\n                if (\r\n                    teamInfo.unset.has(res.data) ||\r\n                    teamInfo.all === false ||\r\n                    teamInfo.set !== undefined\r\n                ) {\r\n                    helper.addErrors(\r\n                        errors.noInfo.create(start, reader.cursor, \"team\")\r\n                    );\r\n                }\r\n                teamInfo.unset.add(res.data);\r\n            } else {\r\n                if (\r\n                    teamInfo.set !== undefined ||\r\n                    teamInfo.unset.has(res.data) ||\r\n                    teamInfo.all === false\r\n                ) {\r\n                    helper.addErrors(\r\n                        errors.impossible.create(start, reader.cursor, \"team\")\r\n                    );\r\n                }\r\n                teamInfo.set = res.data;\r\n            }\r\n        }\r\n        context.team = teamInfo;\r\n        return helper.succeed();\r\n    },\r\n    type: (reader, info, context) => {\r\n        const helper = new ReturnHelper();\r\n        const start = reader.cursor;\r\n        const negated = isNegated(reader, helper);\r\n        const parsedType = parseNamespaceOrTag(reader, info, \"entity_tags\");\r\n        if (!helper.merge(parsedType)) {\r\n            if (parsedType.data) {\r\n                helper.addErrors(\r\n                    errors.unknown_tag.create(\r\n                        start,\r\n                        reader.cursor,\r\n                        stringifyNamespace(parsedType.data)\r\n                    )\r\n                );\r\n                return helper.succeed();\r\n            }\r\n            return helper.fail();\r\n        }\r\n        if (!parsedType.data.resolved) {\r\n            const postProcess = processParsedNamespaceOption(\r\n                parsedType.data.parsed,\r\n                namespacedEntities,\r\n                info.suggesting && !reader.canRead(),\r\n                start,\r\n                CompletionItemKind.Event\r\n            );\r\n            helper.merge(postProcess);\r\n            if (postProcess.data.length === 0) {\r\n                helper.addErrors(\r\n                    summonError.create(\r\n                        start,\r\n                        reader.cursor,\r\n                        stringifyNamespace(parsedType.data.parsed)\r\n                    )\r\n                );\r\n            }\r\n        }\r\n        const parsedTypes = parsedType.data.resolved || [\r\n            parsedType.data.parsed\r\n        ];\r\n        const typeInfo = context.type || { set: new Set(), unset: new Set() };\r\n        const { set, unset } = typeInfo;\r\n        const stringifiedTypes = parsedTypes.map(stringifyNamespace);\r\n        if (!negated) {\r\n            if (stringifiedTypes.every(set.has.bind(set))) {\r\n                helper.addErrors(\r\n                    errors.noInfo.create(start, reader.cursor, \"type\")\r\n                );\r\n            } else if (\r\n                set.size > 0 &&\r\n                !stringifiedTypes.some(set.has.bind(set))\r\n            ) {\r\n                helper.addErrors(\r\n                    errors.impossible.create(start, reader.cursor, \"type\")\r\n                );\r\n            }\r\n            if (stringifiedTypes.every(unset.has.bind(unset))) {\r\n                helper.addErrors(\r\n                    errors.impossible.create(start, reader.cursor, \"type\")\r\n                );\r\n            }\r\n            for (const name of stringifiedTypes) {\r\n                set.add(name);\r\n            }\r\n        } else {\r\n            if (stringifiedTypes.every(set.has.bind(set))) {\r\n                helper.addErrors(\r\n                    errors.impossible.create(start, reader.cursor, \"type\")\r\n                );\r\n            }\r\n            if (stringifiedTypes.every(unset.has.bind(unset))) {\r\n                helper.addErrors(\r\n                    errors.noInfo.create(start, reader.cursor, \"type\")\r\n                );\r\n            }\r\n            for (const name of stringifiedTypes) {\r\n                unset.add(name);\r\n            }\r\n        }\r\n        context.type = { ...typeInfo, set, unset };\r\n        return helper.succeed();\r\n    },\r\n    x: numOptParser(true, -3e7, 3e7 - 1, \"x\"),\r\n    x_rotation: rangeOptParser(true, undefined, undefined, \"x_rotation\"),\r\n    y: numOptParser(true, 0, 255, \"y\"),\r\n    y_rotation: rangeOptParser(true, undefined, undefined, \"y_rotation\"),\r\n    z: numOptParser(true, -3e7, 3e7 - 1, \"z\")\r\n};\r\nexport class EntityBase implements Parser {\r\n    private readonly fakePlayer: boolean;\r\n    private readonly selector: boolean;\r\n    public constructor(fakePlayer: boolean, selector: boolean) {\r\n        this.fakePlayer = fakePlayer;\r\n        this.selector = selector;\r\n    }\r\n    public parse(\r\n        reader: StringReader,\r\n        info: ParserInfo\r\n    ): ReturnedInfo<ContextChange> {\r\n        const helper = new ReturnHelper(info);\r\n        const start = reader.cursor;\r\n        const playerSet = new Set<string>();\r\n        const blankSet = new Set<string>();\r\n        playerSet.add(\"minecraft:player\");\r\n        if (\r\n            this.selector &&\r\n            helper.merge(reader.expect(\"@\"), {\r\n                errors: false\r\n            })\r\n        ) {\r\n            const context: EntityContext = {};\r\n            const selectors: {\r\n                [key in \"p\" | \"a\" | \"r\" | \"s\" | \"e\"]: EntityContext\r\n            } = {\r\n                a: { type: { set: playerSet, unset: blankSet } },\r\n                e: {},\r\n                p: { limit: 1, type: { set: playerSet, unset: blankSet } },\r\n                r: { limit: 1, type: { set: playerSet, unset: blankSet } },\r\n                s: {\r\n                    limit: 1,\r\n                    type: {\r\n                        set: new Set((info.context.executor || {}).ids),\r\n                        unset: blankSet\r\n                    }\r\n                }\r\n            };\r\n            const exp = reader.expectOption(...typed_keys(selectors));\r\n            if (!helper.merge(exp)) {\r\n                // TODO, possibly better error message here\r\n                return helper.fail();\r\n            }\r\n            Object.assign(context, selectors[exp.data]);\r\n            if (\r\n                helper.merge(reader.expect(\"[\"), {\r\n                    errors: false\r\n                })\r\n            ) {\r\n                const closeBracket = reader.expect(\"]\");\r\n                if (!helper.merge(closeBracket, { errors: false })) {\r\n                    while (true) {\r\n                        const argStart = reader.cursor;\r\n                        const arg = reader.readOption(typed_keys(argParsers), {\r\n                            quote: false,\r\n                            unquoted: StringReader.charAllowedInUnquotedString\r\n                        });\r\n                        if (!helper.merge(arg, { errors: false })) {\r\n                            helper.addErrors(\r\n                                errors.unknownArg.create(\r\n                                    argStart,\r\n                                    reader.cursor\r\n                                )\r\n                            );\r\n                            return helper.fail();\r\n                        }\r\n                        if (!helper.merge(reader.expect(\"=\"))) {\r\n                            return helper.fail();\r\n                        }\r\n                        const opt = argParsers[arg.data];\r\n                        const conc = opt(reader, info, context, argStart);\r\n                        if (!helper.merge(conc)) {\r\n                            return helper.fail();\r\n                        }\r\n                        if (conc.data) {\r\n                            Object.assign(context, conc.data);\r\n                        }\r\n                        if (\r\n                            helper.merge(reader.expect(\"]\"), {\r\n                                errors: false\r\n                            })\r\n                        ) {\r\n                            break;\r\n                        } else if (\r\n                            helper.merge(reader.expect(\",\"), { errors: false })\r\n                        ) {\r\n                            continue;\r\n                        } else {\r\n                            // TODO: a custom error for this case?\r\n                            return helper.fail();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            const conterr = getContextError(\r\n                context,\r\n                info.node_properties as NodeProp\r\n            );\r\n            if (conterr) {\r\n                helper.addErrors(conterr.create(start, reader.cursor));\r\n            }\r\n            return helper.succeed(getContextChange(context, info.path));\r\n        } else if (uuidregex.test(reader.readWhileRegexp(/[0-9a-fA-F\\-]/))) {\r\n            helper.addErrors(uuidwarn.create(start, reader.cursor));\r\n            const conterr = getContextError(\r\n                {\r\n                    limit: 1\r\n                },\r\n                info.node_properties as NodeProp\r\n            );\r\n            if (conterr) {\r\n                helper.addErrors(\r\n                    conterr.create(reader.cursor - 36, reader.cursor)\r\n                );\r\n            }\r\n            return helper.succeed();\r\n        } else {\r\n            reader.cursor = start;\r\n            if (this.fakePlayer) {\r\n                const result = reader.readOption(\r\n                    (\r\n                        (info.data.localData &&\r\n                            info.data.localData.nbt.scoreboard &&\r\n                            info.data.localData.nbt.scoreboard.data\r\n                                .PlayerScores) ||\r\n                        []\r\n                    ).map(score => score.Name),\r\n                    { quote: false, unquoted: NONWHITESPACE }\r\n                );\r\n                const context: EntityContext = {\r\n                    limit: 1,\r\n                    type: { set: playerSet, unset: new Set() }\r\n                };\r\n                const contextErr = getContextError(\r\n                    context,\r\n                    info.node_properties as NodeProp\r\n                );\r\n                if (contextErr) {\r\n                    helper.addErrors(contextErr.create(start, reader.cursor));\r\n                }\r\n                if (helper.merge(result) || result.data) {\r\n                    return helper.succeed<ContextChange>(\r\n                        getContextChange(context, info.path)\r\n                    );\r\n                } else {\r\n                    // #unreachable!()\r\n                    return helper.fail();\r\n                }\r\n            } else {\r\n                const result = reader.readUnquotedString();\r\n                if (result === \"\") {\r\n                    return helper.fail();\r\n                }\r\n                const context: EntityContext = {\r\n                    limit: 1,\r\n                    type: { set: playerSet, unset: new Set() }\r\n                };\r\n                const contextErr = getContextError(\r\n                    context,\r\n                    info.node_properties as NodeProp\r\n                );\r\n                if (contextErr) {\r\n                    helper.addErrors(contextErr.create(start, reader.cursor));\r\n                }\r\n                return helper.succeed<ContextChange>(\r\n                    getContextChange(context, info.path)\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction getContextChange(\r\n    context: EntityContext,\r\n    path: string[]\r\n): ContextChange | undefined {\r\n    if (context.type) {\r\n        const result: string[] = [];\r\n        for (const item of context.type.set.values()) {\r\n            if (!context.type.unset.has(item)) {\r\n                result.push(item);\r\n            }\r\n        }\r\n        if (stringArrayEqual(path, [\"execute\", \"as\", \"entity\"])) {\r\n            return { executor: { ids: result } };\r\n        } else {\r\n            return { otherEntity: { ids: result } };\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nexport const entity = new EntityBase(false, true);\r\nexport const scoreHolder = new EntityBase(true, true);\r\nexport const gameProfile = new EntityBase(false, false);\r\n","import { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { StringReader } from \"../../brigadier/string-reader\";\r\nimport {\r\n    buildTagActions,\r\n    namespaceSuggestionString,\r\n    parseNamespaceOrTag,\r\n    ReturnHelper,\r\n    stringifyNamespace\r\n} from \"../../misc-functions\";\r\nimport { Parser, ParserInfo, ReturnedInfo } from \"../../types\";\r\nimport { validateParse } from \"./nbt/nbt\";\r\n\r\nconst NOTAG = new CommandErrorBuilder(\r\n    \"argument.item.tag.disallowed\",\r\n    \"Tags aren't allowed here, only actual items\"\r\n);\r\n\r\nconst UNKNOWNTAG = new CommandErrorBuilder(\r\n    \"arguments.item.tag.unknown\",\r\n    \"Unknown item tag '%s'\"\r\n);\r\n\r\nconst UNKNOWNITEM = new CommandErrorBuilder(\r\n    \"argument.item.id.invalid\",\r\n    \"Unknown item '%s'\"\r\n);\r\n\r\nexport class ItemParser implements Parser {\r\n    private readonly useTags: boolean;\r\n\r\n    public constructor(useTags: boolean) {\r\n        this.useTags = useTags;\r\n    }\r\n\r\n    public parse(\r\n        reader: StringReader,\r\n        properties: ParserInfo\r\n    ): ReturnedInfo<undefined> {\r\n        const helper = new ReturnHelper(properties);\r\n        const start = reader.cursor;\r\n        const parsed = parseNamespaceOrTag(\r\n            reader,\r\n            properties,\r\n            this.useTags ? \"item_tags\" : NOTAG\r\n        );\r\n        if (helper.merge(parsed)) {\r\n            const items: string[] = [];\r\n            if (parsed.data.resolved && parsed.data.values) {\r\n                helper.merge(\r\n                    buildTagActions(\r\n                        parsed.data.values,\r\n                        start + 1,\r\n                        reader.cursor,\r\n                        \"item_tags\",\r\n                        properties.data.localData\r\n                    )\r\n                );\r\n                parsed.data.values.forEach(v => {\r\n                    items.push(...(v.data || { values: [] }).values);\r\n                });\r\n            } else {\r\n                if (properties.suggesting && !reader.canRead()) {\r\n                    helper.addSuggestions(\r\n                        ...namespaceSuggestionString(\r\n                            properties.data.globalData.items,\r\n                            parsed.data.parsed,\r\n                            start\r\n                        )\r\n                    );\r\n                }\r\n                const name = stringifyNamespace(parsed.data.parsed);\r\n                if (properties.data.globalData.items.indexOf(name) < 0) {\r\n                    helper.addErrors(\r\n                        UNKNOWNITEM.create(start, reader.cursor, name)\r\n                    );\r\n                }\r\n                items.push(name);\r\n            }\r\n            if (reader.peek() === \"{\") {\r\n                const nbt = validateParse(reader, properties, {\r\n                    ids: items,\r\n                    kind: \"item\"\r\n                });\r\n                helper.merge(nbt);\r\n            } else {\r\n                helper.addSuggestion(reader.cursor, \"{\");\r\n            }\r\n        } else {\r\n            if (parsed.data) {\r\n                helper.addErrors(\r\n                    UNKNOWNTAG.create(\r\n                        start,\r\n                        reader.cursor,\r\n                        stringifyNamespace(parsed.data)\r\n                    )\r\n                );\r\n                if (reader.peek() === \"{\") {\r\n                    const nbt = validateParse(reader, properties, {\r\n                        ids: \"none\",\r\n                        kind: \"item\"\r\n                    });\r\n                    helper.merge(nbt);\r\n                } else {\r\n                    helper.addSuggestion(reader.cursor, \"{\");\r\n                }\r\n            } else {\r\n                return helper.fail();\r\n            }\r\n        }\r\n        return helper.succeed();\r\n    }\r\n}\r\n\r\nexport const stack = new ItemParser(false);\r\nexport const predicate = new ItemParser(true);\r\n","export const itemSlots = slotsBuilder();\r\n\r\nfunction slotsBuilder(): string[] {\r\n    const slots = [];\r\n\r\n    slots.push(\"armor.chest\", \"armor.feet\", \"armor.head\", \"armor.legs\");\r\n\r\n    for (let i = 0; i < 54; i++) {\r\n        slots.push(`container.${i}`);\r\n    }\r\n\r\n    for (let i = 0; i < 27; i++) {\r\n        slots.push(`enderchest.${i}`);\r\n    }\r\n\r\n    for (let i = 0; i < 25; i++) {\r\n        slots.push(`horse.${i}`);\r\n    }\r\n    slots.push(\"horse.armor\", \"horse.chest\", \"horse.saddle\");\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n        slots.push(`hotbar.${i}`);\r\n    }\r\n\r\n    for (let i = 0; i < 27; i++) {\r\n        slots.push(`inventory.${i}`);\r\n    }\r\n\r\n    for (let i = 0; i < 8; i++) {\r\n        slots.push(`villager.${i}`);\r\n    }\r\n\r\n    slots.push(\"weapon\", \"weapon.mainhand\", \"weapon.offhand\");\r\n    return slots;\r\n}\r\n","import { COLORS } from \"../../colors\";\r\n\r\nexport const scoreboardSlots = createSlots();\r\n\r\nfunction createSlots(): string[] {\r\n    const slots = [];\r\n\r\n    slots.push(\"list\", \"sidebar\", \"belowName\");\r\n\r\n    for (const s of COLORS) {\r\n        slots.push(`sidebar.team.${s}`);\r\n    }\r\n    return slots;\r\n}\r\n","import { CompletionItemKind } from \"vscode-languageserver\";\r\nimport { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { StringReader } from \"../../brigadier/string-reader\";\r\nimport { COLORS } from \"../../colors\";\r\nimport { NONWHITESPACE } from \"../../consts\";\r\nimport { itemSlots } from \"../../data/lists/item-slot\";\r\nimport { scoreboardSlots } from \"../../data/lists/scoreboard-slot\";\r\nimport { anchors, operations } from \"../../data/lists/statics\";\r\nimport { ReturnHelper } from \"../../misc-functions\";\r\nimport { Parser, ParserInfo, ReturnedInfo } from \"../../types\";\r\n\r\nexport class ListParser implements Parser {\r\n    private readonly error: CommandErrorBuilder;\r\n    private readonly options: string[];\r\n    private readonly regex: RegExp;\r\n\r\n    public constructor(\r\n        options: string[],\r\n        err: CommandErrorBuilder,\r\n        regex: RegExp = StringReader.charAllowedInUnquotedString\r\n    ) {\r\n        this.options = options;\r\n        this.error = err;\r\n        this.regex = regex;\r\n    }\r\n\r\n    public parse(\r\n        reader: StringReader,\r\n        info: ParserInfo\r\n    ): ReturnedInfo<undefined> {\r\n        const start = reader.cursor;\r\n        const helper = new ReturnHelper(info);\r\n        const optResult = reader.readOption(\r\n            this.options,\r\n            {\r\n                quote: false,\r\n                unquoted: this.regex\r\n            },\r\n            CompletionItemKind.EnumMember\r\n        );\r\n        if (helper.merge(optResult)) {\r\n            return helper.succeed();\r\n        } else {\r\n            return helper.fail(\r\n                this.error.create(start, reader.cursor, optResult.data || \"\")\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst colorError = new CommandErrorBuilder(\r\n    \"argument.color.invalid\",\r\n    \"Unknown color '%s'\"\r\n);\r\nexport const colorParser = new ListParser(COLORS, colorError);\r\n\r\nconst entityAnchorError = new CommandErrorBuilder(\r\n    \"argument.anchor.invalid\",\r\n    \"Invalid entity anchor position %s\"\r\n);\r\nexport const entityAnchorParser = new ListParser(anchors, entityAnchorError);\r\n\r\nconst slotError = new CommandErrorBuilder(\"slot.unknown\", \"Unknown slot '%s'\");\r\nexport const itemSlotParser = new ListParser(itemSlots, slotError);\r\n\r\nconst operationError = new CommandErrorBuilder(\r\n    \"arguments.operation.invalid\",\r\n    \"Invalid operation\"\r\n);\r\nexport const operationParser = new ListParser(\r\n    operations,\r\n    operationError,\r\n    NONWHITESPACE\r\n);\r\n\r\nconst scoreboardSlotError = new CommandErrorBuilder(\r\n    \"argument.scoreboardDisplaySlot.invalid\",\r\n    \"Unknown display slot '%s'\"\r\n);\r\nexport const scoreBoardSlotParser = new ListParser(\r\n    scoreboardSlots,\r\n    scoreboardSlotError\r\n);\r\n","import { StringReader } from \"../../brigadier/string-reader\";\r\nimport { ReturnHelper } from \"../../misc-functions\";\r\nimport { Parser } from \"../../types\";\r\n\r\nexport const messageParser: Parser = {\r\n    parse: (reader: StringReader) => {\r\n        reader.cursor = reader.getTotalLength();\r\n        // tslint:disable:helper-return\r\n        return new ReturnHelper().succeed();\r\n    }\r\n};\r\n","import { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { StringReader } from \"../../brigadier/string-reader\";\r\nimport { ContextPath, ReturnHelper, startPaths } from \"../../misc-functions\";\r\nimport {\r\n    CommandContext,\r\n    ContextChange,\r\n    LineRange,\r\n    Parser,\r\n    ParserInfo,\r\n    Ranged,\r\n    ReturnedInfo,\r\n    ReturnSuccess\r\n} from \"../../types\";\r\nimport { NBTIDInfo } from \"./nbt/nbt\";\r\nimport { parseAnyNBTTag } from \"./nbt/tag-parser\";\r\nimport { NBTTag } from \"./nbt/tag/nbt-tag\";\r\nimport { TypedNode } from \"./nbt/util/doc-walker-util\";\r\nimport { COMPOUND_START } from \"./nbt/util/nbt-util\";\r\nimport { NBTWalker } from \"./nbt/walker\";\r\n\r\nconst DOT = \".\";\r\nconst ARROPEN = \"[\";\r\nconst ARRCLOSE = \"]\";\r\n\r\nconst exceptions = {\r\n    BAD_CHAR: new CommandErrorBuilder(\r\n        \"argument.nbt_path.badchar\",\r\n        \"Bad character '%s'\"\r\n    ),\r\n    INCORRECT_SEGMENT: new CommandErrorBuilder(\r\n        \"argument.nbt_path.unknown\",\r\n        \"Unknown segment '%s'\"\r\n    ),\r\n    START_SEGMENT: new CommandErrorBuilder(\r\n        \"argument.nbt_path.array_start\",\r\n        \"Cannot start an nbt path with an array reference\"\r\n    ),\r\n    UNEXPECTED_ARRAY: new CommandErrorBuilder(\r\n        \"argument.nbt_path.unknown\",\r\n        \"Path segment should not be array\"\r\n    ),\r\n    WRONG_TYPE: new CommandErrorBuilder(\r\n        \"argument.nbt_path.type\",\r\n        \"Expected node to have type %s, actual is %s\"\r\n    )\r\n};\r\n\r\nfunction entityDataPath(\r\n    path: string[]\r\n): ContextPath<(context: CommandContext) => PathResult> {\r\n    return {\r\n        data: c => ({\r\n            contextInfo: {\r\n                ids: (c.otherEntity && c.otherEntity.ids) || \"none\",\r\n                kind: \"entity\"\r\n            },\r\n            resultType: c.nbt_path\r\n        }),\r\n        path\r\n    };\r\n}\r\n\r\ninterface PathResult {\r\n    contextInfo: NBTIDInfo;\r\n    resultType?: TypedNode[\"type\"];\r\n}\r\n\r\nconst pathInfo: Array<ContextPath<(context: CommandContext) => PathResult>> = [\r\n    entityDataPath([\"execute\", \"if\", \"data\", \"entity\"]),\r\n    entityDataPath([\"execute\", \"store\", \"result\", \"entity\"]),\r\n    entityDataPath([\"execute\", \"store\", \"success\", \"entity\"]),\r\n    entityDataPath([\"execute\", \"unless\", \"data\", \"entity\"]),\r\n    entityDataPath([\"data\", \"modify\", \"entity\", \"target\", \"targetPath\"]),\r\n    entityDataPath([\"data\", \"remove\", \"entity\"]),\r\n    entityDataPath([\r\n        \"data\",\r\n        \"modify\",\r\n        \"block\",\r\n        \"targetPos\",\r\n        \"targetPath\",\r\n        \"insert\",\r\n        \"before\",\r\n        \"index\",\r\n        \"from\",\r\n        \"entity\"\r\n    ]),\r\n    entityDataPath([\"data\", \"get\", \"entity\"]),\r\n    entityDataPath([\r\n        \"data\",\r\n        \"modify\",\r\n        \"entity\",\r\n        \"target\",\r\n        \"targetPath\",\r\n        \"set\",\r\n        \"from\",\r\n        \"entity\"\r\n    ]),\r\n    entityDataPath([\r\n        \"data\",\r\n        \"modify\",\r\n        \"entity\",\r\n        \"target\",\r\n        \"targetPath\",\r\n        \"prepend\",\r\n        \"from\",\r\n        \"entity\"\r\n    ]),\r\n    entityDataPath([\r\n        \"data\",\r\n        \"modify\",\r\n        \"entity\",\r\n        \"target\",\r\n        \"targetPath\",\r\n        \"merge\",\r\n        \"from\",\r\n        \"entity\"\r\n    ]),\r\n    entityDataPath([\r\n        \"data\",\r\n        \"modify\",\r\n        \"entity\",\r\n        \"target\",\r\n        \"targetPath\",\r\n        \"insert\",\r\n        \"before\",\r\n        \"index\",\r\n        \"from\",\r\n        \"entity\"\r\n    ]),\r\n    entityDataPath([\r\n        \"data\",\r\n        \"modify\",\r\n        \"block\",\r\n        \"targetPos\",\r\n        \"targetPath\",\r\n        \"set\",\r\n        \"from\",\r\n        \"entity\"\r\n    ]),\r\n    entityDataPath([\r\n        \"data\",\r\n        \"modify\",\r\n        \"block\",\r\n        \"targetPos\",\r\n        \"targetPath\",\r\n        \"prepend\",\r\n        \"from\",\r\n        \"entity\"\r\n    ]),\r\n    entityDataPath([\r\n        \"data\",\r\n        \"modify\",\r\n        \"block\",\r\n        \"targetPos\",\r\n        \"targetPath\",\r\n        \"merge\",\r\n        \"from\",\r\n        \"entity\"\r\n    ]),\r\n    entityDataPath([\r\n        \"data\",\r\n        \"modify\",\r\n        \"block\",\r\n        \"targetPos\",\r\n        \"targetPath\",\r\n        \"append\",\r\n        \"from\",\r\n        \"entity\"\r\n    ]),\r\n    entityDataPath([\r\n        \"data\",\r\n        \"modify\",\r\n        \"block\",\r\n        \"targetPos\",\r\n        \"targetPath\",\r\n        \"insert\",\r\n        \"after\",\r\n        \"index\",\r\n        \"from\",\r\n        \"entity\"\r\n    ]),\r\n    entityDataPath([\r\n        \"data\",\r\n        \"modify\",\r\n        \"entity\",\r\n        \"target\",\r\n        \"targetPath\",\r\n        \"insert\",\r\n        \"after\",\r\n        \"index\",\r\n        \"from\",\r\n        \"entity\"\r\n    ]),\r\n    entityDataPath([\r\n        \"data\",\r\n        \"modify\",\r\n        \"entity\",\r\n        \"target\",\r\n        \"targetPath\",\r\n        \"append\",\r\n        \"from\",\r\n        \"entity\"\r\n    ])\r\n];\r\n\r\n// We do not currently support blocks with autocomplete/validation\r\n// @ts-ignore It is unused - it is just here to record what we currently do not use\r\nconst unvalidatedPaths = [\r\n    [\r\n        //#region /data\r\n        [\"data\", \"get\", \"block\"],\r\n        [\"data\", \"modify\", \"block\", \"targetPos\", \"targetPath\"],\r\n        [\r\n            \"data\",\r\n            \"modify\",\r\n            \"block\",\r\n            \"targetPos\",\r\n            \"targetPath\",\r\n            \"append\",\r\n            \"from\",\r\n            \"block\"\r\n        ],\r\n        [\r\n            \"data\",\r\n            \"modify\",\r\n            \"block\",\r\n            \"targetPos\",\r\n            \"targetPath\",\r\n            \"insert\",\r\n            \"after\",\r\n            \"index\",\r\n            \"from\",\r\n            \"block\"\r\n        ],\r\n        [\r\n            \"data\",\r\n            \"modify\",\r\n            \"block\",\r\n            \"targetPos\",\r\n            \"targetPath\",\r\n            \"insert\",\r\n            \"before\",\r\n            \"index\",\r\n            \"from\",\r\n            \"block\"\r\n        ],\r\n        [\r\n            \"data\",\r\n            \"modify\",\r\n            \"block\",\r\n            \"targetPos\",\r\n            \"targetPath\",\r\n            \"merge\",\r\n            \"from\",\r\n            \"block\"\r\n        ],\r\n        [\r\n            \"data\",\r\n            \"modify\",\r\n            \"block\",\r\n            \"targetPos\",\r\n            \"targetPath\",\r\n            \"prepend\",\r\n            \"from\",\r\n            \"block\"\r\n        ],\r\n        [\r\n            \"data\",\r\n            \"modify\",\r\n            \"block\",\r\n            \"targetPos\",\r\n            \"targetPath\",\r\n            \"set\",\r\n            \"from\",\r\n            \"block\"\r\n        ],\r\n        [\r\n            \"data\",\r\n            \"modify\",\r\n            \"entity\",\r\n            \"target\",\r\n            \"targetPath\",\r\n            \"append\",\r\n            \"from\",\r\n            \"block\"\r\n        ],\r\n        [\r\n            \"data\",\r\n            \"modify\",\r\n            \"entity\",\r\n            \"target\",\r\n            \"targetPath\",\r\n            \"insert\",\r\n            \"after\",\r\n            \"index\",\r\n            \"from\",\r\n            \"block\"\r\n        ],\r\n        [\r\n            \"data\",\r\n            \"modify\",\r\n            \"entity\",\r\n            \"target\",\r\n            \"targetPath\",\r\n            \"insert\",\r\n            \"before\",\r\n            \"index\",\r\n            \"from\",\r\n            \"block\"\r\n        ],\r\n        [\r\n            \"data\",\r\n            \"modify\",\r\n            \"entity\",\r\n            \"target\",\r\n            \"targetPath\",\r\n            \"merge\",\r\n            \"from\",\r\n            \"block\"\r\n        ],\r\n        [\r\n            \"data\",\r\n            \"modify\",\r\n            \"entity\",\r\n            \"target\",\r\n            \"targetPath\",\r\n            \"prepend\",\r\n            \"from\",\r\n            \"block\"\r\n        ],\r\n        [\r\n            \"data\",\r\n            \"modify\",\r\n            \"entity\",\r\n            \"target\",\r\n            \"targetPath\",\r\n            \"set\",\r\n            \"from\",\r\n            \"block\"\r\n        ],\r\n        [\"data\", \"remove\", \"block\"],\r\n        //#endregion /data\r\n        //#region /execute\r\n        [\"execute\", \"if\", \"data\", \"block\"],\r\n        [\"execute\", \"store\", \"result\", \"block\"],\r\n        [\"execute\", \"store\", \"success\", \"block\"],\r\n        [\"execute\", \"unless\", \"data\", \"block\"]\r\n        //#endregion /execute\r\n    ]\r\n];\r\nenum SuggestionKind {\r\n    BOTH,\r\n    KEYONLY\r\n}\r\n// These number and nbt ranges include the open and close []\r\n// The string ranges do not include the .\r\ntype PathParseResult = Array<Ranged<string | number | NBTTag>>;\r\n\r\nexport const nbtPathParser: Parser = {\r\n    // tslint:disable-next-line:cyclomatic-complexity\r\n    parse: (\r\n        reader: StringReader,\r\n        info: ParserInfo\r\n    ): ReturnedInfo<ContextChange | undefined> => {\r\n        const helper = new ReturnHelper();\r\n        const out: PathParseResult = [];\r\n        let first = true;\r\n        const pathFunc = startPaths(pathInfo, info.path);\r\n        const context = pathFunc && pathFunc(info.context);\r\n        while (true) {\r\n            // Whitespace\r\n            const start = reader.cursor;\r\n            if (reader.peek() === ARROPEN) {\r\n                const range: LineRange = { start, end: 0 };\r\n                reader.skip();\r\n                if (reader.peek() === COMPOUND_START) {\r\n                    const val = parseAnyNBTTag(reader, []);\r\n                    if (helper.merge(val)) {\r\n                        out.push({ range, value: val.data.tag });\r\n                    } else {\r\n                        if (val.data) {\r\n                            out.push({ range, value: val.data.tag });\r\n                        }\r\n                        range.end = reader.cursor;\r\n                        helper.merge(\r\n                            validatePath(info, out, context, undefined)\r\n                        );\r\n                        return helper.fail();\r\n                    }\r\n                } else {\r\n                    const int = reader.readInt();\r\n                    range.end = reader.cursor;\r\n                    if (helper.merge(int)) {\r\n                        out.push({ range, value: int.data });\r\n                    } else {\r\n                        range.end = reader.cursor;\r\n                        helper.merge(\r\n                            validatePath(info, out, context, undefined)\r\n                        );\r\n                        return helper.fail();\r\n                    }\r\n                }\r\n                if (!helper.merge(reader.expect(ARRCLOSE))) {\r\n                    range.end = reader.cursor;\r\n                    helper.merge(validatePath(info, out, context, undefined));\r\n                    return helper.fail();\r\n                }\r\n                range.end = reader.cursor;\r\n            } else if ((!first && reader.peek() === DOT) || first) {\r\n                if (!first) {\r\n                    reader.skip();\r\n                }\r\n                const range: LineRange = { start: reader.cursor, end: 0 };\r\n                const res = reader.readString(/^[0-9A-Za-z_\\-+]$/);\r\n                if (helper.merge(res)) {\r\n                    out.push({ range, value: res.data });\r\n                } else {\r\n                    if (res.data !== undefined) {\r\n                        range.end = reader.cursor;\r\n                        out.push({ range, value: res.data });\r\n                    }\r\n                    helper.merge(\r\n                        validatePath(\r\n                            info,\r\n                            out,\r\n                            context,\r\n                            res.data !== undefined\r\n                                ? SuggestionKind.KEYONLY\r\n                                : undefined\r\n                        )\r\n                    );\r\n                    return helper.fail();\r\n                }\r\n                range.end = reader.cursor;\r\n            } else {\r\n                return helper.fail(\r\n                    exceptions.BAD_CHAR.create(\r\n                        reader.cursor - 1,\r\n                        reader.cursor,\r\n                        reader.peek()\r\n                    )\r\n                );\r\n            }\r\n            first = false;\r\n            if (!reader.canRead()) {\r\n                const type = validatePath(\r\n                    info,\r\n                    out,\r\n                    context,\r\n                    SuggestionKind.BOTH\r\n                );\r\n                return helper.mergeChain(type).succeed({ nbt_path: type.data });\r\n            }\r\n            if (/\\s/.test(reader.peek())) {\r\n                const type = validatePath(info, out, context, undefined);\r\n                if (context && type.data && context.resultType !== type.data) {\r\n                    helper.addErrors(\r\n                        exceptions.WRONG_TYPE.create(\r\n                            start,\r\n                            reader.cursor,\r\n                            context.resultType as TypedNode[\"type\"],\r\n                            type.data\r\n                        )\r\n                    );\r\n                }\r\n                return helper.mergeChain(type).succeed({ nbt_path: type.data });\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nfunction validatePath(\r\n    info: ParserInfo,\r\n    // @ts-ignore Unused - TODO\r\n    path: PathParseResult,\r\n    context: PathResult | undefined,\r\n    // @ts-ignore Unused - TODO\r\n    suggest: SuggestionKind | undefined\r\n): ReturnSuccess<TypedNode[\"type\"] | undefined> {\r\n    const helper = new ReturnHelper();\r\n    const walker = new NBTWalker(info.data.globalData.nbt_docs);\r\n    if (context) {\r\n        if (context.contextInfo) {\r\n            // TODO\r\n        }\r\n    }\r\n    walker.getInitialNode([]);\r\n    return helper.succeed();\r\n}\r\n","import { CompletionItemKind } from \"vscode-languageserver\";\r\nimport { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { Resources } from \"../../data/types\";\r\nimport {\r\n    buildPath,\r\n    buildTagActions,\r\n    ContextPath,\r\n    getResourcesofType,\r\n    parseNamespace,\r\n    parseNamespaceOption,\r\n    parseNamespaceOrTag,\r\n    prepareForParser,\r\n    processParsedNamespaceOption,\r\n    ReturnHelper,\r\n    startPaths,\r\n    stringArrayToNamespaces,\r\n    stringifyNamespace\r\n} from \"../../misc-functions\";\r\nimport { Parser } from \"../../types\";\r\n\r\nconst exceptions = {\r\n    advancement_notfound: new CommandErrorBuilder(\r\n        \"advancement.advancementNotFound\",\r\n        \"Unknown advancement: %s\"\r\n    ),\r\n    nobossbar: new CommandErrorBuilder(\r\n        \"commands.bossbar.unknown\",\r\n        \"No bossbar exists with the ID '%s'\"\r\n    ),\r\n    recipe_notfound: new CommandErrorBuilder(\r\n        \"recipe.notFound\",\r\n        \"Unkown recipe: %s\"\r\n    ),\r\n    unknown_function: new CommandErrorBuilder(\r\n        \"arguments.function.unknown\",\r\n        \"Unknown function '%s'\"\r\n    ),\r\n    unknown_resource: new CommandErrorBuilder(\r\n        \"argument.id.unknown\",\r\n        \"Unknown resource '%s'\"\r\n    ),\r\n    unknown_tag: new CommandErrorBuilder(\r\n        \"arguments.function.tag.unknown\",\r\n        \"Unknown function tag '#%s'\"\r\n    )\r\n};\r\n\r\nexport const functionParser: Parser = {\r\n    parse: (reader, info) => {\r\n        const helper = new ReturnHelper(info);\r\n        const start = reader.cursor;\r\n        const parsed = parseNamespaceOrTag(reader, info, \"function_tags\");\r\n        const localData = info.data.localData;\r\n        if (helper.merge(parsed)) {\r\n            const data = parsed.data;\r\n            if (data.resolved && data.values) {\r\n                helper.merge(\r\n                    buildTagActions(\r\n                        data.values,\r\n                        start,\r\n                        reader.cursor,\r\n                        \"function_tags\",\r\n                        localData\r\n                    )\r\n                );\r\n                return helper.succeed();\r\n            } else {\r\n                const options = getResourcesofType(info.data, \"functions\");\r\n                const postProcess = processParsedNamespaceOption(\r\n                    data.parsed,\r\n                    options,\r\n                    info.suggesting && !reader.canRead(),\r\n                    start,\r\n                    CompletionItemKind.Method\r\n                );\r\n                if (postProcess.data.length === 0) {\r\n                    helper.addErrors(\r\n                        exceptions.unknown_function.create(\r\n                            start,\r\n                            reader.cursor,\r\n                            stringifyNamespace(data.parsed)\r\n                        )\r\n                    );\r\n                }\r\n                if (localData) {\r\n                    for (const func of postProcess.data) {\r\n                        const location = buildPath(\r\n                            func,\r\n                            localData,\r\n                            \"functions\"\r\n                        );\r\n                        if (location) {\r\n                            helper.addActions({\r\n                                data: location,\r\n                                high: reader.cursor,\r\n                                low: start,\r\n                                type: \"source\"\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                return helper.mergeChain(postProcess).succeed();\r\n            }\r\n        } else {\r\n            if (!parsed.data) {\r\n                return helper.fail();\r\n            } else {\r\n                return helper\r\n                    .addErrors(\r\n                        exceptions.unknown_tag.create(\r\n                            start,\r\n                            reader.cursor,\r\n                            stringifyNamespace(parsed.data)\r\n                        )\r\n                    )\r\n                    .succeed();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst idParser: Parser = {\r\n    parse: (reader, info) => prepareForParser(parseNamespace(reader), info)\r\n};\r\n\r\nconst bossbarParser: Parser = {\r\n    parse: (reader, info) => {\r\n        const helper = new ReturnHelper(info);\r\n        if (info.data.localData && info.data.localData.nbt.level) {\r\n            const start = reader.cursor;\r\n            const bars = info.data.localData.nbt.level.Data.CustomBossEvents;\r\n            const options = stringArrayToNamespaces(Object.keys(bars));\r\n            const result = parseNamespaceOption(reader, options);\r\n            if (helper.merge(result)) {\r\n                return helper.succeed();\r\n            } else {\r\n                if (result.data) {\r\n                    return helper\r\n                        .addErrors(\r\n                            exceptions.nobossbar.create(\r\n                                start,\r\n                                reader.cursor,\r\n                                stringifyNamespace(result.data)\r\n                            )\r\n                        )\r\n                        .succeed();\r\n                } else {\r\n                    return helper.fail();\r\n                }\r\n            }\r\n        } else {\r\n            // tslint:disable-next-line:helper-return\r\n            return prepareForParser(\r\n                helper.return(parseNamespace(reader)),\r\n                info\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nconst resourceKinds: Array<\r\n    ContextPath<\r\n        | {\r\n              issue: CommandErrorBuilder;\r\n              resource: keyof Resources;\r\n          }\r\n        | { resource: Parser }\r\n    >\r\n> = [\r\n    {\r\n        data: {\r\n            issue: exceptions.advancement_notfound,\r\n            resource: \"advancements\"\r\n        },\r\n        path: [\"advancement\"]\r\n    },\r\n    { data: { resource: idParser }, path: [\"bossbar\", \"add\"] },\r\n    { data: { resource: bossbarParser }, path: [\"bossbar\"] },\r\n    {\r\n        data: { resource: bossbarParser },\r\n        path: [\"execute\", \"store\", \"result\"]\r\n    },\r\n    // Worrying about sounds is not in scope for initial release\r\n    { data: { resource: idParser }, path: [\"playsound\"] },\r\n    { data: { resource: idParser }, path: [\"stopsound\"] },\r\n    {\r\n        data: { resource: \"recipes\", issue: exceptions.advancement_notfound },\r\n        path: [\"recipe\"]\r\n    }\r\n];\r\n\r\nexport const resourceParser: Parser = {\r\n    parse: (reader, info) => {\r\n        const start = reader.cursor;\r\n        const helper = new ReturnHelper(info);\r\n        const kind = startPaths(resourceKinds, info.path);\r\n        if (kind) {\r\n            if (typeof kind.resource === \"object\") {\r\n                return helper.return(kind.resource.parse(reader, info));\r\n            } else {\r\n                const result = parseNamespaceOption(\r\n                    reader,\r\n                    getResourcesofType(info.data, kind.resource)\r\n                );\r\n                if (helper.merge(result)) {\r\n                    return helper.succeed();\r\n                } else {\r\n                    if (result.data) {\r\n                        return helper\r\n                            .addErrors(\r\n                                // @ts-ignore type inference failure\r\n                                (kind.issue as CommandErrorBuilder).create(\r\n                                    start,\r\n                                    reader.cursor,\r\n                                    stringifyNamespace(result.data)\r\n                                )\r\n                            )\r\n                            .succeed();\r\n                    } else {\r\n                        return helper.fail();\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error(\r\n                `Resource at path ${\r\n                    info.path\r\n                } does not have a supported resource`\r\n            );\r\n        }\r\n    }\r\n};\r\n","export const verbatimCriteria = [\r\n    \"air\",\r\n    \"armor\",\r\n    \"deathCount\",\r\n    \"dummy\",\r\n    \"food\",\r\n    \"health\",\r\n    \"level\",\r\n    \"playerKillCount\",\r\n    \"totalKillCount\",\r\n    \"trigger\",\r\n    \"xp\",\r\n    \"minecraft.custom:minecraft.animals_bred\",\r\n    \"minecraft.custom:minecraft.aviate_one_cm\",\r\n    \"minecraft.custom:minecraft.boat_one_cm\",\r\n    \"minecraft.custom:minecraft.clean_armor\",\r\n    \"minecraft.custom:minecraft.clean_banner\",\r\n    \"minecraft.custom:minecraft.clean_shulker_box\",\r\n    \"minecraft.custom:minecraft.climb_one_cm\",\r\n    \"minecraft.custom:minecraft.crouch_one_cm\",\r\n    \"minecraft.custom:minecraft.damage_absorbed\",\r\n    \"minecraft.custom:minecraft.damage_blocked_by_shield\",\r\n    \"minecraft.custom:minecraft.damage_dealt\",\r\n    \"minecraft.custom:minecraft.damage_dealt_absorbed\",\r\n    \"minecraft.custom:minecraft.damage_dealt_resisted\",\r\n    \"minecraft.custom:minecraft.damage_resisted\",\r\n    \"minecraft.custom:minecraft.damage_taken\",\r\n    \"minecraft.custom:minecraft.deaths\",\r\n    \"minecraft.custom:minecraft.drop\",\r\n    \"minecraft.custom:minecraft.eat_cake_slice\",\r\n    \"minecraft.custom:minecraft.enchant_item\",\r\n    \"minecraft.custom:minecraft.fall_one_cm\",\r\n    \"minecraft.custom:minecraft.fill_cauldron\",\r\n    \"minecraft.custom:minecraft.fish_caught\",\r\n    \"minecraft.custom:minecraft.fly_one_cm\",\r\n    \"minecraft.custom:minecraft.horse_one_cm\",\r\n    \"minecraft.custom:minecraft.inspect_dispenser\",\r\n    \"minecraft.custom:minecraft.inspect_dropper\",\r\n    \"minecraft.custom:minecraft.inspect_hopper\",\r\n    \"minecraft.custom:minecraft.interact_with_beacon\",\r\n    \"minecraft.custom:minecraft.interact_with_brewingstand\",\r\n    \"minecraft.custom:minecraft.interact_with_crafting_table\",\r\n    \"minecraft.custom:minecraft.interact_with_furnace\",\r\n    \"minecraft.custom:minecraft.jump\",\r\n    \"minecraft.custom:minecraft.leave_game\",\r\n    \"minecraft.custom:minecraft.minecart_one_cm\",\r\n    \"minecraft.custom:minecraft.mob_kills\",\r\n    \"minecraft.custom:minecraft.open_chest\",\r\n    \"minecraft.custom:minecraft.open_enderchest\",\r\n    \"minecraft.custom:minecraft.open_shulker_box\",\r\n    \"minecraft.custom:minecraft.pig_one_cm\",\r\n    \"minecraft.custom:minecraft.play_noteblock\",\r\n    \"minecraft.custom:minecraft.play_one_minute\",\r\n    \"minecraft.custom:minecraft.play_record\",\r\n    \"minecraft.custom:minecraft.player_kills\",\r\n    \"minecraft.custom:minecraft.pot_flower\",\r\n    \"minecraft.custom:minecraft.sleep_in_bed\",\r\n    \"minecraft.custom:minecraft.sneak_time\",\r\n    \"minecraft.custom:minecraft.sprint_one_cm\",\r\n    \"minecraft.custom:minecraft.swim_one_cm\",\r\n    \"minecraft.custom:minecraft.talked_to_villager\",\r\n    \"minecraft.custom:minecraft.time_since_death\",\r\n    \"minecraft.custom:minecraft.time_since_rest\",\r\n    \"minecraft.custom:minecraft.traded_with_villager\",\r\n    \"minecraft.custom:minecraft.trigger_trapped_chest\",\r\n    \"minecraft.custom:minecraft.tune_noteblock\",\r\n    \"minecraft.custom:minecraft.use_cauldron\",\r\n    \"minecraft.custom:minecraft.walk_on_water_one_cm\",\r\n    \"minecraft.custom:minecraft.walk_one_cm\",\r\n    \"minecraft.custom:minecraft.walk_under_water_one_cm\"\r\n];\r\n\r\nexport const colorCriteria = [\"teamkill.\", \"killedByTeam.\"];\r\n\r\nexport const itemCriteria = [\r\n    \"minecraft.broken:\",\r\n    \"minecraft.crafted:\",\r\n    \"minecraft.dropped:\",\r\n    \"minecraft.picked_up:\",\r\n    \"minecraft.used:\"\r\n];\r\n\r\nexport const blockCriteria = [\"minecraft.mined:\"];\r\n\r\nexport const entityCriteria = [\"minecraft.killed_by:\", \"minecraft.killed:\"];\r\n","import { CompletionItemKind } from \"vscode-languageserver\";\r\n\r\nimport { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { StringReader } from \"../../brigadier/string-reader\";\r\nimport { COLORS } from \"../../colors\";\r\nimport { NONWHITESPACE } from \"../../consts\";\r\nimport {\r\n    blockCriteria,\r\n    colorCriteria,\r\n    entityCriteria,\r\n    itemCriteria,\r\n    verbatimCriteria\r\n} from \"../../data/lists/criteria\";\r\nimport { entities } from \"../../data/lists/statics\";\r\nimport { DisplaySlots } from \"../../data/nbt/nbt-types\";\r\nimport {\r\n    convertToNamespace,\r\n    ReturnHelper,\r\n    stringifyNamespace\r\n} from \"../../misc-functions\";\r\nimport { typed_keys } from \"../../misc-functions/third_party/typed-keys\";\r\nimport { Parser } from \"../../types\";\r\n\r\nconst exceptions = {\r\n    unknown_objective: new CommandErrorBuilder(\r\n        \"arguments.objective.notFound\",\r\n        \"Unknown scoreboard objective '%s'\"\r\n    ),\r\n    unknown_team: new CommandErrorBuilder(\"team.notFound\", \"Unknown team '%s'\")\r\n};\r\n\r\nconst slotPurposes: { [_ in keyof DisplaySlots]: string } = {\r\n    slot_0: \"list\",\r\n    slot_1: \"sidebar\",\r\n    slot_10: \"sidebar.team.gray\",\r\n    slot_11: \"sidebar.team.dark_gray\",\r\n    slot_12: \"sidebar.team.blue\",\r\n    slot_13: \"sidebar.team.green\",\r\n    slot_14: \"sidebar.team.aqua\",\r\n    slot_15: \"sidebar.team.red\",\r\n    slot_16: \"sidebar.team.light_purple\",\r\n    slot_17: \"sidebar.team.yellow\",\r\n    slot_18: \"sidebar.team.white\",\r\n    slot_2: \"belowName\",\r\n    slot_3: \"sidebar.team.black\",\r\n    slot_4: \"sidebar.team.dark_blue\",\r\n    slot_5: \"sidebar.team.dark_green\",\r\n    slot_6: \"sidebar.team.dark_aqua\",\r\n    slot_7: \"sidebar.team.dark_red\",\r\n    slot_8: \"sidebar.team.dark_purple\",\r\n    slot_9: \"sidebar.team.gold\"\r\n};\r\n\r\nexport const objectiveParser: Parser = {\r\n    parse: (reader, info) => {\r\n        const helper = new ReturnHelper(info);\r\n        const start = reader.cursor;\r\n        if (info.data.localData) {\r\n            const scoreboardData = info.data.localData.nbt.scoreboard;\r\n            if (scoreboardData) {\r\n                const options = scoreboardData.data.Objectives.map(v => v.Name);\r\n                const result = reader.readOption(options, {\r\n                    quote: false,\r\n                    unquoted: StringReader.charAllowedInUnquotedString\r\n                });\r\n                if (helper.merge(result)) {\r\n                    if (!info.suggesting) {\r\n                        for (const objective of scoreboardData.data\r\n                            .Objectives) {\r\n                            if (objective.Name === result.data) {\r\n                                helper.addActions({\r\n                                    data: `Displayed as: ${\r\n                                        objective.DisplayName\r\n                                    }\r\n\r\nCriteria: ${objective.CriteriaName}`,\r\n                                    high: reader.cursor,\r\n                                    low: start,\r\n                                    type: \"hover\"\r\n                                });\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (scoreboardData.data.DisplaySlots) {\r\n                            for (const slot of typed_keys(\r\n                                scoreboardData.data.DisplaySlots\r\n                            )) {\r\n                                if (\r\n                                    scoreboardData.data.DisplaySlots[slot] ===\r\n                                    result.data\r\n                                ) {\r\n                                    helper.addActions({\r\n                                        data: `Displayed in ${\r\n                                            slotPurposes[slot]\r\n                                        }`,\r\n                                        high: reader.cursor,\r\n                                        low: start,\r\n                                        type: \"hover\"\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (result.data) {\r\n                        helper.addErrors(\r\n                            exceptions.unknown_objective.create(\r\n                                start,\r\n                                reader.cursor,\r\n                                result.data\r\n                            )\r\n                        );\r\n                    } else {\r\n                        return helper.fail();\r\n                    }\r\n                }\r\n                return helper.succeed();\r\n            }\r\n        }\r\n        reader.readUnquotedString();\r\n        return helper.succeed();\r\n    }\r\n};\r\n\r\nexport const teamParser: Parser = {\r\n    parse: (reader, info) => {\r\n        const helper = new ReturnHelper();\r\n        const start = reader.cursor;\r\n        if (info.data.localData) {\r\n            const scoreboardData = info.data.localData.nbt.scoreboard;\r\n            if (scoreboardData) {\r\n                const options = scoreboardData.data.Teams;\r\n                const result = reader.readOption(options.map(v => v.Name), {\r\n                    quote: false,\r\n                    unquoted: StringReader.charAllowedInUnquotedString\r\n                });\r\n                if (helper.merge(result)) {\r\n                    for (const team of options) {\r\n                        if (team.Name === result.data) {\r\n                            helper.addActions({\r\n                                data: `\\`\\`\\`json\r\n${JSON.stringify(team, undefined, 4)}\r\n\\`\\`\\``,\r\n                                high: reader.cursor,\r\n                                low: start,\r\n                                type: \"hover\"\r\n                            });\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (result.data) {\r\n                        helper.addErrors(\r\n                            exceptions.unknown_objective.create(\r\n                                start,\r\n                                reader.cursor,\r\n                                result.data\r\n                            )\r\n                        );\r\n                    } else {\r\n                        return helper.fail();\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            reader.readUnquotedString();\r\n        }\r\n        return helper.succeed();\r\n    }\r\n};\r\nconst UNKNOWN_CRITERIA = new CommandErrorBuilder(\r\n    \"argument.criteria.invalid\",\r\n    \"Unknown criteria '%s'\"\r\n);\r\n\r\nexport const criteriaParser: Parser = {\r\n    parse: (reader, info) => {\r\n        const start = reader.cursor;\r\n        const helper = new ReturnHelper(info);\r\n        const optionResult = reader.readOption(\r\n            [\r\n                ...verbatimCriteria,\r\n                ...blockCriteria,\r\n                ...colorCriteria,\r\n                ...entityCriteria,\r\n                ...itemCriteria\r\n            ],\r\n            {\r\n                quote: false,\r\n                unquoted: NONWHITESPACE\r\n            },\r\n            CompletionItemKind.EnumMember\r\n        );\r\n        const text = optionResult.data;\r\n        if (helper.merge(optionResult)) {\r\n            if (verbatimCriteria.indexOf(optionResult.data) !== -1) {\r\n                return helper.succeed();\r\n            }\r\n        }\r\n        if (!text) {\r\n            return helper.fail(); // `unreachable!()`\r\n        }\r\n        const end = reader.cursor;\r\n        for (const choice of colorCriteria) {\r\n            if (text.startsWith(choice)) {\r\n                reader.cursor = start + choice.length;\r\n                const result = reader.readOption(\r\n                    COLORS,\r\n                    {\r\n                        quote: false,\r\n                        unquoted: NONWHITESPACE\r\n                    },\r\n                    CompletionItemKind.Color\r\n                );\r\n                if (helper.merge(result)) {\r\n                    return helper.succeed();\r\n                }\r\n            }\r\n        }\r\n        for (const choice of entityCriteria) {\r\n            if (text.startsWith(choice)) {\r\n                reader.cursor = start + choice.length;\r\n                const result = reader.readOption(\r\n                    entities.map(mapFunction),\r\n                    {\r\n                        quote: false,\r\n                        unquoted: NONWHITESPACE\r\n                    },\r\n                    CompletionItemKind.Reference\r\n                );\r\n                if (helper.merge(result)) {\r\n                    return helper.succeed();\r\n                }\r\n            }\r\n        }\r\n        for (const choice of blockCriteria) {\r\n            if (text.startsWith(choice)) {\r\n                reader.cursor = start + choice.length;\r\n                const result = reader.readOption(\r\n                    Object.keys(info.data.globalData.blocks).map(mapFunction),\r\n                    {\r\n                        quote: false,\r\n                        unquoted: NONWHITESPACE\r\n                    },\r\n                    CompletionItemKind.Constant\r\n                );\r\n                if (helper.merge(result)) {\r\n                    return helper.succeed();\r\n                }\r\n            }\r\n        }\r\n        for (const choice of itemCriteria) {\r\n            if (text.startsWith(choice)) {\r\n                reader.cursor = start + choice.length;\r\n                const result = reader.readOption(\r\n                    info.data.globalData.items.map(mapFunction),\r\n                    {\r\n                        quote: false,\r\n                        unquoted: NONWHITESPACE\r\n                    },\r\n                    CompletionItemKind.Keyword\r\n                );\r\n                if (helper.merge(result)) {\r\n                    return helper.succeed();\r\n                }\r\n            }\r\n        }\r\n        helper.addErrors(UNKNOWN_CRITERIA.create(start, end, text));\r\n        return helper.succeed();\r\n    }\r\n};\r\n\r\nfunction mapFunction(value: string): string {\r\n    return stringifyNamespace(convertToNamespace(value)).replace(\":\", \".\");\r\n}\r\n","import { power } from \"js-combinatorics\";\r\nimport { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { StringReader } from \"../../brigadier/string-reader\";\r\nimport { ReturnHelper } from \"../../misc-functions\";\r\nimport { Parser } from \"../../types\";\r\n\r\nconst values = [\"x\", \"y\", \"z\"];\r\n\r\nconst INVALID_CHAR = new CommandErrorBuilder(\r\n    \"argument.swizzle.invalid\",\r\n    \"Invalid character '%s'\"\r\n);\r\nconst DUPLICATE = new CommandErrorBuilder(\r\n    \"argument.swizzle.duplicate\",\r\n    \"Duplicate character '%s'\"\r\n);\r\n\r\nexport const swizzleParer: Parser = {\r\n    parse: (reader: StringReader) => {\r\n        const helper = new ReturnHelper();\r\n        const start = reader.cursor;\r\n        const arr = reader.readUnquotedString().split(\"\");\r\n        for (const s of arr) {\r\n            if (values.indexOf(s) === -1) {\r\n                return helper.fail(\r\n                    INVALID_CHAR.create(start, reader.cursor, s)\r\n                );\r\n            }\r\n        }\r\n        for (const v of values) {\r\n            if (arr.indexOf(v) !== arr.lastIndexOf(v)) {\r\n                return helper.fail(DUPLICATE.create(start, reader.cursor, v));\r\n            }\r\n        }\r\n        const text = reader.string.substring(start, reader.cursor);\r\n        const suggestions = power(values.filter(v => text.indexOf(v) === -1))\r\n            .map(v => text + v.join(\"\"))\r\n            .filter(v => v !== \"\");\r\n        suggestions.forEach(v => helper.addSuggestion(0, v));\r\n        return helper.succeed();\r\n    }\r\n};\r\n","import { DiagnosticSeverity } from \"vscode-languageserver\";\r\nimport { CommandErrorBuilder } from \"../../brigadier/errors\";\r\nimport { StringReader } from \"../../brigadier/string-reader\";\r\nimport { ReturnHelper } from \"../../misc-functions\";\r\nimport { typed_keys } from \"../../misc-functions/third_party/typed-keys\";\r\nimport { Parser } from \"../../types\";\r\n\r\nconst EXCEPTIONS = {\r\n    invalid_unit: new CommandErrorBuilder(\r\n        \"argument.time.invalid_unit\",\r\n        \"Invalid unit '%s'\"\r\n    ),\r\n    // This is not tested\r\n    not_integer: new CommandErrorBuilder(\r\n        \"argument.time.not_nonnegative_integer\",\r\n        \"Not a non-negative integer number of ticks: %s (Due to differences in the representation of floating point numbers, Minecraft Java Edition might not fail for this value)\",\r\n        DiagnosticSeverity.Warning\r\n    ),\r\n    not_nonegative_integer: new CommandErrorBuilder(\r\n        \"argument.time.not_nonnegative_integer\",\r\n        \"Not a non-negative integer number of ticks: %s\"\r\n    )\r\n};\r\n\r\nexport const times = {\r\n    d: 24000,\r\n    s: 20,\r\n    t: 1\r\n};\r\n\r\nexport const timeParser: Parser = {\r\n    parse: (reader, info) => {\r\n        const helper = new ReturnHelper(info);\r\n        const start = reader.cursor;\r\n        const float = reader.readFloat();\r\n        if (!helper.merge(float)) {\r\n            return helper.fail();\r\n        }\r\n        const suffixStart = reader.cursor;\r\n        const suffix = reader.readOption(typed_keys(times), {\r\n            quote: false,\r\n            unquoted: StringReader.charAllowedInUnquotedString\r\n        });\r\n        if (!helper.merge(suffix)) {\r\n            if (suffix.data !== \"\") {\r\n                return helper\r\n                    .addErrors(\r\n                        EXCEPTIONS.invalid_unit.create(\r\n                            suffixStart,\r\n                            reader.cursor,\r\n                            suffix.data || \"none\"\r\n                        )\r\n                    )\r\n                    .succeed();\r\n            }\r\n        }\r\n        const unit = times[suffix.data as keyof typeof times] || 1;\r\n        const result = unit * float.data;\r\n        if (result < 0) {\r\n            return helper\r\n                .addErrors(\r\n                    EXCEPTIONS.not_nonegative_integer.create(\r\n                        start,\r\n                        reader.cursor,\r\n                        result.toString()\r\n                    )\r\n                )\r\n                .succeed();\r\n        }\r\n        if (!Number.isInteger(result)) {\r\n            return helper\r\n                .addErrors(\r\n                    EXCEPTIONS.not_integer.create(\r\n                        start,\r\n                        reader.cursor,\r\n                        result.toString()\r\n                    )\r\n                )\r\n                .succeed();\r\n        }\r\n        return helper.succeed();\r\n    }\r\n};\r\n","import { CommandNode } from \"../data/types\";\r\nimport { Parser } from \"../types\";\r\n\r\nimport * as brigadierParsers from \"./brigadier\";\r\nimport { literalParser } from \"./literal\";\r\nimport * as blockParsers from \"./minecraft/block\";\r\nimport { jsonParser } from \"./minecraft/component\";\r\nimport * as coordParsers from \"./minecraft/coordinates\";\r\nimport * as entityParser from \"./minecraft/entity\";\r\nimport * as itemParsers from \"./minecraft/item\";\r\nimport * as listParsers from \"./minecraft/lists\";\r\nimport { messageParser } from \"./minecraft/message\";\r\nimport * as namespaceParsers from \"./minecraft/namespace-list\";\r\nimport { nbtPathParser } from \"./minecraft/nbt-path\";\r\nimport { nbtParser } from \"./minecraft/nbt/nbt\";\r\nimport { floatRange, intRange } from \"./minecraft/range\";\r\nimport { functionParser, resourceParser } from \"./minecraft/resources\";\r\nimport {\r\n    criteriaParser,\r\n    objectiveParser,\r\n    teamParser\r\n} from \"./minecraft/scoreboard\";\r\nimport { swizzleParer } from \"./minecraft/swizzle\";\r\nimport { timeParser } from \"./minecraft/time\";\r\n\r\n/**\r\n * Incomplete:\r\n * https://github.com/Levertion/mcfunction-langserver/projects/1\r\n */\r\nconst implementedParsers: { [id: string]: Parser } = {\r\n    \"brigadier:bool\": brigadierParsers.boolParser,\r\n    \"brigadier:double\": brigadierParsers.doubleParser,\r\n    \"brigadier:float\": brigadierParsers.floatParser,\r\n    \"brigadier:integer\": brigadierParsers.intParser,\r\n    \"brigadier:string\": brigadierParsers.stringParser,\r\n    \"minecraft:block_pos\": coordParsers.blockPos,\r\n    \"minecraft:block_predicate\": blockParsers.predicateParser,\r\n    \"minecraft:block_state\": blockParsers.stateParser,\r\n    \"minecraft:color\": listParsers.colorParser,\r\n    \"minecraft:column_pos\": coordParsers.columnPos,\r\n    \"minecraft:component\": jsonParser,\r\n    \"minecraft:dimension\": namespaceParsers.dimensionParser,\r\n    \"minecraft:entity\": entityParser.entity,\r\n    \"minecraft:entity_anchor\": listParsers.entityAnchorParser,\r\n    \"minecraft:entity_summon\": namespaceParsers.summonParser,\r\n    \"minecraft:float_range\": floatRange,\r\n    \"minecraft:function\": functionParser,\r\n    \"minecraft:game_profile\": entityParser.gameProfile,\r\n    \"minecraft:int_range\": intRange,\r\n    \"minecraft:item_enchantment\": namespaceParsers.enchantmentParser,\r\n    \"minecraft:item_predicate\": itemParsers.predicate,\r\n    \"minecraft:item_slot\": listParsers.itemSlotParser,\r\n    \"minecraft:item_stack\": itemParsers.stack,\r\n    \"minecraft:message\": messageParser,\r\n    \"minecraft:mob_effect\": namespaceParsers.mobEffectParser,\r\n    \"minecraft:nbt\": nbtParser,\r\n    // TODO: determine if nbt-path is ever used\r\n    \"minecraft:nbt-path\": nbtPathParser,\r\n    \"minecraft:nbt_compound_tag\": nbtParser,\r\n    \"minecraft:nbt_path\": nbtPathParser,\r\n    \"minecraft:nbt_tag\": nbtParser,\r\n    \"minecraft:objective\": objectiveParser,\r\n    \"minecraft:objective_criteria\": criteriaParser,\r\n    \"minecraft:operation\": listParsers.operationParser,\r\n    \"minecraft:particle\": namespaceParsers.particleParser,\r\n    \"minecraft:resource_location\": resourceParser,\r\n    \"minecraft:rotation\": coordParsers.rotation,\r\n    \"minecraft:score_holder\": entityParser.scoreHolder,\r\n    \"minecraft:scoreboard_slot\": listParsers.scoreBoardSlotParser,\r\n    \"minecraft:swizzle\": swizzleParer,\r\n    \"minecraft:team\": teamParser,\r\n    \"minecraft:time\": timeParser,\r\n    \"minecraft:vec2\": coordParsers.vec2,\r\n    \"minecraft:vec3\": coordParsers.vec3\r\n};\r\n\r\nexport function getParser(node: CommandNode): Parser | undefined {\r\n    switch (node.type) {\r\n        case \"literal\":\r\n            return literalParser;\r\n        case \"argument\":\r\n            if (!!node.parser) {\r\n                return getArgParser(node.parser);\r\n            }\r\n            break;\r\n        default:\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getArgParser(id: string): Parser | undefined {\r\n    if (\r\n        !!global.mcLangSettings &&\r\n        !!global.mcLangSettings.parsers &&\r\n        global.mcLangSettings.parsers.hasOwnProperty(id)\r\n    ) {\r\n        try {\r\n            return global.mcLangSettings.parsers[id];\r\n        } catch (_) {\r\n            mcLangLog(\r\n                `${global.mcLangSettings.parsers[id]} could not be loaded`\r\n            );\r\n        }\r\n    }\r\n    if (implementedParsers.hasOwnProperty(id)) {\r\n        return implementedParsers[id];\r\n    }\r\n    mcLangLog(`Argument with parser id ${id} has no associated parser.\r\nPlease consider reporting this at https://github.com/Levertion/mcfunction-language-server/issues`);\r\n    return undefined;\r\n}\r\n","import {\r\n    CompletionItem,\r\n    CompletionItemKind,\r\n    CompletionList,\r\n    InsertTextFormat\r\n} from \"vscode-languageserver/lib/main\";\r\n\r\nimport { StringReader } from \"./brigadier/string-reader\";\r\nimport { COMMENT_START } from \"./consts\";\r\nimport { DataManager } from \"./data/manager\";\r\nimport { CommandNodePath, CommandTree } from \"./data/types\";\r\nimport { createParserInfo } from \"./misc-functions/creators\";\r\nimport { followPath, getNextNode } from \"./misc-functions/node-tree\";\r\nimport { getParser } from \"./parsers/get-parser\";\r\nimport {\r\n    CommandContext,\r\n    CommandData,\r\n    FunctionInfo,\r\n    ParseNode,\r\n    SuggestResult\r\n} from \"./types\";\r\n\r\nexport function computeCompletions(\r\n    linenum: number,\r\n    character: number,\r\n    document: FunctionInfo,\r\n    data: DataManager\r\n): CompletionList {\r\n    const line = document.lines[linenum];\r\n    if (line.parseInfo === undefined || line.text.startsWith(COMMENT_START)) {\r\n        return CompletionList.create([], true);\r\n    }\r\n    const commandData: CommandData = {\r\n        globalData: data.globalData,\r\n        localData: data.getPackFolderData(document.pack_segments)\r\n    };\r\n    const nodes = line.parseInfo ? line.parseInfo.nodes : [];\r\n    if (nodes.length === 0) {\r\n        return CompletionList.create(\r\n            getCompletionsFromNode(\r\n                linenum,\r\n                0,\r\n                character,\r\n                line.text,\r\n                [],\r\n                commandData,\r\n                {}\r\n            ),\r\n            true\r\n        );\r\n    }\r\n    const { finals, internals } = getAllNodes(nodes, character);\r\n    const completions: CompletionItem[] = [];\r\n    for (const finalNode of finals) {\r\n        completions.push(\r\n            ...getCompletionsFromNode(\r\n                linenum,\r\n                finalNode.high + 1,\r\n                character,\r\n                line.text,\r\n                finalNode.path,\r\n                commandData,\r\n                // N.B. finalNode.final is defined by defition of getAllNodes\r\n                finalNode.final as CommandContext\r\n            )\r\n        );\r\n    }\r\n    for (const insideNode of internals) {\r\n        const newPath = insideNode.path.slice();\r\n        const parentPath = newPath.slice(0, -1);\r\n        completions.push(\r\n            ...getCompletionsFromNode(\r\n                linenum,\r\n                insideNode.low,\r\n                character,\r\n                line.text,\r\n                parentPath,\r\n                commandData,\r\n                insideNode.context\r\n            )\r\n        );\r\n    }\r\n    return CompletionList.create(completions, true);\r\n}\r\n\r\nexport function getAllNodes(\r\n    nodes: ParseNode[],\r\n    character: number\r\n): { finals: ParseNode[]; internals: ParseNode[] } {\r\n    const finals: ParseNode[] = [];\r\n    const internals: ParseNode[] = [];\r\n    for (const node of nodes) {\r\n        if (node.high < character) {\r\n            if (node.final !== undefined) {\r\n                finals.push(node);\r\n            }\r\n        } else {\r\n            if (node.low <= character) {\r\n                internals.push(node);\r\n            }\r\n        }\r\n    }\r\n    return { finals, internals };\r\n}\r\n\r\nfunction getCompletionsFromNode(\r\n    line: number,\r\n    start: number,\r\n    end: number,\r\n    text: string,\r\n    nodepath: CommandNodePath,\r\n    data: CommandData,\r\n    context: CommandContext\r\n): CompletionItem[] {\r\n    const parent = getNextNode(\r\n        followPath(data.globalData.commands, nodepath),\r\n        nodepath,\r\n        (data.globalData.commands as any) as CommandTree\r\n    ).node;\r\n    const result: CompletionItem[] = [];\r\n    if (!!parent.children) {\r\n        for (const childKey in parent.children) {\r\n            if (parent.children.hasOwnProperty(childKey)) {\r\n                const child = parent.children[childKey];\r\n                const childPath = [...nodepath, childKey];\r\n                const info = createParserInfo(\r\n                    child,\r\n                    data,\r\n                    childPath,\r\n                    context,\r\n                    true\r\n                );\r\n                const parser = getParser(child);\r\n                if (!!parser) {\r\n                    const reader = new StringReader(text.substring(start, end));\r\n                    try {\r\n                        const parseResult = parser.parse(reader, info);\r\n                        if (!!parseResult) {\r\n                            result.push(\r\n                                ...suggestionsToCompletions(\r\n                                    parseResult.suggestions,\r\n                                    line,\r\n                                    start,\r\n                                    end,\r\n                                    parser.kind\r\n                                )\r\n                            );\r\n                        }\r\n                    } catch (error) {\r\n                        mcLangLog(\r\n                            `Error thrown whilst parsing: ${error} - ${\r\n                                error.stack\r\n                            }`\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction suggestionsToCompletions(\r\n    suggestions: SuggestResult[],\r\n    line: number,\r\n    start: number,\r\n    end: number,\r\n    defaultKind: CompletionItemKind = CompletionItemKind.Keyword\r\n): CompletionItem[] {\r\n    const result: CompletionItem[] = [];\r\n    for (const suggestion of suggestions) {\r\n        if (typeof suggestion === \"string\") {\r\n            result.push({\r\n                kind: defaultKind,\r\n                label: suggestion,\r\n                textEdit: {\r\n                    newText: suggestion,\r\n                    range: {\r\n                        end: { character: end, line },\r\n                        start: { character: start, line }\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            const completion: CompletionItem = {\r\n                insertTextFormat:\r\n                    suggestion.insertTextFormat || InsertTextFormat.PlainText,\r\n                kind: suggestion.kind || defaultKind,\r\n                label: suggestion.label || suggestion.text,\r\n                textEdit: {\r\n                    newText: suggestion.text,\r\n                    range: {\r\n                        end: { character: end, line },\r\n                        start: { character: start + suggestion.start, line }\r\n                    }\r\n                }\r\n            };\r\n            if (!!suggestion.description) {\r\n                completion.documentation = suggestion.description;\r\n            }\r\n            result.push(completion);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","import { Interval, IntervalTree } from \"node-interval-tree\";\r\nimport {\r\n    Hover,\r\n    Location,\r\n    Position,\r\n    SignatureHelp,\r\n    SignatureInformation,\r\n    SymbolInformation,\r\n    SymbolKind\r\n} from \"vscode-languageserver\";\r\n\r\nimport URI from \"vscode-uri\";\r\nimport { getAllNodes } from \"./completions\";\r\nimport { COMMENT_START } from \"./consts\";\r\nimport { DataManager } from \"./data/manager\";\r\nimport { CommandNode, CommandTree, MCNode, Resources } from \"./data/types\";\r\nimport {\r\n    buildPath,\r\n    convertToNamespace,\r\n    followPath,\r\n    getNextNode,\r\n    namespaceStart,\r\n    stringifyNamespace\r\n} from \"./misc-functions\";\r\nimport { typed_keys } from \"./misc-functions/third_party/typed-keys\";\r\nimport { blankRange } from \"./test/blanks\";\r\nimport {\r\n    CommandLine,\r\n    FunctionInfo,\r\n    JSONDocInfo,\r\n    ParseNode,\r\n    SubAction\r\n} from \"./types\";\r\n\r\nexport function hoverProvider(\r\n    docLine: CommandLine,\r\n    pos: Position,\r\n    _: FunctionInfo,\r\n    manager: DataManager\r\n): Hover | undefined {\r\n    function computeIntervalHovers<T extends Interval>(\r\n        intervals: T[],\r\n        commandLine: CommandLine,\r\n        line: number,\r\n        map: (intervals: T[]) => Hover[\"contents\"]\r\n    ): Hover {\r\n        const end: Position = {\r\n            character: intervals.reduce((acc, v) => Math.max(acc, v.high), 0),\r\n            line\r\n        };\r\n        const start: Position = {\r\n            character: intervals.reduce(\r\n                (acc, v) => Math.min(acc, v.low),\r\n                commandLine.text.length\r\n            ),\r\n            line\r\n        };\r\n        return { contents: map(intervals), range: { start, end } };\r\n    }\r\n    const json = getActionsOfKind(docLine, pos, \"json\");\r\n    if (json.length > 0) {\r\n        const doc = json[0].data as JSONDocInfo;\r\n        let result: Hover | null | undefined;\r\n        const position: Position = {\r\n            character: pos.character - json[0].low,\r\n            line: 0\r\n        };\r\n        manager.globalData.jsonService\r\n            .doHover(doc.text, position, doc.json)\r\n            .then(v => (result = v));\r\n        if (result) {\r\n            if (result.range) {\r\n                result.range.start.line = pos.line;\r\n                result.range.end.line = pos.line;\r\n                result.range.start.character += json[0].low;\r\n                result.range.end.character += json[0].low;\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    const hovers = getActionsOfKind(docLine, pos, \"hover\");\r\n    if (hovers.length > 0) {\r\n        return computeIntervalHovers(hovers, docLine, pos.line, i =>\r\n            i.map(v => v.data as string)\r\n        );\r\n    } else {\r\n        const tree = getNodeTree(docLine);\r\n        if (tree) {\r\n            const matching = tree.search(pos.character, pos.character);\r\n            if (matching.length > 0) {\r\n                return computeIntervalHovers(matching, docLine, pos.line, i =>\r\n                    i.map<string>(node => {\r\n                        const data = followPath(\r\n                            manager.globalData.commands,\r\n                            node.path\r\n                        ) as CommandNode;\r\n                        return `${\r\n                            data.type === \"literal\"\r\n                                ? \"literal\"\r\n                                : `\\`${data.parser}\\` parser`\r\n                        } on path '${node.path.join(\", \")}'`;\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function definitionProvider(\r\n    docLine: CommandLine,\r\n    pos: Position\r\n): Location[] {\r\n    if (docLine) {\r\n        const actions = getActionsOfKind(docLine, pos, \"source\");\r\n        const start: Position = { line: 0, character: 0 };\r\n        return actions.map<Location>(a => ({\r\n            range: { start, end: start },\r\n            uri: URI.file(a.data as any).toString()\r\n        }));\r\n    }\r\n    return [];\r\n}\r\n\r\nexport function signatureHelpProvider(\r\n    line: CommandLine,\r\n    pos: Position,\r\n    _: FunctionInfo,\r\n    manager: DataManager\r\n): SignatureHelp | undefined {\r\n    if (line.parseInfo === undefined || line.text.startsWith(COMMENT_START)) {\r\n        return undefined;\r\n    }\r\n    const nodes = line.parseInfo ? line.parseInfo.nodes : [];\r\n    if (nodes.length === 0) {\r\n        const sigs = getSignatureHelp([], manager);\r\n        if (sigs) {\r\n            const activeSignature =\r\n                line.text.length > 0\r\n                    ? Math.max(\r\n                          sigs.findIndex(v => v.label.startsWith(line.text)),\r\n                          0\r\n                      )\r\n                    : 0;\r\n            return {\r\n                activeParameter: 0,\r\n                activeSignature,\r\n                signatures: sigs\r\n            };\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    let text = \"\";\r\n    const { finals, internals } = getAllNodes(nodes, pos.character);\r\n    const signatures: SignatureInformation[] = [];\r\n    for (const finalNode of finals) {\r\n        const result = getSignatureHelp(finalNode.path, manager);\r\n        if (result) {\r\n            signatures.push(...result);\r\n        }\r\n        const currentText = line.text.slice(finalNode.high + 1);\r\n        if (currentText.length > text.length) {\r\n            text = currentText;\r\n        }\r\n    }\r\n    for (const internalNode of internals) {\r\n        const pth = internalNode.path.slice();\r\n        if (pth.length > 0) {\r\n            pth.splice(pth.length - 1);\r\n            const result = getSignatureHelp(pth, manager);\r\n            if (result) {\r\n                signatures.push(...result);\r\n            }\r\n            const currentText = line.text.slice(\r\n                internalNode.low,\r\n                internalNode.high\r\n            );\r\n            if (currentText.length > text.length) {\r\n                text = currentText;\r\n            }\r\n        }\r\n    }\r\n    if (signatures.length > 0) {\r\n        const activeSignature =\r\n            text.length > 0\r\n                ? Math.max(\r\n                      signatures.findIndex(v => v.label.startsWith(text)),\r\n                      0\r\n                  )\r\n                : 0;\r\n        return { signatures, activeParameter: 0, activeSignature };\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction buildSignatureHelpForChildren(\r\n    node: MCNode<CommandNode> & Partial<CommandNode>,\r\n    path: string[],\r\n    commands: CommandTree,\r\n    depth: number\r\n): string[] {\r\n    if (node.children) {\r\n        const result: string[] = [];\r\n        for (const childName of Object.keys(node.children)) {\r\n            const child = node.children[childName];\r\n            const childPath = [...path, childName];\r\n            const childNode = getNextNode(child, childPath, commands);\r\n            const parameterInfo = buildParameterInfoForNode(child, childName);\r\n            if (depth > 0) {\r\n                const next = buildSignatureHelpForChildren(\r\n                    childNode.node,\r\n                    childNode.path,\r\n                    commands,\r\n                    node.executable ? depth - 1 : 0\r\n                );\r\n                if (next.length > 0) {\r\n                    if (parameterInfo) {\r\n                        result.push(\r\n                            [\r\n                                parameterInfo,\r\n                                ...next.map(v =>\r\n                                    node.executable ? `[${v}]` : v\r\n                                )\r\n                            ].join(\" \")\r\n                        );\r\n                    } else {\r\n                        result.push(\r\n                            next\r\n                                .map(v => (node.executable ? `[${v}]` : v))\r\n                                .join(\" \")\r\n                        );\r\n                    }\r\n                    continue;\r\n                }\r\n            }\r\n            if (parameterInfo) {\r\n                result.push(parameterInfo);\r\n            }\r\n        }\r\n        if (depth === 0) {\r\n            return [result.join(\"|\")];\r\n        }\r\n        return result;\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction buildParameterInfoForNode(\r\n    node: CommandNode,\r\n    name: string\r\n): string | undefined {\r\n    return node.type === \"literal\"\r\n        ? name\r\n        : node.type === \"argument\"\r\n        ? `<${name}: ${node.parser}>`\r\n        : undefined;\r\n}\r\n\r\n// Arbritrary number used to calculate the max length of the line\r\nconst SIZE = 50;\r\nfunction getSignatureHelp(\r\n    path: string[],\r\n    manager: DataManager\r\n): SignatureInformation[] {\r\n    const commands = manager.globalData.commands;\r\n    const next = getNextNode(followPath(commands, path), path, commands);\r\n    const options = buildSignatureHelpForChildren(\r\n        next.node,\r\n        next.path,\r\n        commands,\r\n        2\r\n    );\r\n    const result: SignatureInformation[] = [];\r\n    for (const option of options) {\r\n        result.push(buildSignature(option, path));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction buildSignature(option: string, path: string[]): SignatureInformation {\r\n    if (option.length > SIZE) {\r\n        let index = option.lastIndexOf(\"|\", SIZE);\r\n        if (index === -1) {\r\n            index = SIZE;\r\n        }\r\n        return {\r\n            documentation: `${option\r\n                .slice(index)\r\n                .replace(\"|\", \"\\t(pipe) \")\r\n                .replace(/\\|/g, \"\\n\\t| \")\r\n                .replace(\"(pipe)\", \"|\")}\\n\\nCommand at path ${path.join()}`,\r\n            label: `${option.slice(0, SIZE)}...`\r\n        };\r\n    } else {\r\n        return {\r\n            documentation: `Command at path '${path.join()}'`,\r\n            label: option\r\n        };\r\n    }\r\n}\r\n\r\nfunction getActionsOfKind(\r\n    line: CommandLine,\r\n    position: Position,\r\n    kind: SubAction[\"type\"]\r\n): SubAction[] {\r\n    if (line.parseInfo) {\r\n        if (!line.actions) {\r\n            line.actions = new IntervalTree();\r\n            for (const action of line.parseInfo.actions) {\r\n                line.actions.insert(action);\r\n            }\r\n        }\r\n        const tree = line.actions;\r\n        return tree\r\n            .search(position.character, position.character)\r\n            .filter(v => v.type === kind);\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction getNodeTree(line: CommandLine): IntervalTree<ParseNode> | undefined {\r\n    if (line.nodes) {\r\n        return line.nodes;\r\n    }\r\n    if (line.parseInfo) {\r\n        const tree = new IntervalTree<ParseNode>();\r\n        for (const node of line.parseInfo.nodes) {\r\n            tree.insert(node);\r\n        }\r\n        return tree;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function getWorkspaceSymbols(\r\n    manager: DataManager,\r\n    query: string\r\n): SymbolInformation[] {\r\n    const result: SymbolInformation[] = [];\r\n    const worlds = manager.packData;\r\n    const namespace = convertToNamespace(query);\r\n    for (const worldPath of Object.keys(worlds)) {\r\n        const world = worlds[worldPath];\r\n        for (const packID in world.packs) {\r\n            if (world.packs.hasOwnProperty(packID)) {\r\n                const pack = world.packs[packID];\r\n                for (const type of typed_keys(pack.data)) {\r\n                    const val = pack.data[type];\r\n                    if (val) {\r\n                        for (const item of val) {\r\n                            if (namespaceStart(item, namespace)) {\r\n                                result.push({\r\n                                    kind: symbolKindForResource(type),\r\n                                    location: {\r\n                                        range: blankRange,\r\n                                        uri: URI.file(buildPath(\r\n                                            item,\r\n                                            world,\r\n                                            type\r\n                                        ) as any).toString()\r\n                                    },\r\n                                    name: stringifyNamespace(item)\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function symbolKindForResource(resource: keyof Resources): SymbolKind {\r\n    switch (resource) {\r\n        case \"block_tags\":\r\n        case \"function_tags\":\r\n        case \"item_tags\":\r\n            return SymbolKind.Namespace;\r\n        case \"advancements\":\r\n        case \"functions\":\r\n        case \"loot_tables\":\r\n        case \"recipes\":\r\n        case \"structures\":\r\n            break;\r\n\r\n        default:\r\n    }\r\n    return SymbolKind.Variable;\r\n}\r\n","import { resourceTypes, ReturnHelper } from \"../../misc-functions\";\r\nimport { typed_keys } from \"../../misc-functions/third_party/typed-keys\";\r\n\r\nimport { join } from \"path\";\r\nimport { ReturnSuccess } from \"../../types\";\r\nimport { GlobalData, Resources, WorldInfo } from \"../types\";\r\n\r\nexport async function runMapFunctions(\r\n    resources: Resources,\r\n    globalData: GlobalData,\r\n    packRoot: string,\r\n    localData?: WorldInfo\r\n): Promise<ReturnSuccess<Resources>> {\r\n    const result: Resources = {};\r\n    const helper = new ReturnHelper();\r\n    const promises: Array<Promise<void>> = [];\r\n    for (const type of typed_keys(resources)) {\r\n        type resourcesType = NonNullable<Resources[typeof type]>;\r\n        const val = (result[type] = [] as resourcesType);\r\n        const data = resources[type] as resourcesType;\r\n        // tslint:disable-next-line:no-unbound-method We control this function, so we know it won't use the this keyword.\r\n        const mapFunction = resourceTypes[type].mapFunction;\r\n        if (mapFunction) {\r\n            promises.push(\r\n                ...data.map(async v => {\r\n                    const res = await mapFunction(\r\n                        v,\r\n                        packRoot,\r\n                        globalData,\r\n                        localData\r\n                    );\r\n                    helper.merge(res);\r\n                    val.push(res.data);\r\n                })\r\n            );\r\n        } else {\r\n            val.push(...data);\r\n        }\r\n    }\r\n    await Promise.all(promises);\r\n    return helper.succeed(result);\r\n}\r\n\r\nexport async function mapPacksInfo(\r\n    packsInfo: WorldInfo,\r\n    global: GlobalData\r\n): Promise<ReturnSuccess<WorldInfo>> {\r\n    const helper = new ReturnHelper();\r\n    const result: WorldInfo = { ...packsInfo, packs: {} };\r\n    const promises = typed_keys(packsInfo.packs).map(async packID => {\r\n        const element = packsInfo.packs[packID];\r\n        const subresult = await runMapFunctions(\r\n            element.data,\r\n            global,\r\n            join(packsInfo.location, element.name),\r\n            packsInfo\r\n        );\r\n        helper.merge(subresult);\r\n        result.packs[packID] = { ...element, data: subresult.data };\r\n    });\r\n    await Promise.all(promises);\r\n    return helper.succeed(result);\r\n}\r\n","import * as Long from \"long\";\r\n\r\nexport class BufferStream {\r\n    private readonly buf: Buffer;\r\n    private index: number;\r\n\r\n    public constructor(buffer: Buffer) {\r\n        this.index = 0;\r\n        this.buf = buffer;\r\n    }\r\n\r\n    public getByte(): number {\r\n        const out = this.buf.readInt8(this.index);\r\n        this.index++;\r\n        return out;\r\n    }\r\n\r\n    public getDouble(): number {\r\n        const out = this.buf.readDoubleBE(this.index);\r\n        this.index += 8;\r\n        return out;\r\n    }\r\n\r\n    public getFloat(): number {\r\n        const out = this.buf.readFloatBE(this.index);\r\n        this.index += 4;\r\n        return out;\r\n    }\r\n\r\n    public getInt(): number {\r\n        const out = this.buf.readInt32BE(this.index);\r\n        this.index += 4;\r\n        return out;\r\n    }\r\n\r\n    public getLong(): Long {\r\n        const arr = this.buf.subarray(this.index, this.index + 8);\r\n        this.index += 8;\r\n        return Long.fromBytesBE([...arr]);\r\n    }\r\n\r\n    public getShort(): number {\r\n        const out = this.buf.readInt16BE(this.index);\r\n        this.index += 2;\r\n        return out;\r\n    }\r\n\r\n    public getUTF8(): string {\r\n        const len = this.getShort();\r\n        const out = this.buf.toString(\"utf8\", this.index, this.index + len);\r\n        this.index += len;\r\n        return out;\r\n    }\r\n}\r\n","import { promisify } from \"util\";\r\nimport * as zlib from \"zlib\";\r\nimport { BufferStream } from \"./buffer-stream\";\r\n\r\nconst unzipAsync = promisify<zlib.InputType, Buffer>(zlib.unzip);\r\n\r\nlet tags: Tag;\r\n\r\ntype tagparser<T> = (buffer: BufferStream) => T;\r\n\r\nconst nbtbyte = (buffer: BufferStream) => buffer.getByte();\r\nconst nbtshort = (buffer: BufferStream) => buffer.getShort();\r\nconst nbtint = (buffer: BufferStream) => buffer.getInt();\r\nconst nbtlong = (buffer: BufferStream) => buffer.getLong();\r\nconst nbtfloat = (buffer: BufferStream) => buffer.getFloat();\r\nconst nbtdouble = (buffer: BufferStream) => buffer.getDouble();\r\n\r\nconst nbtbytearray = (buffer: BufferStream) => {\r\n    const len = buffer.getInt();\r\n    const out: number[] = [];\r\n    for (let i = 0; i < len; i++) {\r\n        out.push(buffer.getByte());\r\n    }\r\n    return out;\r\n};\r\n\r\nconst nbtstring = (buffer: BufferStream) => buffer.getUTF8();\r\n\r\nconst nbtlist = (buffer: BufferStream) => {\r\n    const id = buffer.getByte();\r\n    const len = buffer.getInt();\r\n    const parser = tags[id];\r\n    const out: any[] = [];\r\n    for (let i = 0; i < len; i++) {\r\n        out.push(parser(buffer));\r\n    }\r\n    return out;\r\n};\r\n\r\nconst nbtcompound = (buffer: BufferStream) => {\r\n    let tag: number = buffer.getByte();\r\n    const out: { [key: string]: any } = {};\r\n    while (tag !== 0) {\r\n        const name = buffer.getUTF8();\r\n        const parser = tags[tag];\r\n        out[name] = parser(buffer);\r\n        tag = buffer.getByte();\r\n    }\r\n    return out;\r\n};\r\n\r\nconst nbtintarray = (buffer: BufferStream) => {\r\n    const len = buffer.getInt();\r\n    const out: number[] = [];\r\n    for (let i = 0; i < len; i++) {\r\n        out.push(buffer.getInt());\r\n    }\r\n    return out;\r\n};\r\n\r\nconst nbtlongarray = (buffer: BufferStream) => {\r\n    const len = buffer.getInt();\r\n    const out: Long[] = [];\r\n    for (let i = 0; i < len; i++) {\r\n        out.push(buffer.getLong());\r\n    }\r\n    return out;\r\n};\r\n\r\ninterface Tag {\r\n    [id: number]: tagparser<any>;\r\n}\r\n\r\ntags = {\r\n    // Need to redeclare because of TSLint\r\n    1: nbtbyte,\r\n    2: nbtshort,\r\n    3: nbtint,\r\n    4: nbtlong,\r\n    5: nbtfloat,\r\n    6: nbtdouble,\r\n    7: nbtbytearray,\r\n    8: nbtstring,\r\n    9: nbtlist,\r\n    10: nbtcompound,\r\n    11: nbtintarray,\r\n    12: nbtlongarray\r\n};\r\n\r\nexport async function parse<T>(\r\n    buffer: Buffer,\r\n    named: boolean = true\r\n): Promise<T> {\r\n    let unzipbuf;\r\n    try {\r\n        unzipbuf = await unzipAsync(buffer);\r\n    } catch (e) {\r\n        unzipbuf = buffer;\r\n    }\r\n    const stream = new BufferStream(unzipbuf);\r\n    const id = stream.getByte();\r\n    if (named) {\r\n        stream.getUTF8(); // Name\r\n    }\r\n    const parser = tags[id];\r\n    return parser(stream) as T;\r\n}\r\n","import * as path from \"path\";\r\nimport { readFileAsync } from \"../../misc-functions\";\r\nimport { WorldNBT } from \"../types\";\r\nimport { Level, Scoreboard } from \"./nbt-types\";\r\nimport { parse } from \"./parser\";\r\n\r\nexport async function loadNBT(worldLoc: string): Promise<WorldNBT> {\r\n    const nbt: WorldNBT = {} as WorldNBT;\r\n\r\n    const levelpath = path.resolve(worldLoc, \"./level.dat\");\r\n    try {\r\n        const levelbuf: Buffer = await readFileAsync(levelpath);\r\n        nbt.level = await parse<Level>(levelbuf);\r\n    } catch (e) {\r\n        // Level doesn't exist\r\n    }\r\n\r\n    const scpath = path.resolve(worldLoc, \"./data/scoreboard.dat\");\r\n    try {\r\n        const scoreboardbuf: Buffer = await readFileAsync(scpath);\r\n        nbt.scoreboard = await parse<Scoreboard>(scoreboardbuf);\r\n    } catch (e) {\r\n        // Scoreboard file doesn't exist\r\n    }\r\n\r\n    return nbt;\r\n}\r\n","import * as path from \"path\";\r\n\r\nimport { DATAFOLDER, MCMETAFILE, SLASH, SLASHREPLACEREGEX } from \"../consts\";\r\nimport { resourceTypes, ReturnHelper } from \"../misc-functions\";\r\nimport { createExtensionFileError } from \"../misc-functions/file-errors\";\r\nimport {\r\n    readDirAsync,\r\n    readJSON,\r\n    statAsync,\r\n    walkDir\r\n} from \"../misc-functions/promisified-fs\";\r\nimport { typed_keys } from \"../misc-functions/third_party/typed-keys\";\r\nimport { ReturnSuccess } from \"../types\";\r\nimport { mapPacksInfo } from \"./extractor/mapfunctions\";\r\nimport { loadNBT } from \"./nbt/nbt-cache\";\r\nimport {\r\n    Datapack,\r\n    DataPackID,\r\n    GlobalData,\r\n    McmetaFile,\r\n    MinecraftResource,\r\n    Resources,\r\n    WorldInfo\r\n} from \"./types\";\r\n\r\nexport async function getNamespaceResources(\r\n    namespace: string,\r\n    dataFolder: string,\r\n    id: DataPackID | undefined,\r\n    result: Resources = {}\r\n): Promise<ReturnSuccess<Resources>> {\r\n    const helper = new ReturnHelper();\r\n    const namespaceFolder = path.join(dataFolder, namespace);\r\n    const subDirs = await subDirectories(namespaceFolder);\r\n    await Promise.all(\r\n        typed_keys(resourceTypes).map(async type => {\r\n            const resourceInfo = resourceTypes[type];\r\n            if (subDirs.indexOf(resourceInfo.path[0]) === -1) {\r\n                return;\r\n            }\r\n            const dataContents = path.join(\r\n                namespaceFolder,\r\n                ...resourceInfo.path\r\n            );\r\n            const files = await walkDir(dataContents);\r\n            if (files.length === 0) {\r\n                return;\r\n            }\r\n            const nameSpaceContents = result[type] || [];\r\n            await Promise.all(\r\n                files.map(async file => {\r\n                    const realExtension = path.extname(file);\r\n                    if (realExtension !== resourceInfo.extension) {\r\n                        helper.addMisc(\r\n                            createExtensionFileError(\r\n                                file,\r\n                                resourceInfo.extension,\r\n                                realExtension\r\n                            )\r\n                        );\r\n                    }\r\n                    const internalUri = path.relative(dataContents, file);\r\n                    const newResource: MinecraftResource = {\r\n                        namespace,\r\n                        pack: id,\r\n                        path: internalUri\r\n                            .slice(0, -realExtension.length)\r\n                            .replace(SLASHREPLACEREGEX, SLASH)\r\n                    };\r\n                    nameSpaceContents.push(newResource);\r\n                })\r\n            );\r\n            result[type] = nameSpaceContents;\r\n        })\r\n    );\r\n\r\n    return helper.succeed(result);\r\n}\r\n\r\nasync function buildDataPack(\r\n    packFolder: string,\r\n    id: DataPackID,\r\n    packName: string\r\n): Promise<ReturnSuccess<Datapack>> {\r\n    const helper = new ReturnHelper();\r\n    const dataFolder = path.join(packFolder, DATAFOLDER);\r\n    const [mcmeta, packResources] = await Promise.all([\r\n        readJSON<McmetaFile>(path.join(packFolder, MCMETAFILE)),\r\n        getPackResources(dataFolder, id)\r\n    ]);\r\n    const result: Datapack = { id, data: packResources.data, name: packName };\r\n    helper.merge(packResources);\r\n    if (helper.merge(mcmeta)) {\r\n        result.mcmeta = mcmeta.data;\r\n    }\r\n    return helper.succeed(result);\r\n}\r\n\r\nasync function getPackResources(\r\n    dataFolder: string,\r\n    id: DataPackID\r\n): Promise<ReturnSuccess<Resources>> {\r\n    const helper = new ReturnHelper();\r\n    const namespaces = await subDirectories(dataFolder);\r\n    const result: Resources = {};\r\n    await Promise.all(\r\n        namespaces.map(async namespace => {\r\n            const resources = await getNamespaceResources(\r\n                namespace,\r\n                dataFolder,\r\n                id,\r\n                result\r\n            );\r\n            helper.merge(resources);\r\n            return resources.data;\r\n        })\r\n    );\r\n    return helper.succeed(result);\r\n}\r\n\r\nexport async function getPacksInfo(\r\n    location: string,\r\n    globalData: GlobalData\r\n): Promise<ReturnSuccess<WorldInfo>> {\r\n    const packNames = await subDirectories(location);\r\n    const helper = new ReturnHelper();\r\n    const packs = [...packNames.entries()];\r\n    const nbt = await loadNBT(path.resolve(location, \"../\"));\r\n    const result: WorldInfo = { location, packnamesmap: {}, packs: {}, nbt };\r\n    const promises: Array<Promise<void>> = packs.map(\r\n        async ([packID, packName]) => {\r\n            const loc = path.join(location, packName);\r\n            const packData = await buildDataPack(loc, packID, packName);\r\n            helper.merge(packData);\r\n            result.packs[packID] = packData.data;\r\n            result.packnamesmap[packName] = packID;\r\n        }\r\n    );\r\n    await Promise.all(promises);\r\n    const otherResult = await mapPacksInfo(result, globalData);\r\n    return helper.mergeChain(otherResult).succeed(otherResult.data);\r\n}\r\n\r\nasync function subDirectories(baseFolder: string): Promise<string[]> {\r\n    let files: string[] = [];\r\n    try {\r\n        files = await readDirAsync(baseFolder);\r\n    } catch {\r\n        return [];\r\n    }\r\n    const promises = files.map<Promise<boolean>>(async name => {\r\n        try {\r\n            return (await statAsync(path.join(baseFolder, name))).isDirectory();\r\n        } catch {\r\n            return false;\r\n        }\r\n    });\r\n    const results = await Promise.all(promises);\r\n    return files.filter((_, i) => results[i]);\r\n}\r\n","import * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport { promisify } from \"util\";\r\n\r\nimport { DATAFOLDER } from \"../../consts\";\r\nimport { ReturnHelper } from \"../../misc-functions\";\r\nimport { ReturnSuccess } from \"../../types\";\r\nimport { getNamespaceResources } from \"../datapack-resources\";\r\nimport { BlocksPropertyInfo, CommandTree, GlobalData } from \"../types\";\r\nimport { runMapFunctions } from \"./mapfunctions\";\r\nconst readFileAsync = promisify(fs.readFile);\r\n\r\ntype DataSaveResult<T extends keyof GlobalData> = [T, GlobalData[T]];\r\n\r\nexport async function collectData(\r\n    version: string,\r\n    dataDir: string\r\n): Promise<ReturnSuccess<GlobalData>> {\r\n    const helper = new ReturnHelper();\r\n    const result: GlobalData = { meta_info: { version } } as GlobalData;\r\n    const cleanups = await Promise.all([\r\n        getBlocks(dataDir),\r\n        getItems(dataDir),\r\n        getCommands(dataDir),\r\n        getResources(dataDir)\r\n    ]);\r\n    for (const dataType of cleanups) {\r\n        result[dataType[0]] = dataType[1];\r\n    }\r\n    const resources = await runMapFunctions(result.resources, result, dataDir);\r\n    return helper\r\n        .mergeChain(resources)\r\n        .succeed({ ...result, resources: resources.data });\r\n}\r\n\r\n//#region Resources\r\nasync function getResources(\r\n    dataDir: string\r\n): Promise<DataSaveResult<\"resources\">> {\r\n    const namespacePath = path.join(dataDir, DATAFOLDER);\r\n    const resources = await getNamespaceResources(\r\n        \"minecraft\",\r\n        namespacePath,\r\n        undefined\r\n    );\r\n    return [\"resources\", resources.data];\r\n}\r\n//#endregion\r\n//#region Items\r\nasync function getItems(dataDir: string): Promise<DataSaveResult<\"items\">> {\r\n    const itemsData: Dictionary<{ protocol_id: number }> = JSON.parse(\r\n        (await readFileAsync(\r\n            path.join(dataDir, \"reports\", \"items.json\")\r\n        )).toString()\r\n    );\r\n    return [\"items\", Object.keys(itemsData)];\r\n}\r\nasync function getCommands(\r\n    dataDir: string\r\n): Promise<DataSaveResult<\"commands\">> {\r\n    const tree: CommandTree = JSON.parse(\r\n        (await readFileAsync(\r\n            path.join(dataDir, \"reports\", \"commands.json\")\r\n        )).toString()\r\n    );\r\n    return [\"commands\", tree];\r\n}\r\n//#endregion\r\n\r\n//#region Blocks\r\nasync function getBlocks(dataDir: string): Promise<DataSaveResult<\"blocks\">> {\r\n    const blocksData: BlocksJson = JSON.parse(\r\n        (await readFileAsync(\r\n            path.join(dataDir, \"reports\", \"blocks.json\")\r\n        )).toString()\r\n    );\r\n    return [\"blocks\", cleanBlocks(blocksData)];\r\n}\r\n\r\nfunction cleanBlocks(blocks: BlocksJson): BlocksPropertyInfo {\r\n    const result: BlocksPropertyInfo = {};\r\n    for (const blockName in blocks) {\r\n        if (blocks.hasOwnProperty(blockName)) {\r\n            const blockInfo = blocks[blockName];\r\n            result[blockName] = {};\r\n            if (!!blockInfo.properties) {\r\n                Object.assign(result[blockName], blockInfo.properties);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\ninterface BlocksJson {\r\n    [id: string]: {\r\n        properties?: {\r\n            [id: string]: string[];\r\n        };\r\n    };\r\n}\r\n//#endregion\r\n","// tslint:disable:no-require-imports\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\n// @ts-ignore `import *` syntax is broken in this case as requestPromise would be a function\r\nimport requestPromise from \"request-promise-native\";\r\n\r\nexport async function getPathToJar(\r\n    tempdir: string,\r\n    currentversion: string\r\n): Promise<JarInfo | undefined> {\r\n    if (!!mcLangSettings.data.customJar) {\r\n        return { jarPath: mcLangSettings.data.customJar, version: \"\" };\r\n    } else {\r\n        return downloadJar(currentversion, tempdir);\r\n    }\r\n}\r\n\r\nexport async function downloadJar(\r\n    currentversion: string,\r\n    tmpDirName: string\r\n): Promise<JarInfo | undefined> {\r\n    const versionInfo = await getLatestVersionInfo();\r\n    if (versionInfo.id !== currentversion) {\r\n        const singleVersion: SingleVersionInformation = await requestPromise(\r\n            versionInfo.url,\r\n            {\r\n                json: true\r\n            }\r\n        ).promise();\r\n        const jarPath = path.join(\r\n            tmpDirName,\r\n            `minecraft-function-${versionInfo.id}.jar`\r\n        );\r\n        const requestPromised = requestPromise(\r\n            singleVersion.downloads.server.url\r\n        );\r\n        requestPromised.pipe(fs.createWriteStream(jarPath));\r\n        await Promise.resolve(requestPromised);\r\n        return { jarPath, version: versionInfo.id };\r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport interface JarInfo {\r\n    jarPath: string;\r\n    version: string;\r\n}\r\n\r\n//#region Version Manifest Usage\r\ninterface SingleVersionInformation {\r\n    downloads: {\r\n        server: {\r\n            sha1: string;\r\n            size: number;\r\n            url: string;\r\n        };\r\n    };\r\n}\r\n\r\nasync function getLatestVersionInfo(): Promise<VersionInfo> {\r\n    const manifest: VersionsManifest = await requestPromise(\r\n        \"https://launchermeta.mojang.com/mc/game/version_manifest.json\",\r\n        {\r\n            json: true\r\n        }\r\n    ).promise();\r\n    const version = findVersion(getVersionId(manifest), manifest);\r\n    return version;\r\n}\r\n\r\nfunction getVersionId(manifest: VersionsManifest): string {\r\n    if (mcLangSettings.data.snapshots) {\r\n        return manifest.latest.snapshot;\r\n    } else {\r\n        return manifest.latest.release;\r\n    }\r\n}\r\n\r\nfunction findVersion(version: string, manifest: VersionsManifest): VersionInfo {\r\n    return manifest.versions.find(\r\n        verInfo => verInfo.id === version\r\n    ) as VersionInfo;\r\n}\r\n\r\ninterface VersionInfo {\r\n    id: string;\r\n    releaseTime: string;\r\n    time: string;\r\n    type: \"snapshot\" | \"release\";\r\n    url: string;\r\n}\r\n\r\ninterface VersionsManifest {\r\n    latest: {\r\n        release: string;\r\n        snapshot: string;\r\n    };\r\n    versions: VersionInfo[];\r\n}\r\n//#endregion\r\n","import { execFile } from \"child_process\";\r\nimport * as path from \"path\";\r\nimport { promisify } from \"util\";\r\nimport { cacheFolder } from \"../cache\";\r\nconst execFileAsync = promisify(execFile);\r\n\r\n/**\r\n * Get the command used to execute a java version\r\n */\r\nexport async function checkJavaPath(): Promise<string> {\r\n    const javaPath = mcLangSettings.data.javaPath || \"java\";\r\n    try {\r\n        await execFileAsync(javaPath, [\"-version\"], { env: process.env });\r\n        return javaPath;\r\n    } catch (error) {\r\n        throw new Error(\r\n            `Could not find Java executable. Got message: '${error}'`\r\n        );\r\n    }\r\n}\r\n\r\nexport async function runGenerator(\r\n    javapath: string,\r\n    tempdir: string,\r\n    jarpath: string\r\n): Promise<string> {\r\n    const resultFolder = path.join(tempdir, \"generated\");\r\n    await execFileAsync(\r\n        javapath,\r\n        [\r\n            \"-cp\",\r\n            jarpath,\r\n            \"net.minecraft.data.Main\",\r\n            \"--output\",\r\n            resultFolder,\r\n            \"--all\"\r\n        ],\r\n        {\r\n            cwd: path.join(cacheFolder, \"..\") // For log output to go in the extension folder\r\n        }\r\n    );\r\n    return resultFolder;\r\n}\r\n","import * as fs from \"fs\";\r\nimport { tmpdir } from \"os\";\r\nimport * as path from \"path\";\r\nimport { promisify } from \"util\";\r\n\r\nimport { ReturnHelper } from \"../../misc-functions\";\r\nimport { ReturnSuccess } from \"../../types\";\r\nimport { cacheData } from \"../cache\";\r\nimport { Cacheable } from \"../types\";\r\nimport { collectData } from \"./collect-data\";\r\nimport { getPathToJar } from \"./download\";\r\nimport { checkJavaPath, runGenerator } from \"./extract-data\";\r\n\r\nconst mkdtmpAsync = promisify(fs.mkdtemp);\r\n\r\n/**\r\n * Will throw an error if something goes wrong.\r\n * Steps:\r\n * - Check if enabled in settings. ✓\r\n * - Check versions manifest. Compare with cached if available ✓\r\n *  - At the same time, check if java is installed ✓\r\n * - Get single version information ✓\r\n * - Download the jar into a temporary folder ✓\r\n * - Run the exposed data generator. ✓\r\n * - Collect the data exposed\r\n *  - Blocks and states\r\n *  - Items\r\n *  - (Entities)?\r\n *  - Commands\r\n *  - Advancements, recipes, structures, tags, etc\r\n * - Cache that data\r\n * - Return the data\r\n */\r\nexport async function collectGlobalData(\r\n    currentversion: string = \"\"\r\n): Promise<ReturnSuccess<Cacheable> | undefined> {\r\n    if (mcLangSettings.data.enabled) {\r\n        const javaPath = await checkJavaPath();\r\n        mcLangLog(`Using java at path ${javaPath}`);\r\n        const dir = await mkdtmpAsync(path.join(tmpdir(), \"mcfunction\"));\r\n        const jarInfo = await getPathToJar(dir, currentversion);\r\n        if (jarInfo) {\r\n            mcLangLog(`Running generator`);\r\n            const datadir = await runGenerator(javaPath, dir, jarInfo.jarPath);\r\n            mcLangLog(\"Generator Finished, collecting data\");\r\n            const helper = new ReturnHelper();\r\n            const data = await collectData(jarInfo.version, datadir);\r\n            mcLangLog(\"Data collected, caching data\");\r\n            await cacheData(data.data);\r\n            mcLangLog(\"Caching complete\");\r\n            return helper.mergeChain(data).succeed(data.data);\r\n        } else {\r\n            return undefined;\r\n        }\r\n    } else {\r\n        throw new Error(\r\n            \"Data Obtainer disabled in settings. To obtain data automatically, please enable it.\"\r\n        );\r\n    }\r\n}\r\n","import { nbtDocs, NBTNode, ValueList } from \"mc-nbt-paths\";\r\nimport { SynchronousPromise } from \"synchronous-promise\";\r\nimport {\r\n    getLanguageService,\r\n    SchemaRequestService\r\n} from \"vscode-json-languageservice\";\r\nimport { NBTDocs, NonCacheable } from \"./types\";\r\n\r\nexport function loadNBTDocs(): NBTDocs {\r\n    const nbtData = new Map<string, NBTNode | ValueList>();\r\n    Object.keys(nbtDocs).forEach(k => nbtData.set(k, nbtDocs[k]));\r\n    return nbtData;\r\n}\r\nconst textComponentSchema =\r\n    \"https://raw.githubusercontent.com/Levertion/minecraft-json-schema/master/java/shared/text_component.json\";\r\n\r\nexport async function loadNonCached(): Promise<NonCacheable> {\r\n    const schemas: { [key: string]: string } = {\r\n        [textComponentSchema]: JSON.stringify(\r\n            // FIXME: prettier breaks require.resolve so we need to use plain require to get the correct path\r\n            // tslint:disable-next-line:no-require-imports\r\n            require(\"minecraft-json-schemas/java/shared/text_component\")\r\n        )\r\n    };\r\n    const schemaRequestService: SchemaRequestService = url =>\r\n        schemas.hasOwnProperty(url)\r\n            ? SynchronousPromise.resolve(schemas[url])\r\n            : SynchronousPromise.reject<string>(\r\n                  `Schema at url ${url} not supported`\r\n              );\r\n\r\n    const jsonService = getLanguageService({\r\n        promiseConstructor: SynchronousPromise,\r\n        schemaRequestService\r\n    });\r\n    jsonService.configure({\r\n        allowComments: false,\r\n        schemas: [\r\n            {\r\n                fileMatch: [\"text-component.json\"],\r\n                uri: textComponentSchema\r\n            }\r\n        ],\r\n        validate: true\r\n    });\r\n\r\n    return {\r\n        jsonService,\r\n        nbt_docs: loadNBTDocs()\r\n    };\r\n}\r\n","import {\r\n    DidChangeWatchedFilesParams,\r\n    FileChangeType\r\n} from \"vscode-languageserver\";\r\n\r\nimport { ok } from \"assert\";\r\nimport { extname, join } from \"path\";\r\nimport { MCMETAFILE } from \"../consts\";\r\nimport {\r\n    getKindAndNamespace,\r\n    namespacesEqual,\r\n    PackLocationSegments,\r\n    parseDataPath,\r\n    resourceTypes,\r\n    ReturnHelper\r\n} from \"../misc-functions\";\r\nimport { createExtensionFileError } from \"../misc-functions/file-errors\";\r\nimport { readJSON } from \"../misc-functions/promisified-fs\";\r\nimport { ReturnedInfo, ReturnSuccess } from \"../types\";\r\nimport { readCache } from \"./cache\";\r\nimport { getPacksInfo } from \"./datapack-resources\";\r\nimport { collectGlobalData } from \"./extractor\";\r\nimport { loadNonCached } from \"./noncached\";\r\nimport {\r\n    Datapack,\r\n    DataPackID,\r\n    GlobalData,\r\n    LocalData,\r\n    McmetaFile,\r\n    MinecraftResource,\r\n    WorldInfo\r\n} from \"./types\";\r\n\r\nexport class DataManager {\r\n    /**\r\n     * Create a datamanager using Dummy Data for running tests.\r\n     */\r\n    public static newWithData(\r\n        dummyGlobal?: DataManager[\"globalDataInternal\"],\r\n        dummyPacks?: DataManager[\"packDataComplete\"]\r\n    ): DataManager {\r\n        const manager = new DataManager();\r\n\r\n        manager.globalDataInternal = dummyGlobal || manager.globalDataInternal;\r\n        Object.assign(manager.packDataComplete, dummyPacks);\r\n        return manager;\r\n    }\r\n    //#region Data Management\r\n    private globalDataInternal: GlobalData = {} as GlobalData;\r\n\r\n    private readonly packDataComplete: { [root: string]: WorldInfo } = {};\r\n\r\n    private readonly packDataPromises: {\r\n        [root: string]: Promise<ReturnSuccess<WorldInfo>>;\r\n    } = {};\r\n\r\n    public get globalData(): GlobalData {\r\n        return this.globalDataInternal;\r\n    }\r\n    public get packData(): DataManager[\"packDataComplete\"] {\r\n        return this.packDataComplete;\r\n    }\r\n    //#endregion\r\n    //#region Constructor\r\n    //#endregion\r\n    public getPackFolderData(\r\n        folder: PackLocationSegments | undefined\r\n    ): LocalData | undefined {\r\n        if (\r\n            !!folder &&\r\n            this.packDataComplete.hasOwnProperty(folder.packsFolder)\r\n        ) {\r\n            const info = this.packDataComplete[folder.packsFolder];\r\n\r\n            return { ...info, current: info.packnamesmap[folder.pack] };\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public async handleChanges(\r\n        event: DidChangeWatchedFilesParams\r\n    ): Promise<ReturnedInfo<undefined>> {\r\n        const helper = new ReturnHelper(false);\r\n        const firsts = new Set<string>();\r\n        const promises = event.changes.map(async change => {\r\n            try {\r\n                const parsedPath = parseDataPath(change.uri);\r\n                if (parsedPath) {\r\n                    interface InlineData {\r\n                        data: WorldInfo;\r\n                        pack: Datapack;\r\n                        packID: DataPackID;\r\n                    }\r\n                    const getData = async (): Promise<InlineData> => {\r\n                        const first = await this.readPackFolderData(\r\n                            parsedPath.packsFolder\r\n                        );\r\n                        if (first) {\r\n                            firsts.add(parsedPath.packsFolder);\r\n                        }\r\n                        const data = this.getPackFolderData(parsedPath);\r\n                        if (!data) {\r\n                            throw new Error(\r\n                                \"Could not load data from datapacks folder\"\r\n                            );\r\n                        }\r\n                        const packID = data.packnamesmap[parsedPath.pack];\r\n                        const pack = data.packs[packID];\r\n                        return { data, pack, packID };\r\n                    };\r\n\r\n                    if (parsedPath.rest === MCMETAFILE) {\r\n                        const { pack } = await getData();\r\n                        if (!firsts.has(parsedPath.packsFolder)) {\r\n                            const res = await readJSON<McmetaFile>(change.uri);\r\n                            pack.mcmeta = helper.merge(res)\r\n                                ? res.data\r\n                                : undefined;\r\n                        }\r\n                    } else {\r\n                        const namespace = getKindAndNamespace(parsedPath.rest);\r\n                        if (namespace) {\r\n                            const { pack, packID, data } = await getData();\r\n                            if (!firsts.has(parsedPath.packsFolder)) {\r\n                                const shouldUpdateContents =\r\n                                    change.type === FileChangeType.Changed &&\r\n                                    resourceTypes[namespace.kind].mapFunction;\r\n                                let contents = pack.data[namespace.kind];\r\n                                if (\r\n                                    (change.type === FileChangeType.Deleted ||\r\n                                        shouldUpdateContents) &&\r\n                                    !!contents\r\n                                ) {\r\n                                    for (let i = 0; i < contents.length; i++) {\r\n                                        const element = contents[i];\r\n                                        if (\r\n                                            namespacesEqual(\r\n                                                element,\r\n                                                namespace.location\r\n                                            )\r\n                                        ) {\r\n                                            contents.splice(i, 1);\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (\r\n                                    change.type === FileChangeType.Created ||\r\n                                    shouldUpdateContents\r\n                                ) {\r\n                                    if (!contents) {\r\n                                        contents = pack.data[\r\n                                            namespace.kind\r\n                                        ] = [];\r\n                                    }\r\n                                    const newResource: MinecraftResource = {\r\n                                        ...namespace.location,\r\n                                        pack: packID\r\n                                    };\r\n                                    const actual = extname(change.uri);\r\n                                    const expected =\r\n                                        resourceTypes[namespace.kind].extension;\r\n                                    if (actual === expected) {\r\n                                        const mapFunction =\r\n                                            // tslint:disable-next-line:no-unbound-method We control this function, so we know it won't use the this keyword.\r\n                                            resourceTypes[namespace.kind]\r\n                                                .mapFunction;\r\n                                        if (mapFunction) {\r\n                                            const result = await mapFunction(\r\n                                                newResource,\r\n                                                join(\r\n                                                    parsedPath.packsFolder,\r\n                                                    parsedPath.pack\r\n                                                ),\r\n                                                this.globalData,\r\n                                                data\r\n                                            );\r\n                                            if (helper.merge(result)) {\r\n                                                contents.push(result.data);\r\n                                            }\r\n                                        } else {\r\n                                            contents.push(newResource);\r\n                                        }\r\n                                    } else {\r\n                                        helper.addMisc(\r\n                                            createExtensionFileError(\r\n                                                change.uri,\r\n                                                expected,\r\n                                                actual\r\n                                            )\r\n                                        );\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                mcLangLog(\r\n                    `Change ${JSON.stringify(\r\n                        change\r\n                    )} could not be completed, due to '${JSON.stringify(\r\n                        error\r\n                    )}'`\r\n                );\r\n            }\r\n        });\r\n        await Promise.all(promises);\r\n        return helper.succeed();\r\n    }\r\n\r\n    public async loadGlobalData(): Promise<boolean | string> {\r\n        let version: string | undefined;\r\n        if (!!this.globalData.meta_info) {\r\n            version = this.globalData.meta_info.version;\r\n        }\r\n        try {\r\n            const helper = new ReturnHelper();\r\n            const data = await collectGlobalData(version);\r\n            if (data) {\r\n                helper.merge(data);\r\n                if (this.globalDataInternal) {\r\n                    this.globalDataInternal = {\r\n                        ...this.globalDataInternal,\r\n                        ...data.data\r\n                    };\r\n                } else {\r\n                    this.globalDataInternal = {\r\n                        ...(await loadNonCached()),\r\n                        ...data.data\r\n                    };\r\n                }\r\n            }\r\n            ok(this.globalDataInternal);\r\n            return false;\r\n        } catch (error) {\r\n            return `Error loading global data: ${error.stack ||\r\n                error.toString()}`;\r\n        }\r\n    }\r\n\r\n    public async readCache(): Promise<boolean> {\r\n        try {\r\n            const cache = await readCache();\r\n            const noncache = await loadNonCached();\r\n            this.globalDataInternal = { ...cache, ...noncache };\r\n            mcLangLog(\"Cache Successfully read\");\r\n            return true;\r\n        } catch (error) {\r\n            mcLangLog(\r\n                `Reading cache failed with error ${JSON.stringify(error)}`\r\n            );\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @returns Whether this is the first request for this folder\r\n     */\r\n    public async readPackFolderData(\r\n        folder: string\r\n    ): Promise<ReturnedInfo<void>> {\r\n        const helper = new ReturnHelper();\r\n        if (!this.packDataPromises.hasOwnProperty(folder)) {\r\n            this.packDataPromises[folder] = getPacksInfo(\r\n                folder,\r\n                this.globalData\r\n            );\r\n            const result = await this.packDataPromises[folder];\r\n            this.packDataComplete[folder] = result.data;\r\n            helper.merge(result);\r\n            return helper.succeed();\r\n        } else {\r\n            await this.packDataPromises[folder];\r\n            return helper.fail();\r\n        }\r\n    }\r\n}\r\n","/**\r\n * merge_deep function adapted from:\r\n *\r\n * https://stackoverflow.com/a/34749873/8728461\r\n *\r\n * Originally, non-typescript code by: https://github.com/salakar\r\n */\r\n\r\ntype AnyDict = Dictionary<any>;\r\n\r\n/**\r\n * Simple object check.\r\n * @param item the item\r\n */\r\nexport function isObject(item: any): item is AnyDict {\r\n    return item && typeof item === \"object\" && !Array.isArray(item);\r\n}\r\n\r\n/**\r\n * Deep merge two objects.\r\n */\r\nexport function mergeDeep(target: AnyDict, ...sources: AnyDict[]): AnyDict {\r\n    if (!sources.length) {\r\n        return target;\r\n    }\r\n    const source = sources.shift();\r\n    if (isObject(target) && isObject(source)) {\r\n        for (const key in source) {\r\n            if (isObject(source[key])) {\r\n                if (!target[key]) {\r\n                    Object.assign(target, { [key]: {} });\r\n                }\r\n                mergeDeep(target[key], source[key]);\r\n            } else {\r\n                Object.assign(target, { [key]: source[key] });\r\n            }\r\n        }\r\n    }\r\n    return mergeDeep(target, ...sources);\r\n}\r\n","import { EventEmitter } from \"events\";\r\nimport { DiagnosticSeverity } from \"vscode-languageserver/lib/main\";\r\n\r\nimport { CommandErrorBuilder } from \"./brigadier/errors\";\r\nimport { StringReader } from \"./brigadier/string-reader\";\r\nimport { COMMENT_START, SPACE } from \"./consts\";\r\nimport { DataManager } from \"./data/manager\";\r\nimport {\r\n    CommandNode,\r\n    CommandNodePath,\r\n    GlobalData,\r\n    LocalData\r\n} from \"./data/types\";\r\nimport {\r\n    createParserInfo,\r\n    getNextNode,\r\n    isSuccessful,\r\n    ReturnHelper\r\n} from \"./misc-functions\";\r\nimport { getParser } from \"./parsers/get-parser\";\r\nimport {\r\n    CommandContext,\r\n    CommandData,\r\n    FunctionInfo,\r\n    ParseNode,\r\n    ReturnedInfo,\r\n    StoredParseResult\r\n} from \"./types\";\r\n\r\nconst parseExceptions = {\r\n    Ambiguity: new CommandErrorBuilder(\r\n        \"parsing.command.ambiguous\",\r\n        \"Command text is possibly ambiguous\",\r\n        DiagnosticSeverity.Information\r\n    ),\r\n    NoSuccesses: new CommandErrorBuilder(\r\n        \"command.parsing.matchless\",\r\n        \"No nodes which matched '%s' found\"\r\n    ),\r\n    NotRunnable: new CommandErrorBuilder(\r\n        \"parsing.command.executable\",\r\n        \"The command '%s' cannot be run.\",\r\n        DiagnosticSeverity.Warning\r\n    )\r\n};\r\n\r\nexport function parseCommand(\r\n    text: string,\r\n    globalData: GlobalData,\r\n    localData: LocalData | undefined\r\n): StoredParseResult | void {\r\n    if (text.length === 0 || text.startsWith(COMMENT_START)) {\r\n        return undefined;\r\n    }\r\n    const reader = new StringReader(text);\r\n    const data: CommandData = { globalData, localData };\r\n    const startingcontext: CommandContext = {};\r\n    const recurse = parsechildren(\r\n        reader,\r\n        globalData.commands as any,\r\n        [],\r\n        data,\r\n        startingcontext\r\n    );\r\n    const nodes: ParseNode[] = [];\r\n    if (isSuccessful(recurse)) {\r\n        nodes.push(...recurse.data);\r\n    }\r\n    return { actions: recurse.actions, nodes, errors: recurse.errors };\r\n}\r\n\r\nfunction parsechildren(\r\n    reader: StringReader,\r\n    node: CommandNode,\r\n    path: CommandNodePath,\r\n    data: CommandData,\r\n    context: CommandContext\r\n): ReturnedInfo<ParseNode[]> {\r\n    const parent = getNextNode(node, path, data.globalData.commands);\r\n    const helper = new ReturnHelper();\r\n    const children = parent.node.children;\r\n    if (children) {\r\n        const nodes: ParseNode[] = [];\r\n        const start = reader.cursor;\r\n        let successCount = 0;\r\n        let min: number = reader.getTotalLength();\r\n        const originalErrorCount = helper.getShared().errors.length;\r\n        for (const childKey of Object.keys(children)) {\r\n            const child = children[childKey];\r\n            const childpath = [...parent.path, childKey];\r\n            const result = parseAgainstNode(\r\n                reader,\r\n                child,\r\n                childpath,\r\n                data,\r\n                context\r\n            );\r\n            if (helper.merge(result)) {\r\n                const childdata = result.data;\r\n                const newContext = childdata.newContext\r\n                    ? childdata.newContext\r\n                    : context;\r\n                const newNode: ParseNode = {\r\n                    context,\r\n                    final: newContext,\r\n                    high: reader.cursor,\r\n                    low: start,\r\n                    path: childpath\r\n                };\r\n                function checkRead(): boolean {\r\n                    if (reader.canRead()) {\r\n                        return true;\r\n                    } else {\r\n                        if (!childdata.node.executable) {\r\n                            helper.addErrors(\r\n                                parseExceptions.NotRunnable.create(\r\n                                    0,\r\n                                    reader.cursor,\r\n                                    reader.string\r\n                                )\r\n                            );\r\n                        }\r\n                        return false;\r\n                    }\r\n                }\r\n                if (checkRead()) {\r\n                    if (reader.peek() === SPACE) {\r\n                        successCount++;\r\n                        reader.skip();\r\n                        if (checkRead()) {\r\n                            const recurse = parsechildren(\r\n                                reader,\r\n                                childdata.node,\r\n                                childpath,\r\n                                data,\r\n                                newContext\r\n                            );\r\n                            if (helper.merge(recurse)) {\r\n                                min = Math.min(min, reader.cursor);\r\n                                nodes.push(...recurse.data);\r\n                                newNode.final = undefined;\r\n                            }\r\n                        }\r\n                        nodes.push(newNode);\r\n                    }\r\n                } else {\r\n                    successCount++;\r\n                    nodes.push(newNode);\r\n                }\r\n            }\r\n            reader.cursor = start;\r\n        }\r\n        if (successCount === 0) {\r\n            if (helper.getShared().errors.length === originalErrorCount) {\r\n                helper.addErrors(\r\n                    parseExceptions.NoSuccesses.create(\r\n                        reader.cursor,\r\n                        reader.getTotalLength(),\r\n                        reader.getRemaining()\r\n                    )\r\n                );\r\n            }\r\n            return helper.fail();\r\n        }\r\n        if (successCount > 1) {\r\n            helper.addErrors(parseExceptions.Ambiguity.create(start, min));\r\n        }\r\n        return helper.succeed(nodes);\r\n    } else {\r\n        if (!(parent.node as CommandNode).executable) {\r\n            mcLangLog(\r\n                `Malformed tree at path ${JSON.stringify(\r\n                    path\r\n                )}. No children and not executable`\r\n            );\r\n        }\r\n        return helper.fail();\r\n    }\r\n}\r\n\r\ninterface NodeParseSuccess {\r\n    max: number;\r\n    newContext?: CommandContext;\r\n    node: CommandNode;\r\n}\r\n\r\nfunction parseAgainstNode(\r\n    reader: StringReader,\r\n    node: CommandNode,\r\n    path: CommandNodePath,\r\n    data: CommandData,\r\n    context: CommandContext\r\n): ReturnedInfo<NodeParseSuccess> {\r\n    const parser = getParser(node);\r\n    const helper = new ReturnHelper(false);\r\n    if (!!parser) {\r\n        try {\r\n            const result = parser.parse(\r\n                reader,\r\n                createParserInfo(node, data, path, context, false)\r\n            );\r\n            if (!!result) {\r\n                if (helper.merge(result)) {\r\n                    const newContext = { ...context, ...result.data };\r\n                    return helper.succeed<NodeParseSuccess>({\r\n                        max: reader.cursor,\r\n                        newContext,\r\n                        node\r\n                    });\r\n                } else {\r\n                    return helper.fail();\r\n                }\r\n            } else {\r\n                return helper.succeed<NodeParseSuccess>({\r\n                    max: reader.cursor,\r\n                    node\r\n                });\r\n            }\r\n        } catch (error) {\r\n            mcLangLog(`Error thrown whilst parsing: ${error} - ${error.stack}`);\r\n        }\r\n    }\r\n    return helper.fail();\r\n}\r\n\r\nexport function parseLines(\r\n    document: FunctionInfo,\r\n    data: DataManager,\r\n    emitter: EventEmitter,\r\n    documentUri: string,\r\n    lines: number[]\r\n): void {\r\n    for (const lineNo of lines) {\r\n        const line = document.lines[lineNo];\r\n        const packsInfo = data.getPackFolderData(document.pack_segments);\r\n        let localData: LocalData | undefined;\r\n        if (packsInfo && document.pack_segments) {\r\n            localData = {\r\n                ...packsInfo,\r\n                current: packsInfo.packnamesmap[document.pack_segments.pack]\r\n            };\r\n        }\r\n        const result = parseCommand(line.text, data.globalData, localData);\r\n        line.parseInfo = result ? result : false;\r\n        line.actions = undefined;\r\n        line.nodes = undefined;\r\n        emitter.emit(`${documentUri}:${lineNo}`);\r\n    }\r\n}\r\n\r\nexport function parseDocument(\r\n    document: FunctionInfo,\r\n    data: DataManager,\r\n    emitter: EventEmitter,\r\n    documentUri: string\r\n): void {\r\n    const lines = document.lines.map((_, i) => i);\r\n    parseLines(document, data, emitter, documentUri, lines);\r\n}\r\n","import { EventEmitter } from \"events\";\r\nimport { promisify } from \"util\";\r\nimport { shim } from \"util.promisify\";\r\nshim();\r\nimport {\r\n    CompletionList,\r\n    createConnection,\r\n    Diagnostic,\r\n    DidChangeWatchedFilesNotification,\r\n    IPCMessageReader,\r\n    IPCMessageWriter,\r\n    Location,\r\n    Position,\r\n    TextDocumentPositionParams,\r\n    TextDocumentSyncKind\r\n} from \"vscode-languageserver/lib/main\";\r\nimport URI from \"vscode-uri\";\r\n\r\nimport {\r\n    definitionProvider,\r\n    getWorkspaceSymbols,\r\n    hoverProvider,\r\n    signatureHelpProvider\r\n} from \"./actions\";\r\nimport { computeCompletions } from \"./completions\";\r\nimport { readSecurity } from \"./data/cache\";\r\nimport { DataManager } from \"./data/manager\";\r\nimport {\r\n    actOnSecurity,\r\n    commandErrorToDiagnostic,\r\n    isSuccessful,\r\n    parseDataPath,\r\n    runChanges,\r\n    securityIssues,\r\n    setup_logging,\r\n    splitLines\r\n} from \"./misc-functions\";\r\nimport { mergeDeep } from \"./misc-functions/third_party/merge-deep\";\r\nimport { parseDocument, parseLines } from \"./parse\";\r\nimport { blankRange } from \"./test/blanks\";\r\nimport {\r\n    CommandLine,\r\n    FunctionInfo,\r\n    MiscInfo,\r\n    WorkspaceSecurity\r\n} from \"./types\";\r\n\r\nconst connection = createConnection(\r\n    new IPCMessageReader(process),\r\n    new IPCMessageWriter(process)\r\n);\r\nconnection.listen();\r\n\r\n//#region Data Storage\r\nlet manager: DataManager;\r\nconst documents: Map<string, FunctionInfo> = new Map();\r\nconst fileErrors = new Map<string, { [group: string]: string }>();\r\n// Avoids race condition between parsing after change and getting completions\r\nconst parseCompletionEvents = new EventEmitter();\r\nlet security: Promise<WorkspaceSecurity>;\r\n\r\nlet started = false;\r\nlet starting = false;\r\n//#endregion\r\n\r\n// For Server Startup logic, see: https://github.com/Microsoft/language-server-protocol/issues/246\r\nconnection.onInitialize(() => {\r\n    setup_logging(connection);\r\n\r\n    manager = new DataManager();\r\n    return {\r\n        capabilities: {\r\n            completionProvider: {\r\n                resolveProvider: false,\r\n                triggerCharacters: [\" \"]\r\n            },\r\n            definitionProvider: true,\r\n            hoverProvider: true,\r\n            signatureHelpProvider: { triggerCharacters: [\" \"] },\r\n            textDocumentSync: {\r\n                change: TextDocumentSyncKind.Incremental,\r\n                openClose: true\r\n            },\r\n            workspaceSymbolProvider: true\r\n        }\r\n    };\r\n});\r\n\r\n// Handles the starting of the server\r\nconnection.onDidChangeConfiguration(async params => {\r\n    let startinglocal = false;\r\n    if (!starting) {\r\n        starting = true;\r\n        startinglocal = true;\r\n        global.mcLangSettings = {} as McFunctionSettings;\r\n        security = readSecurity();\r\n    }\r\n    await ensureSecure(params.settings);\r\n    const reparseall = () => {\r\n        for (const [uri, doc] of documents.entries()) {\r\n            loadData(uri);\r\n            parseDocument(doc, manager, parseCompletionEvents, uri);\r\n            sendDiagnostics(uri);\r\n        }\r\n    };\r\n    if (startinglocal) {\r\n        const cacheread = await manager.readCache();\r\n        if (cacheread) {\r\n            started = true;\r\n            reparseall();\r\n        }\r\n        const getDataResult = await manager.loadGlobalData();\r\n        if (typeof getDataResult === \"boolean\") {\r\n            started = true;\r\n            reparseall();\r\n        } else if (!cacheread) {\r\n            connection.sendNotification(\"mcfunction/shutdown\", getDataResult);\r\n            return;\r\n        }\r\n    }\r\n});\r\n\r\nasync function ensureSecure(settings: {\r\n    mcfunction: Partial<McFunctionSettings>;\r\n}): Promise<void> {\r\n    const secure = await security;\r\n    const newsettings = mergeDeep(\r\n        {},\r\n        global.mcLangSettings,\r\n        settings.mcfunction\r\n    ) as McFunctionSettings;\r\n\r\n    try {\r\n        const issues = securityIssues(newsettings, secure);\r\n        if (issues.length > 0) {\r\n            // Failed security checkup challenge\r\n            const safeToContinue = await actOnSecurity(\r\n                issues,\r\n                connection,\r\n                secure\r\n            );\r\n            if (!safeToContinue) {\r\n                connection.sendNotification(\r\n                    \"mcfunction/shutdown\",\r\n                    `Shutting down because of insecure settings: '${issues.join(\r\n                        \"', '\"\r\n                    )}'`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n    } catch (error) {\r\n        connection.sendNotification(\r\n            \"mcfunction/shutdown\",\r\n            `Shutting down because of insecure settings: '${error}'`\r\n        );\r\n        return;\r\n    }\r\n    global.mcLangSettings = newsettings;\r\n}\r\n\r\nfunction loadData(uri: string): void {\r\n    const doc = documents.get(uri);\r\n    if (doc && doc.pack_segments) {\r\n        const segments = doc.pack_segments;\r\n        manager\r\n            .readPackFolderData(segments.packsFolder)\r\n            .then(first => {\r\n                if (isSuccessful(first)) {\r\n                    connection.client.register(\r\n                        DidChangeWatchedFilesNotification.type,\r\n                        {\r\n                            watchers: [\r\n                                {\r\n                                    globPattern: `${segments.packsFolder}/**/*`\r\n                                }\r\n                            ]\r\n                        }\r\n                    );\r\n                }\r\n                parseDocument(doc, manager, parseCompletionEvents, uri);\r\n                sendDiagnostics(uri);\r\n                handleMiscInfo(first.misc);\r\n            })\r\n            .catch(e => {\r\n                mcLangLog(`Getting pack folder data failed for reason: '${e}'`);\r\n            });\r\n    }\r\n}\r\n\r\nconnection.onDidOpenTextDocument(params => {\r\n    const uri = params.textDocument.uri;\r\n    const uriClass = URI.parse(uri);\r\n    const parsethis = () => {\r\n        // Sanity check\r\n        if (started && documents.has(uri)) {\r\n            parseDocument(\r\n                documents.get(uri) as FunctionInfo,\r\n                manager,\r\n                parseCompletionEvents,\r\n                uri\r\n            );\r\n            sendDiagnostics(uri);\r\n        }\r\n    };\r\n    if (uriClass.scheme === \"file\") {\r\n        const fsPath = uriClass.fsPath;\r\n        const dataPackSegments = parseDataPath(fsPath);\r\n        documents.set(uri, {\r\n            lines: splitLines(params.textDocument.text),\r\n            pack_segments: dataPackSegments\r\n        });\r\n        if (started) {\r\n            loadData(uri);\r\n        }\r\n        parsethis();\r\n    } else {\r\n        documents.set(uri, {\r\n            lines: splitLines(params.textDocument.text),\r\n            pack_segments: undefined\r\n        });\r\n    }\r\n    parsethis();\r\n});\r\n\r\nconnection.onDidChangeTextDocument(params => {\r\n    const uri = params.textDocument.uri;\r\n    const document = documents.get(uri) as FunctionInfo;\r\n    const changedlines = runChanges(params, document);\r\n    if (started) {\r\n        parseLines(document, manager, parseCompletionEvents, uri, changedlines);\r\n        sendDiagnostics(uri);\r\n    }\r\n});\r\n\r\nfunction sendDiagnostics(uri: string): void {\r\n    const doc = documents.get(uri) as FunctionInfo;\r\n    const diagnostics: Diagnostic[] = [];\r\n    for (let line = 0; line < doc.lines.length; line++) {\r\n        const lineContent = doc.lines[line];\r\n        if (!!lineContent.parseInfo && !!lineContent.parseInfo.errors) {\r\n            diagnostics.push(\r\n                ...lineContent.parseInfo.errors.map(error =>\r\n                    commandErrorToDiagnostic(error, line)\r\n                )\r\n            );\r\n        }\r\n    }\r\n    connection.sendDiagnostics({ uri, diagnostics });\r\n}\r\n\r\nconnection.onDidCloseTextDocument(params => {\r\n    // Clear diagnostics - might not be needed\r\n    connection.sendDiagnostics({\r\n        diagnostics: [],\r\n        uri: params.textDocument.uri\r\n    });\r\n    documents.delete(params.textDocument.uri);\r\n});\r\n\r\nconnection.onDidChangeWatchedFiles(async e => {\r\n    const result = await manager.handleChanges(e);\r\n    handleMiscInfo(result.misc);\r\n});\r\n\r\nfunction handleMiscInfo(miscInfos: MiscInfo[]): void {\r\n    const changedFileErrors = new Set<string>();\r\n    for (const misc of miscInfos) {\r\n        if (misc.kind === \"FileError\") {\r\n            changedFileErrors.add(misc.filePath);\r\n            const value = fileErrors.get(misc.filePath);\r\n            if (value) {\r\n                fileErrors.set(misc.filePath, {\r\n                    ...value,\r\n                    [misc.group]: misc.message\r\n                });\r\n            } else {\r\n                fileErrors.set(misc.filePath, {\r\n                    group: misc.message\r\n                });\r\n            }\r\n        }\r\n        if (misc.kind === \"ClearError\") {\r\n            changedFileErrors.add(misc.filePath);\r\n            const group = misc.group;\r\n            if (group) {\r\n                const value = fileErrors.get(misc.filePath);\r\n                if (value) {\r\n                    const { [group]: _, ...rest } = value;\r\n                    fileErrors.set(misc.filePath, { ...rest });\r\n                }\r\n            } else {\r\n                fileErrors.delete(misc.filePath);\r\n            }\r\n        }\r\n    }\r\n    for (const uri of changedFileErrors) {\r\n        const value = fileErrors.get(uri);\r\n        if (value) {\r\n            const diagnostics: Diagnostic[] = [];\r\n            for (const group of Object.keys(value)) {\r\n                diagnostics.push({\r\n                    message: value[group],\r\n                    range: blankRange\r\n                });\r\n            }\r\n            connection.sendDiagnostics({ uri, diagnostics });\r\n        }\r\n    }\r\n}\r\n\r\nconnection.onCompletion(params => {\r\n    const doc = documents.get(params.textDocument.uri) as FunctionInfo;\r\n    const line = doc.lines[params.position.line];\r\n    const computeCompletionsLocal = () =>\r\n        computeCompletions(\r\n            params.position.line,\r\n            params.position.character,\r\n            doc,\r\n            manager\r\n        );\r\n    if (!started) {\r\n        return [];\r\n    }\r\n    if (line.hasOwnProperty(\"parseInfo\")) {\r\n        return computeCompletionsLocal();\r\n    } else {\r\n        return promisify(cb =>\r\n            parseCompletionEvents.once(\r\n                `${params.textDocument.uri}:${params.position.line}`,\r\n                cb\r\n            )\r\n        )().then<CompletionList>(computeCompletionsLocal);\r\n    }\r\n});\r\n\r\n// #connection.onCodeAction(); // Research what this means\r\nconnection.onDefinition(prepare<Location[]>(definitionProvider, []));\r\n// #connection.onDocumentHighlight();\r\n// #connection.onDocumentSymbol(); // This is for sections - there are none in mcfunctions\r\nconnection.onWorkspaceSymbol(query =>\r\n    getWorkspaceSymbols(manager, query.query)\r\n);\r\nconnection.onHover(prepare(hoverProvider, undefined));\r\nconnection.onSignatureHelp(prepare(signatureHelpProvider));\r\n\r\nfunction prepare<T>(\r\n    func: (\r\n        line: CommandLine,\r\n        loc: Position,\r\n        document: FunctionInfo,\r\n        manager: DataManager\r\n    ) => T,\r\n    fallback?: T\r\n): (params: TextDocumentPositionParams) => T | undefined {\r\n    return params => {\r\n        if (started) {\r\n            const doc = documents.get(params.textDocument.uri);\r\n            if (doc) {\r\n                const docLine = doc.lines[params.position.line];\r\n                return func(docLine, params.position, doc, manager);\r\n            }\r\n        }\r\n        return fallback;\r\n    };\r\n}\r\n"]}